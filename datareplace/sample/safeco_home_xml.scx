<?xml version="1.0"?>
<playback>
<functionstep name="SetErrorFile" id="1532962519" prompt="no" errormessage="Error setting Error File. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(errorfile, ezerrors.xml)>

<=this.setvariable(dwellingstatecode, <=this.extractxpathvalue(/EZHOME/GeneralInfo/RatingStateCode)>)>]]></functionstep>
<metadata>
	<vendor name="Safeco Home XML" key="qxiFrPCcbqlTAzYOPNjoLQ==
mXjdCklkYAEVVFdh/2TOKw==
bazCBt3ysst5gPrqaDh0ivc6oKEijLXgrtstoIv/uGo=
mXjdCklkYAEVVFdh/2TOKw==
bazCBt3ysst5gPrqaDh0ijnSY6fHdwVfeMP4cUO1O58=
mXjdCklkYAEVVFdh/2TOKw==" readtimeout="30" newxpath="enable" avgperfcount="50" avgperfvalue="22" />
	<errortypes>
		<error errortype="3" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Unable to login, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" />
		<error errortype="16" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Agent declined credit, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" />
		<error errortype="23" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Your quote was aborted because you did not enter the Agent ID, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" />
		<error errortype="1" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, GeneralFailure: We are not able to provide you with a SAFECO online quote, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" />
		<error errortype="22" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, An unspecified error has occured, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" />
		<error errortype="21" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Target server disconnected unexpectedly, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" />
		<error errortype="21" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Unable to receive data from target server, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" />
		<error errortype="26" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, The login information for this carrier, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" id="902224417" />
		<error errortype="27" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Quote for this carrier not available due to risk characteristics, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" id="1569338770" />
		<error errortype="25" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Your carrier login information has to be reset, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" id="633154559" />
		<error errortype="1" expression="{&lt;=this.getvariable(errormessage)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" />
	</errortypes>
	<notifications enabled="false">
		<condition name="New Development" expression="{&lt;=this.getvariable(rating_statecode)&gt; EQUAL SD}" appliesto="">
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Unable to login, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" />
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Agent declined credit, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" />
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Your quote was aborted because you did not enter the Agent ID, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" />
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, GeneralFailure: We are not able to provide you with a SAFECO online quote, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" />
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, An unspecified error has occured, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="ramya.somashekar@webcetera.com" cc="arpita@webcetera.com" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" />
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Target server disconnected unexpectedly, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="ramya.somashekar@webcetera.com" cc="arpita@webcetera.com" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" />
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Unable to receive data from target server, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="ramya.somashekar@webcetera.com" cc="arpita@webcetera.com" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" />
			<email ignore="no" expression="{&lt;=this.getvariable(errormessage)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="ramya.somashekar@webcetera.com" cc="arpita@webcetera.com" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" />
		</condition>
		<elseifcondition name="For CPLive" expression="{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 2}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 8}" appliesto="">
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Unable to login, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="kate@webcetera.com" cc="" subject="" id="730915006" />
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Agent declined credit, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" id="886935000" />
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Your quote was aborted because you did not enter the Agent ID, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" id="1744114897" />
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, GeneralFailure: We are not able to provide you with a SAFECO online quote, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" id="1591506826" />
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, An unspecified error has occured, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="txcplerrors@ezlynx.com" cc="" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" id="1931843472" />
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Target server disconnected unexpectedly, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="txcplerrors@ezlynx.com" cc="" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" id="1456241769" />
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Unable to receive data from target server, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="txcplerrors@ezlynx.com" cc="" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" id="129907514" />
			<email ignore="no" expression="{&lt;=this.getvariable(errormessage)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="txcplerrors@ezlynx.com" cc="" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" id="1455291731" />
		</elseifcondition>
		<elseifcondition name="For Quote Scenario" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, There was an error encountered in one of the Quote scenarios, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, There was an error encountered in one of the Quote scenarios, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="txqserrorgroup2@webcetera.com" cc="" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" id="94345251" />
		</elseifcondition>
		<elsecondition>
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Unable to login, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" />
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Agent declined credit, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" />
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Your quote was aborted because you did not enter the Agent ID, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" />
			<email ignore="yes" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, GeneralFailure: We are not able to provide you with a SAFECO online quote, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="" cc="" subject="" />
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, An unspecified error has occured, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="txerrorgroup2@webcetera.com" cc="" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" />
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Target server disconnected unexpectedly, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="txerrorgroup2@webcetera.com" cc="" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" />
			<email ignore="no" expression="{&lt;=this.splitindexat(&lt;=this.getvariable(errormessage)&gt;, Unable to receive data from target server, 1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="txerrorgroup2@webcetera.com" cc="" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" />
			<email ignore="no" expression="{&lt;=this.getvariable(errormessage)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" to="txerrorgroup2@webcetera.com" cc="" subject="[&lt;=this.getvariable(dwellingstatecode)&gt;]" />
		</elsecondition>
	</notifications>
	<prompts>
		<condition name="State TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
		</condition>
		<prompt name="agentid" defvalue="yes" required="yes" regex="\d{6}" regexhint="The Master ID entered should be 6 digits" />
		<prompt name="policynum" defvalue="yes" required="no" regex="" regexhint="" id="2143799550" />
		<prompt name="umbrellapolicyno" defvalue="no" required="no" regex="" regexhint="" id="594437826" />
		<prompt name="fbath" defvalue="yes" required="no" regex="" regexhint="" id="638616534" />
		<prompt name="hbath" defvalue="yes" required="no" regex="" regexhint="" id="770534917" />
		<prompt name="tbath" defvalue="yes" required="no" regex="" regexhint="" id="1271362176" />
		<prompt name="replcostdwel" defvalue="yes" required="no" regex="" regexhint="" id="777289762" />
		<prompt name="optqualitypackage" defvalue="yes" required="no" regex="" regexhint="" id="689097276" />
		<prompt name="waterdamage" defvalue="yes" required="no" regex="" regexhint="" id="668683198" />
		<prompt name="coverage_Foundations" defvalue="yes" required="no" />
		<prompt name="constructionstylea" defvalue="yes" required="no" />
		<prompt name="constructionstyleb" defvalue="yes" required="no" id="485459299" />
		<prompt name="inceptiondate" defvalue="no" required="yes" regex="^(((0[13578]|1[02])\/(0[1-9]|[12]\d|3[01])\/((1[6-9]|[2-9]\d)\d{2}))|((0[13456789]|1[012])\/(0[1-9]|[12]\d|30)\/((1[6-9]|[2-9]\d)\d{2}))|(02\/(0[1-9]|1\d|2[0-8])\/((1[6-9]|[2-9]\d)\d{2}))|(02\/29\/((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$" regexhint="Effective Date Format should be MM/dd/yyyy" id="64951056" />
		<prompt name="exteriorwalls" defvalue="yes" required="no" />
		<prompt name="affinitydiscount" defvalue="yes" required="no" id="1248763944" />
		<prompt name="coverage_effective" defvalue="no" required="no" regex="^(((0[13578]|1[02])\/(0[1-9]|[12]\d|3[01])\/((1[6-9]|[2-9]\d)\d{2}))|((0[13456789]|1[012])\/(0[1-9]|[12]\d|30)\/((1[6-9]|[2-9]\d)\d{2}))|(02\/(0[1-9]|1\d|2[0-8])\/((1[6-9]|[2-9]\d)\d{2}))|(02\/29\/((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$" regexhint="Effective Date Format should be MM/dd/yyyy" />
		<prompt name="dwellinginfo_purchasedate" defvalue="no" required="no" regex="^(((0[13578]|1[02])\/(0[1-9]|[12]\d|3[01])\/((1[6-9]|[2-9]\d)\d{2}))|((0[13456789]|1[012])\/(0[1-9]|[12]\d|30)\/((1[6-9]|[2-9]\d)\d{2}))|(02\/(0[1-9]|1\d|2[0-8])\/((1[6-9]|[2-9]\d)\d{2}))|(02\/29\/((1[6-9]|[2-9]\d)(0[48]|[2468][048]|[13579][26])|((16|[2468][048]|[3579][26])00))))$" regexhint="Purchase Date Format should be MM/dd/yyyy" id="979392171" />
	</prompts>
</metadata>
<version number="5744" />
<functionstep name="waitstep" id="2057256185" prompt="no" errormessage="Error setting Error File. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.wait(2)>]]></functionstep>
<condition name="Login Include" expression="{1 EQUAL 1}" appliesto="" id="771799328">
	<include url="includes/login/login.scx" id="245583025" />
	<functionstep name="SetLoginvariables" id="1317158920" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(username,<=this.getprofilekeyvalue(username)>)>
<=this.setvariable(password,<=this.getprofilekeyvalue(password)>)>
<=this.setvariable(passwordmgmt,<=this.getprofilekeyvalue(passwordmanagement)>)>]]></functionstep>
</condition>
<condition name="LoginCheck" expression="{&lt;=this.getprofilekeyvalue(Channel)&gt; NOTEQUAL 2}
AND
{&lt;=this.getprofilekeyvalue(Channel)&gt; NOTEQUAL 8}" appliesto="">
	<condition name="Uat Account" expression="{&lt;=this.getprofilekeyvalue(username)&gt; EQUAL 003002}
OR
{&lt;=this.getprofilekeyvalue(environment)&gt; EQUAL UAT}" appliesto="">
		<functionstep name="SetTesturl" id="1343019435" prompt="no" errormessage="Error setting Test URL. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(urlqp, https://safesite.qa.safeco.com/dpec/signin.asp?)>

<=this.setvariable(urlqp1, https://safesite.qa.safeco.com/Personal/TACRC/auto)>

<=this.setvariable(urlpersonal, safesite.qa.safeco.com/Personal/TACRC)>

<=this.setvariable(url, https://ppe-now.agent.safeco.com/start?loginmode=agent)>
<=this.setvariable(url1, https://ete-acs.safeco.com)>
<=this.setvariable(url3,https://capnpn.lmig.com/adfs/ls/?wa=wsignin1.0&wtrealm=urn%3asharepoint%3aperf-agent.safeco.com&wctx=https%3a%2f%2fperf-agent.safeco.com%2fStart%2f_layouts%2f15%2fAuthenticate.aspx%3fSource%3d%252FStart%252FPages%252FStart%252Easpx)>]]></functionstep>
	</condition>
	<elsecondition>
		<functionstep name="SetAgenturl" id="1881446892" prompt="no" errormessage="Error setting Agent URL. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(urlqp, https://safesite.safeco.com/dpec/signin.asp?)>

<=this.setvariable(urlqp1, https://safesite.safeco.com/personal/auto)>

<=this.setvariable(urlqp2, https://safesite.safeco.com/personal)>

<=this.setvariable(urlpersonal, safesite.safeco.com/personal)>

<=this.setvariable(urlmain, safesite.safeco.com)>

<=this.setvariable(url,https://now.agent.safeco.com/start)>

<=this.setvariable(url1,https://acs.safeco.com)>

<=this.setvariable(url2, https://dpec.safeco.com/DPeC)>

<=this.setvariable(url3,https://cappp.lmig.com/adfs/ls/?wa=wsignin1.0&wtrealm=urn%3asharepoint%3aagent.safeco.com&wctx=https%3a%2f%2fagent.safeco.com%2fStart%2f_layouts%2f15%2fAuthenticate.aspx%3fSource%3d%252FStart%252FPages%252FStart%252Easpx)>


<=this.setvariable(url4, https://safesite.safeco.com/personal/policyservice/NewBusinessMenu.aspx)>
]]></functionstep>
	</elsecondition>
	<condition name="Login" expression="{&lt;=this.refreshvendorcodes(2, 2, &lt;=this.getprofilekeyvalue(username)&gt;)&gt; EQUAL true}" appliesto="">
		<condition name="Check for blacklisted logins" expression="{&lt;=func.checkblacklisted(&lt;=this.getvariable(username)&gt;,&lt;=this.getvariable(password)&gt;,&lt;=this.getvariable(passwordmgmt)&gt;)&gt; EQUAL false}" appliesto="">
			<condition name="TestURL" expression="{&lt;=this.getprofilekeyvalue(environment)&gt; EQUAL UAT}" appliesto="" id="984292588">
				<httpstep name="GetLogin" id="35532869179175995">
					<script protocol="http" method="get" timeout="0" clientauthentication="no" contenttype="text/html" form="">
						<url><![CDATA[<=this.getvariable(url)>
]]></url>
					</script>
					<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/loadmainpageerror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
						<verify>
						</verify>
					</result>
				</httpstep>
				<httpstep name="SubmitLogin1" id="753308606586257">
					<script protocol="http" method="post" timeout="0" clientauthentication="no" contenttype="text/html" form="">
						<url><![CDATA[https://test-lmidp.libertymutual.com/idp/prp.wsf?wa=wsignin1.0&wtrealm=urn%3almig%3api%3asafeconowapps%3aete&wctx=https%3a%2f%2fprofilecheck.ete-dpec.safeco.com%2fHome%2fIndex%3freturnurl%3dhttps%253a%252f%252fsafesite.qa.safeco.com%252fdpecsts%252flogin.aspx%253floginmode%253dagent%2526ReturnUrl%253d%252fstart%253floginmode%253dagent%2526SAMLRequest%253dlZHBbsIwDIbvSLxDlMNuNCXtBGSUqRoXJHaBscNuITVQqU1C7G48%25252FkrHNNhh0m6W7c%25252F%25252Bf3uKuq6kV3lDB7uCYwNI7FRXFtVXJeNNsMppLFFZXQMqMmqdPy%25252BVjGLlgyNnXMWvmb8RjQiBSmc5W8wzXhaT%25252ByROpDG7cZym24nUsUnGw50pzHabmmTE2SsEbIGMt3xLITawsEjaUpuKh5PBMB7I5CUeqUQqKd84m7c2Squpow5EHpUQqHeAJUF01NE5Ni4yrlZpmojCg0FCUbl9aSON%25252FvTYhbUrINN7sHSna%25252F%25252BwAmqtbUKViXZ9oN9NnOXf7p6cxaaGsIbwXhrYrJY%25252FQryHgXUfUcdcSRHnL1wAFLlBPuv3GJt2V1Wd7zD715CpuGH7vUvi9uGzTw%25253D%25253D%2526RelayState%253df5z02g759CK-Gv-jhE8Nrl3_%2526SigAlg%253dhttp%25253A%25252F%25252Fwww.w3.org%25252F2001%25252F04%25252Fxmldsig-more%252523rsa-sha256%2526Signature%253dISG%25252BUGt0CCHcROoO6yk9gzcDbAZgiC87dWC4WOcLQFcF6aaCLu1SnVrz9UaVZ3QfkYfW9GOaVjXdrXCcPZPPi8CRY0y9FH8OVf51K0RXqmoLW4yx%25252FXmfuXSXoa7q5678sGfHDBoc%25252Biojtc4Ll4CY%25252Bd7pam4%25252B5pyt2b7CtyeqQXI%25253D&pidist_loginmode=agent]]></url>
						<parameter type="" name="pf.adapterId" value="safeconowcapnp" maxlength="">
						</parameter>
						<parameter type="" name="pf.cancel" value="" maxlength="">
						</parameter>
						<parameter type="" name="pf.ok" value="clicked" maxlength="">
						</parameter>
						<parameter type="" name="pf.pass" value="&lt;=this.getprofilekeyvalue(password)&gt;" maxlength="">
						</parameter>
						<parameter type="" name="pf.username" value="&lt;=this.getprofilekeyvalue(username)&gt;" maxlength="">
						</parameter>
					</script>
					<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
						<verify>
						</verify>
						<forms>
							<form name="NONAME1">
								<input name="wa" type="hidden" value="wsignin1.0" maxlength="">
								</input>
								<input name="wresult" type="hidden" value="&lt;wst:RequestSecurityTokenResponse xmlns:wst=&quot;http://schemas.xmlsoap.org/ws/2005/02/trust&quot;&gt;&lt;wst:TokenType&gt;http://docs.oasis-open.org/wss/oasis-wss-saml-token-profile-1.1#SAMLV1.1&lt;/wst:TokenType&gt;&lt;wst:RequestedSecurityToken&gt;&lt;saml:Assertion MajorVersion=&quot;1&quot; MinorVersion=&quot;1&quot; AssertionID=&quot;x9xVDB7ipuVTkDUWEEhlq2PEnct&quot; IssueInstant=&quot;2019-10-23T07:18:34.614Z&quot; Issuer=&quot;https://test-lmidp.libertymutual.com&quot; xmlns:saml=&quot;urn:oasis:names:tc:SAML:1.0:assertion&quot;&gt;&lt;saml:Conditions NotBefore=&quot;2019-10-23T07:08:34.614Z&quot; NotOnOrAfter=&quot;2019-10-23T19:18:34.614Z&quot;&gt;&lt;saml:AudienceRestrictionCondition&gt;&lt;saml:Audience&gt;urn:lmig:pi:safeconowapps:ete&lt;/saml:Audience&gt;&lt;/saml:AudienceRestrictionCondition&gt;&lt;/saml:Conditions&gt;&lt;saml:AuthenticationStatement AuthenticationInstant=&quot;2019-10-23T07:18:34.606Z&quot; AuthenticationMethod=&quot;urn:oasis:names:tc:SAML:1.0:am:unspecified&quot;&gt;&lt;saml:Subject&gt;&lt;saml:NameIdentifier Format=&quot;http://schemas.xmlsoap.org/claims/UPN&quot;&gt;003103@safeconow.capnp.lmig.com&lt;/saml:NameIdentifier&gt;&lt;/saml:Subject&gt;&lt;/saml:AuthenticationStatement&gt;&lt;saml:AttributeStatement&gt;&lt;saml:Subject&gt;&lt;saml:NameIdentifier Format=&quot;http://schemas.xmlsoap.org/claims/UPN&quot;&gt;003103@safeconow.capnp.lmig.com&lt;/saml:NameIdentifier&gt;&lt;/saml:Subject&gt;&lt;saml:Attribute AttributeName=&quot;upn&quot; AttributeNamespace=&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims&quot;&gt;&lt;saml:AttributeValue&gt;003103@safeconow.capnp.lmig.com&lt;/saml:AttributeValue&gt;&lt;/saml:Attribute&gt;&lt;saml:Attribute AttributeName=&quot;givenname&quot; AttributeNamespace=&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims&quot;&gt;&lt;saml:AttributeValue&gt;partner&lt;/saml:AttributeValue&gt;&lt;/saml:Attribute&gt;&lt;saml:Attribute AttributeName=&quot;surname&quot; AttributeNamespace=&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims&quot;&gt;&lt;saml:AttributeValue&gt;test&lt;/saml:AttributeValue&gt;&lt;/saml:Attribute&gt;&lt;saml:Attribute AttributeName=&quot;userType&quot; AttributeNamespace=&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims&quot;&gt;&lt;saml:AttributeValue&gt;Agent&lt;/saml:AttributeValue&gt;&lt;/saml:Attribute&gt;&lt;saml:Attribute AttributeName=&quot;loginMode&quot; AttributeNamespace=&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims&quot;&gt;&lt;saml:AttributeValue&gt;agent&lt;/saml:AttributeValue&gt;&lt;/saml:Attribute&gt;&lt;/saml:AttributeStatement&gt;&lt;ds:Signature xmlns:ds=&quot;http://www.w3.org/2000/09/xmldsig#&quot;&gt;
&lt;ds:SignedInfo&gt;
&lt;ds:CanonicalizationMethod Algorithm=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;/&gt;
&lt;ds:SignatureMethod Algorithm=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;/&gt;
&lt;ds:Reference URI=&quot;#x9xVDB7ipuVTkDUWEEhlq2PEnct&quot;&gt;
&lt;ds:Transforms&gt;
&lt;ds:Transform Algorithm=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;/&gt;
&lt;ds:Transform Algorithm=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;/&gt;
&lt;/ds:Transforms&gt;
&lt;ds:DigestMethod Algorithm=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;/&gt;
&lt;ds:DigestValue&gt;emVVupX+ADwnSOXm4zUMhT1ytlCe+MELfZ2JLIcTfSE=&lt;/ds:DigestValue&gt;
&lt;/ds:Reference&gt;
&lt;/ds:SignedInfo&gt;
&lt;ds:SignatureValue&gt;
EwIxUK0QpXeiGRNV5I2iFc6PL9xschwehD6kJWtST366530bpHa6TFWNv/Az2+sfEB1GCq/x6Wu6
bqQenACNdd8KmPBcLdatZ5oaBRmAeL3U8wFUgZPri5WE6nTHrNgofIcUL99m/XylPJR97zHKoKvc
mEge1mrP0pwNP56keGaqGvKROirjeWf1xvKuwOAsYoJKqVSFiHL4yUWtgZIBnw5H34p+uC4GOpSr
DoOVVYbjzm0JjWd7RYElkeGRyvJIZ51SGc4dbeQ+zUNNyjal8+wsfrtNBQR5aJNyqlnSP1sfUbic
70/pM6y6aMH+/MNZWMqx4pm+WAhdhxpkAx3E5A==
&lt;/ds:SignatureValue&gt;
&lt;ds:KeyInfo&gt;
&lt;ds:X509Data&gt;
&lt;ds:X509Certificate&gt;
MIIDRTCCAq4CAjWNMA0GCSqGSIb3DQEBCwUAMIGXMQswCQYDVQQGEwJVUzEWMBQGA1UECBMNTmV3
IEhhbXBzaGlyZTETMBEGA1UEBxMKUG9ydHNtb3V0aDEdMBsGA1UEChMUTGliZXJ0eSBNdXR1YWwg
R3JvdXAxHTAbBgNVBAsTFExpYmVydHkgTXV0dWFsIEdyb3VwMR0wGwYDVQQDExRMaWJlcnR5IE11
dHVhbCBHcm91cDAeFw0xNjA5MjkwNDUyMDRaFw0yNjA5MjcwNDUyMDRaMIG4MQswCQYDVQQGEwJV
UzEWMBQGA1UECAwNTmV3IEhhbXBzaGlyZTETMBEGA1UEBwwKUG9ydHNtb3V0aDEdMBsGA1UECgwU
TGliZXJ0eSBNdXR1YWwgR3JvdXAxDDAKBgNVBAsMA0VJUzElMCMGA1UEAwwccGluZ2ZlZHRzdC5s
aWJlcnR5bXV0dWFsLmNvbTEoMCYGCSqGSIb3DQEJARYZSUFNX0lEUEBMaWJlcnR5TXV0dWFsLmNv
bTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANCfKfzAYAIyIKtDpwp12791jRwKilbu
7wGY1TcE5nqJDE1f/ReVrGUmMALluHLTITz0zRnHogaPpiA/uzFgCj+iWsDkw3cFkWHjs25Rxlc6
zC+io9KODCPVVPpoNUvTucM7dEMZ/mPFr7lZei25U8Fv/LrRYLkwKs5fjyWw81XIrmCBz+diSGxS
tTTmbRoNN5rINK014pK6cfYZsFiQAhW8G4Y2VBHgVMiZUi7UoA9maMi2HAbbW1h+l0Roxg1WYcw/
g3BITFxwP6L6AVBGkakrf4j1L6+YPq/QgFK3cY0rECtCyGvFT+LtqgYYzSq1rV863eHl1S6FWdQb
iCKspF8CAwEAATANBgkqhkiG9w0BAQsFAAOBgQBmSYc9E7hAP5kfxyfi3IhRXIx+pR+bJqP4Ooj6
iAUwB5UBqWgFsMr9Di0Dr+axnqktvluyz/kRgdd3J2eDDi4qaGUBqFOWM506Pd+AMz/58PCGno06
ilew0SZBAegWhRqBrIZESAsbk+7ohNpg3jtF2UEbieOSCzSnd35GTV912Q==
&lt;/ds:X509Certificate&gt;
&lt;/ds:X509Data&gt;
&lt;/ds:KeyInfo&gt;
&lt;/ds:Signature&gt;&lt;/saml:Assertion&gt;&lt;/wst:RequestedSecurityToken&gt;&lt;wsp:AppliesTo xmlns:wsp=&quot;http://schemas.xmlsoap.org/ws/2004/09/policy&quot;&gt;&lt;wsa:EndpointReference xmlns:wsa=&quot;http://schemas.xmlsoap.org/ws/2004/08/addressing&quot;&gt;&lt;wsa:Address&gt;urn:lmig:pi:safeconowapps:ete&lt;/wsa:Address&gt;&lt;/wsa:EndpointReference&gt;&lt;/wsp:AppliesTo&gt;&lt;/wst:RequestSecurityTokenResponse&gt;" maxlength="">
								</input>
								<input name="wctx" type="hidden" value="https://profilecheck.ete-dpec.safeco.com/Home/Index?returnurl=https%3a%2f%2fsafesite.qa.safeco.com%2fdpecsts%2flogin.aspx%3floginmode%3dagent%26ReturnUrl%3d%2fstart%3floginmode%3dagent%26SAMLRequest%3dlZFNb8IwDIbvSPyHKofdaPq1AhllQuOCxC4wdtgtSl2o1CYhdjd%252B%252FkLHNNhh0m6W7cd%252BX3uGsm0SKxYdHfQGjh0gBae20Si%252BKgXrnBZGYo1CyxZQkBLbxfNaJGEkrDNklGnYNfM3IhHBUW00C1bLgtVlleXlNKsmeRknWSWnMprkKk7vx1JWkGcpC17BoQcK5nlPIXaw0khSk09F8XQUR6MkfYnGIp6IOHpjwdLbqLWknjoQWRSco5%252BHNUF4lOE5ViZUphVZlvLSgkJC3ph9rUOJ9vTYh60poZB70HQnW%252FuwAfLWdq4puF%252Fv6HcTCxbf7p6Mxq4FtwX3XivYbdY%252FQqyFkTYfYc9cSeHnL1wA5AuFbD4cBMGsv6rofbv5v4bM%252BA07HFwStw%252BffwI%253D%26RelayState%3d1K1BcCJbOUneBUT5y7bSfZFH%26SigAlg%3dhttp%253A%252F%252Fwww.w3.org%252F2001%252F04%252Fxmldsig-more%2523rsa-sha256%26Signature%3dK1jETP%252FsVRPQQk20vMOJeZHc1IZ3PRXSHr2Ee%252Buk8EsNqiOtnOd3E1s3Db2xMWVKqqC4xwlZAxNfw4AiS2ZXwr3m0APzZCXIB68hYCxLhDw0Pa%252FJv8KSbtrkQZfKbuupKsYj%252BP5k3ixOgj0Rx2vJ1jMegRv0LvK2YMBw%252FvWqqAw%253D" maxlength="">
								</input>
								<input name="" type="submit" value="Submit" maxlength="">
								</input>
							</form>
						</forms>
					</result>
				</httpstep>
				<condition name="LoginCheck" expression="{&lt;=SubmitLogin1.isformfieldpresent(NONAME1,pf.username, input)&gt; EQUAL true}" appliesto="" id="1156981685">
					<functionstep name="Addtoblacklist" id="45340830" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.addtoblacklisted(<=this.getvariable(username)>, <=this.getvariable(password)>,<=this.getvariable(passwordmgmt)>)>]]></functionstep>
					<abortstep message="Carrier Error:&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" name="LoginAbort1" id="268370965" savetest="false" savetestvalues="false" />
				</condition>
				<functionstep name="setanonymoustest" id="1295718008" prompt="no" errormessage="Error setting anonymous step. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(anonymousstep, SubmitLogin1)>]]></functionstep>
			</condition>
			<elsecondition>
				<httpstep name="GetAgentURLLogin" id="39987795130773884">
					<script protocol="http" method="get" timeout="0" clientauthentication="no" contenttype="text/html" form="">
						<url><![CDATA[<=this.getvariable(url)>]]></url>
					</script>
					<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/loadmainpageerror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
						<verify>
							<form name="NONAME1">
								<input name="pf.username" value="">
								</input>
							</form>
						</verify>
						<forms>
							<form name="NONAME1">
								<input name="pf.ok" type="hidden" value="" maxlength="">
								</input>
								<input name="pf.cancel" type="hidden" value="" maxlength="">
								</input>
								<input name="pf.adapterId" type="hidden" value="SafecoNowCAPwithAdapterSession" maxlength="">
								</input>
								<input name="pf.username" type="text" value="" maxlength="">
								</input>
								<input name="pf.pass" type="password" value="" maxlength="">
								</input>
								<input name="submit1" type="button" value="Log In" maxlength="">
								</input>
							</form>
						</forms>
					</result>
				</httpstep>
				<httpstep name="SubmitAgentLogin1" id="4373240564103539">
					<script protocol="http" method="post" timeout="0" clientauthentication="no" contenttype="text/html" form="">
						<url><![CDATA[https://lmidp.libertymutual.com/idp/prp.wsf?wa=wsignin1.0&wtrealm=urn%3almig%3api%3asafeconowapps%3aprd&wctx=https%3a%2f%2fdpec.safeco.com%2fDPeC%2fdist%2findex.html%23%2flogindirector%3freturnurl%3dhttps%253a%252f%252fsafesite.safeco.com%252fdpecsts%252flogin.aspx%253f%2526ReturnUrl%253d%252fstart%2526%253d%2526SAMLRequest%253djZExb8IwEIV3JP6D5aEbcULSNLiEKioLEl2gdOhmzAGWEjv1XVp%25252Bft2UqrBU3U7v7rundzdF1dTjVlYdHe0K3jpAYqemtii%25252FOyXvvJVOoUFpVQMoSct19bSU4yiWrXfktKv5JfM3ohDBk3GWs8W85Ga3zYssL2CskmIfir3a6STdqonScZ5k6S1nL%25252BAxACUPfKAQO1hYJGUpSHEyGcXFKLl7jnOZxjItXjmbhxjGKuqpI1GLUghUe0BDEH0V2kXaNTLLUrFrQSOhqN3B2Ehhe3q4UU17vwIKQTa%25252BLkUw89SLJWfVT4JHZ7FrwK%25252FBvxsNm9Xy18y6j0gdwNKFm%25252Fi68nkYRaWRz4YDxqb91WSfy8%25252F%25252BvWAqrrjh4CxcP3P2CQ%25253D%25253D%2526RelayState%253dQs1nxRdlPl0iHoHSIbjeJSS3%2526SigAlg%253dhttp%25253A%25252F%25252Fwww.w3.org%25252F2001%25252F04%25252Fxmldsig-more%252523rsa-sha256%2526Signature%253di1XLQzUY%25252Fs97%25252F2pfZrjHigpmjw6d%25252FMJziOY7a8zDFcnDdNJM86AofMrcFPMm2ETqfrPuqTKM1i4lgmk%25252F4lcjcz72ShIvbegisHiIdjr1qYUfhmdkGLayu0Cz%25252B1ftSMMLUo6kNudjzHy82O5eHjxZ5aqFiyfTBt3cA9JDHajiR6E%25253D&pidist_loginmode=agent]]></url>
						<parameter type="" name="pf.adapterId" value="SafecoNowCAPwithAdapterSession" maxlength="">
						</parameter>
						<parameter type="" name="pf.cancel" value="" maxlength="">
						</parameter>
						<parameter type="" name="pf.ok" value="clicked" maxlength="">
						</parameter>
						<parameter type="" name="pf.pass" value="&lt;=this.getprofilekeyvalue(password)&gt;" maxlength="">
						</parameter>
						<parameter type="" name="pf.username" value="&lt;=this.getprofilekeyvalue(username)&gt;" maxlength="">
						</parameter>
					</script>
					<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
						<verify>
						</verify>
					</result>
				</httpstep>
				<condition name="LoginCheck" expression="{&lt;=SubmitAgentLogin1.isformfieldpresent(NONAME1
,pf.username, input)&gt; EQUAL true}" appliesto="" id="258224040">
					<functionstep name="Addtoblacklist1" id="1637203368" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.addtoblacklisted(<=this.getvariable(username)>, <=this.getvariable(password)>,<=this.getvariable(passwordmgmt)>)>]]></functionstep>
					<abortstep message="Carrier Error:&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" name="LoginAbort" id="699152601" savetest="false" savetestvalues="false" />
				</condition>
				<condition name="Change Password" expression="{&lt;=java.callstringmethod(indexOf, &lt;=SubmitAgentLogin1.getoutputtextbuffer()&gt;,You must change your password)&gt; NOTEQUAL -1}
AND
{&lt;=java.callstringmethod(indexOf, &lt;=SubmitAgentLogin1.getoutputtextbuffer()&gt;,You must change your password)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="Addtoblacklist11" id="1140253224" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.addtoblacklisted(<=this.getvariable(username)>, <=this.getvariable(password)>,<=this.getvariable(passwordmgmt)>)>]]></functionstep>
					<abortstep message="Your carrier login information has to be reset. Please change the password on the carriers site then update in EZLynx by clicking on Carrier Logins at the My Account tab." name="ChangePasswordAbort" id="876561971" savetest="false" savetestvalues="false" />
				</condition>
				<functionstep name="setanonymousagent" id="831949442" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(anonymousstep, SubmitAgent)>]]></functionstep>
			</elsecondition>
		</condition>
		<elsecondition>
			<abortstep message="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepasswordrevoked, &lt;=this.getvariable(errorfile)&gt;)&gt;" name="BlacklistedLogins" id="2117949398" savetest="false" savetestvalues="false" />
		</elsecondition>
		<functionstep name="FlagRefresghVendor" id="1400855637" prompt="no" errormessage="Error setting Vendor Code. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvendorcodes(2, 2, <=this.getprofilekeyvalue(username)>, , )>]]></functionstep>
		<condition name="ProducercodeExtraction" expression="{&lt;=this.refreshvendorcodes(1, 1, &lt;=this.getprofilekeyvalue(username)&gt;)&gt; EQUAL true}" appliesto="">
			<condition name="User is Agent" expression="{&lt;=this.refreshvendorcodes(1, 1, &lt;=this.getprofilekeyvalue(username)&gt;)&gt; EQUAL true}" appliesto="">
				<condition name="CarrierChange" expression="{&lt;=SelectRatingState.isformfieldpresent(frmInput, PolicyAgentNumber,select)&gt; EQUAL true}" appliesto="">
					<httpstep name="Submit11" id="5679863351559015">
						<script protocol="http" method="post" timeout="0" clientauthentication="no" contenttype="text/html" httperrorstreamcapture="allow" form="NONAME1">
							<url><![CDATA[<=this.getvariable(url1)>/acs]]></url>
							<parameter type="hidden" name="wa" value="wsignin1.0	13	" maxlength="">
							</parameter>
							<parameter type="hidden" name="wctx" value="&lt;=prevhttpstep.extractforminputvalue(NONAME1,wctx,input)&gt;" maxlength="">
							</parameter>
							<parameter type="hidden" name="wresult" value="&lt;=prevhttpstep.extractforminputvalue(NONAME1,wresult,input)&gt;" maxlength="">
							</parameter>
						</script>
						<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
							<verify>
							</verify>
						</result>
					</httpstep>
					<httpstep name="Get11" id="11836271859268765">
						<script protocol="http" method="get" timeout="0" clientauthentication="no" contenttype="text/html" form="">
							<url><![CDATA[<=this.getvariable(url2)>/dist_2019_08_B010/index.html]]></url>
						</script>
						<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
							<verify>
							</verify>
						</result>
					</httpstep>
					<httpstep name="Get12" id="9086278519369089">
						<script protocol="http" method="get" timeout="0" clientauthentication="no" contenttype="text/html" form="">
							<url><![CDATA[<=this.getvariable(url2)>/dist_2019_08_B010/app.html]]></url>
						</script>
						<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
							<verify>
							</verify>
						</result>
					</httpstep>
					<httpstep name="Get13" id="9192459460176529">
						<script protocol="http" method="get" timeout="0" clientauthentication="no" contenttype="text/html" form="">
							<url><![CDATA[<=this.getvariable(url2)>/dist_2019_08_B010/shared/view-controller/loginDirector/loginDirector.html]]></url>
						</script>
						<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
							<verify>
							</verify>
						</result>
					</httpstep>
					<httpstep name="Get14" id="4260130108861335">
						<script protocol="http" method="get" timeout="0" clientauthentication="no" contenttype="text/html" form="">
							<url><![CDATA[<=this.getvariable(url2)>/dist_2019_08_B010/footer/Footer.html]]></url>
						</script>
						<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
							<verify>
							</verify>
						</result>
					</httpstep>
					<httpstep name="Get15" id="8441485202456942">
						<script protocol="http" method="get" timeout="0" clientauthentication="no" contenttype="text/html" form="">
							<url><![CDATA[<=this.getvariable(url2)>/dist_2019_08_B010/shared/view-controller/selectStat/selectStat.html]]></url>
						</script>
						<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
							<verify>
							</verify>
						</result>
					</httpstep>
					<httpstep name="Get17" id="9664204394968346">
						<script protocol="http" method="get" timeout="0" clientauthentication="no" contenttype="text/html" form="">
							<url><![CDATA[https://safesite.safeco.com/dpecsts/login.aspx?&ReturnUrl=/start&=&SAMLRequest=jZExT8MwEIV3pP4HywNb48ZNAZumKKJLpbK0lIHNONfWUmIH3wX680lDEe2C2E7v7rundzdFU1ey0UVLe7%2BC9xaQ2KGuPOrvTs7b6HUw6FB7UwNqsnpdPC21TEa6iYGCDRU%2FZ%2F5GDCJEcsFztpjn3JWgJBiVKjXJ0kyZWwVSZls1Lkt4k1t7w9kLROyAnHd8RyG2sPBIxlMnjVI1HN0NpXxOUy2lnkxeOZt3MZw31FN7oga1EGi2gI4gORY2JDbUOsvGomzAIqGows75xGBzeLg2dXO%2FAuqCbGKVi84sUi%2FmnBU%2FCR6Dx7aGuIb44SxsVstfMx8%2BE7MDT2du4njl0zCKwiKfDa4Ym%2FZX032uOPv3gqm44AZXJ%2BHymbMv&RelayState=mSrzvwgGnRNzmr4ye968Wf2Y&SigAlg=http%3A%2F%2Fwww.w3.org%2F2001%2F04%2Fxmldsig-more%23rsa-sha256&Signature=Tlq3xSd0kpJE9UUaHqQh4KC8kPEt5jKD3kgHJ237KdnZ2U44tBVvTN71nceJWUpKwKkB8xgTcVm5Nb4%2Ff6%2B%2Bv%2F5faRVrMWcBWB0%2BuuolLqfWYS9qCism%2BJto3QazZk9BTeQ5zQIaoTMUlYG7VXIFidqZml7CnJbBbjrA18qEU%2Bw%3D]]></url>
						</script>
						<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
							<verify>
								<form name="samlform">
									<input name="SAMLResponse" value="">
									</input>
								</form>
							</verify>
							<forms>
								<form name="samlform">
									<input name="SAMLResponse" type="hidden" value="PFJlc3BvbnNlIERlc3RpbmF0aW9uPSJodHRwczovL25vdy5hZ2VudC5zYWZlY28uY29tL0F1dGhTZXJ2aWNlcy9BY3MiIElzc3VlSW5zdGFudD0iMjAxOS0wOC0yMlQxMToyMzoxNloiIElEPSJpZGU5MmVhOTE5OTU0MTQ5YTc5ZTIyNGY5M2RkZWIyZmM2IiBJblJlc3BvbnNlVG89ImlkZTkyZWE5MTk5NTQxNDlhNzllMjI0ZjkzZGRlYjJmYzYiIFZlcnNpb249IjIuMCIgeG1sbnM9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+PElzc3VlciBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDpuYW1laWQtZm9ybWF0OmVudGl0eSIgeG1sbnM9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPmh0dHBzOi8vc2FmZXNpdGUuc2FmZWNvLmNvbS9kcGVjc3RzL2xvZ2luLmFzcHg8L0lzc3Vlcj48U3RhdHVzPjxTdGF0dXNDb2RlIFZhbHVlPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6c3RhdHVzOlN1Y2Nlc3MiIC8+PC9TdGF0dXM+PEFzc2VydGlvbiBJRD0iXzZiZTdkMjYwLWQ5OTUtNGY3ZC1hNTMzLWMzMmE5NWIxMzdhYSIgSXNzdWVJbnN0YW50PSIyMDE5LTA4LTIyVDExOjIzOjE2Ljk3N1oiIFZlcnNpb249IjIuMCIgeG1sbnM9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPjxJc3N1ZXI+aHR0cHM6Ly9zYWZlc2l0ZS5zYWZlY28uY29tL2RwZWNzdHMvbG9naW4uYXNweDwvSXNzdWVyPjxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxTaWduZWRJbmZvPjxDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIiAvPjxTaWduYXR1cmVNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNyc2Etc2hhMjU2IiAvPjxSZWZlcmVuY2UgVVJJPSIjXzZiZTdkMjYwLWQ5OTUtNGY3ZC1hNTMzLWMzMmE5NWIxMzdhYSI+PFRyYW5zZm9ybXM+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNlbnZlbG9wZWQtc2lnbmF0dXJlIiAvPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiIC8+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGVuYyNzaGEyNTYiIC8+PERpZ2VzdFZhbHVlPkRhdUlBOXNxSWxMUXJITE1oMzE4dXhMU3RYY2RGT0xTK2cwTXkvWW93YVk9PC9EaWdlc3RWYWx1ZT48L1JlZmVyZW5jZT48L1NpZ25lZEluZm8+PFNpZ25hdHVyZVZhbHVlPjhMdS80WFR0a2RZc1Jjdyt6ZUpnSTBxYmd1bG9yTHA2b2IrdXczcEpwZjJkblB5UE1zZEVSUTk0Vlk3NmJ2OGZiMGV3SWF0cnpFMTFtOFRuV3NqY3dsY3lvOFVpbEQ2SHBzUlB5dXZQK3FsSUpleHBVSXlkcnJITmRhK2ZjY0lVMTEza2FCV2JWWC9OZnBvUzlyVng1TkI0Tm1YOVlzRXN0MjRoS0dzL29mQ2FHUWNIT0lXektoMmRTbzhTMy94ZnROQU5xMkhIeGtsd1RCREM3U3JZRVFWVnY0QXUwU3VnK3lVRlV5YlJBd09LVDRtUjR5NFdTdVJVR0tRM2U0TC8xaDFwb1loRTBPa1Zxc0ZOdkp4Qmo3K3BRTVRBeXhUbi83c3dwamZwcy9PaXI0RXBVdkxtazFVNkF4Q3ZGT0tVemRXazdlNXk4cVEvR0cyd0htbk9ydz09PC9TaWduYXR1cmVWYWx1ZT48S2V5SW5mbz48WDUwOURhdGE+PFg1MDlDZXJ0aWZpY2F0ZT5NSUlHL0RDQ0JlU2dBd0lCQWdJUWJBL2czbXpCV0FyRUlsVHYzOGQxQURBTkJna3Foa2lHOXcwQkFRc0ZBREIrTVFzd0NRWURWUVFHRXdKVlV6RWRNQnNHQTFVRUNoTVVVM2x0WVc1MFpXTWdRMjl5Y0c5eVlYUnBiMjR4SHpBZEJnTlZCQXNURmxONWJXRnVkR1ZqSUZSeWRYTjBJRTVsZEhkdmNtc3hMekF0QmdOVkJBTVRKbE41YldGdWRHVmpJRU5zWVhOeklETWdVMlZqZFhKbElGTmxjblpsY2lCRFFTQXRJRWMwTUI0WERURTNNRGN6TVRBd01EQXdNRm9YRFRJd01EY3pNVEl6TlRrMU9Wb3dnWk14Q3pBSkJnTlZCQVlUQWxWVE1SWXdGQVlEVlFRSURBMU9aWGNnU0dGdGNITm9hWEpsTVJNd0VRWURWUVFIREFwUWIzSjBjMjF2ZFhSb01SMHdHd1lEVlFRS0RCUk1hV0psY25SNUlFMTFkSFZoYkNCSGNtOTFjREViTUJrR0ExVUVDd3dTVUdWeWMyOXVZV3dnU1c1emRYSmhibU5sTVJzd0dRWURWUVFEREJKRVVHVkRVMVJUTG5OaFptVmpieTVqYjIwd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUR5N2hvajM3N2VFdEduQlErOTlpMUVlL1g3SVNVSGl6eFpuMzNoNDhqZHVzWUVFbzFkeC83VUFZWEllTG1wUkE2VEc4alIrMkFsVnV6dlpLSGxFOTRVclhqbmluWEI0YldPVVYrcUtmOWFOdURzR3lFT0M3V1QyZVNPWUJNbFhhSTAyM1Q5L1FBcEIxaWZKbXZpcXNORFcyQnFrRnEyWXdva29HcG9BczdLbVE2N1EwUWttVWpSYXo2KzBEZDJjemsxdk5iRU4vMzM1allpcHkwT0R5VS9nTE9EcWc0TzJHVzZ3aXNzdUlRWlo0ZUJwYVJ4YTJjdnBIS1dwb0NSdk9Pc0Y2NlpBTmZSVm5sdUhNUUVpcHNGdW9iQkowVlVOR3k5Wkcrd3ZqSnZxbG13V3luRjJMR2hyNTE2UHRGOGVuQVRmdHdwVjBBTGlPS0tDRTQyYjA2aEFnTUJBQUdqZ2dOZU1JSURXakFkQmdOVkhSRUVGakFVZ2hKRVVHVkRVMVJUTG5OaFptVmpieTVqYjIwd0NRWURWUjBUQkFJd0FEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNR0VHQTFVZElBUmFNRmd3VmdZR1o0RU1BUUlDTUV3d0l3WUlLd1lCQlFVSEFnRVdGMmgwZEhCek9pOHZaQzV6ZVcxallpNWpiMjB2WTNCek1DVUdDQ3NHQVFVRkJ3SUNNQmtNRjJoMGRIQnpPaTh2WkM1emVXMWpZaTVqYjIwdmNuQmhNQjhHQTFVZEl3UVlNQmFBRkY5Z3oyR1FWZCtFUXhTS1lDcXk5WHIwUXhqdk1Dc0dBMVVkSHdRa01DSXdJS0Flb0J5R0dtaDBkSEE2THk5emN5NXplVzFqWWk1amIyMHZjM011WTNKc01GY0dDQ3NHQVFVRkJ3RUJCRXN3U1RBZkJnZ3JCZ0VGQlFjd0FZWVRhSFIwY0RvdkwzTnpMbk41YldOa0xtTnZiVEFtQmdnckJnRUZCUWN3QW9ZYWFIUjBjRG92TDNOekxuTjViV05pTG1OdmJTOXpjeTVqY25Rd2dnSHpCZ29yQmdFRUFkWjVBZ1FDQklJQjR3U0NBZDhCM1FCMkFOM3JIU3Q2RFUrbUlJdUJyWUZvY0g0dWpwMEIxVnlJalQwUnhNMjI3TDdNQUFBQlhab0gyRHdBQUFRREFFY3dSUUloQU9EdkY2VkVlQ24wMHlZZW0wNEROTXMrUHZZNjhiRGpDVldVOTJJdFpCVlRBaUJCc2NvcXpkMjlNLzNZMjAvamd5OXpyLzVIdjhHbnJlckdPZVVFdHdzWmVRQjFBS1M1Q1pDMEdGZ1VoN3NUb3N4bmNBbzhOWmdFK1J2ZnVPTjN6UTdJRGR3UUFBQUJYWm9IMkZZQUFBUURBRVl3UkFJZ01ROStJNjVPSXpEUGROQ1ROQzIrbys0bVBUZWt2NXp2aHY2dktHcjBWbE1DSUUwRDZHdjE1RC9CaVkrQ1o2eGdNdy9uVjMyY2dKaU9ucnF4VzBMYmN4QmtBSFVBN2t1OXQzWE9ZTHJoUW1rZnErR2VacU1QZmwrd2N0aURBTVI3aVhxby9jc0FBQUZkbWdmaFp3QUFCQU1BUmpCRUFpQmNpT3VyczJyZHZqbWMyejZHQ0ttbDd3YlY2WHNJYlFhSlZMYThPSHI5TndJZ1UyaVl6dzJzNTNiZ0NUYk1MZnJOL0Q1TVVhTlo5S2xaMGhCV1ZCTWhvRjRBZFFDOGVPSGZ4Zlk4YUVaSk0wMmhENkZmQ1hscElBbkFnYlR6OXBGL1B0bTRwUUFBQVYyYUI5azJBQUFFQXdCR01FUUNJREJROENwdkxZZ01OdHVRY3pudnE2aHNzUHI5ckNsU21qc2Y0N2pDR1FGREFpQk0yMTRjVWtuTXBPeS95N3Z0TDlpNmxHSVdKc3pjSWRFdTU1aGoxNGMzNERBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQXNKTnlBM3BLRkh3RUxaQ0JOUXhvc0kvN0NNRHBIdlh0dENDeFl6Y3paY2NKb3JpTko0alUvV09tUVVCRlFSdEVqOVNmb0toT2dobUdteFBvcmVDSnpGOWZFcFJRZXltZHhFT0dla0NnVEV5amo2dll4QnB5T0ZiV202blo3RkRvOGd2V3JJQjlLdm51MnJOUDVKdlNiZ2FFZDFEOVFqam41Vit3N3lISjZ5NmM4OVlmN0trREFRcDFDQUdDREtLWEZUNlRQSnRSSkdqUzMyeU1oVVFhSXdlMm9vQWNSZWpNSXVCMVgzSTdweU9zbVlHc1h0YXhUUEQ4djhoTzJURDZmQXZYKzd4bzlBRWVoQkZsak0zaUhxWmVvQU9ybU95cFBPZC9TMWxvQ3cxa2tuM2NkNHQ3ZmFTTFo2akd4TW9kSnNkUGx2RUhLWVJLUERHM3I2dG1hUT09PC9YNTA5Q2VydGlmaWNhdGU+PC9YNTA5RGF0YT48L0tleUluZm8+PC9TaWduYXR1cmU+PFN1YmplY3Q+PE5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMTpuYW1laWQtZm9ybWF0OnVuc3BlY2lmaWVkIj5ycGluZWRhPC9OYW1lSUQ+PFN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj48U3ViamVjdENvbmZpcm1hdGlvbkRhdGEgSW5SZXNwb25zZVRvPSJpZGU5MmVhOTE5OTU0MTQ5YTc5ZTIyNGY5M2RkZWIyZmM2IiBOb3RPbk9yQWZ0ZXI9IjIwMTktMDgtMjJUMTE6MjU6MTYuOTc3WiIgUmVjaXBpZW50PSJodHRwczovL25vdy5hZ2VudC5zYWZlY28uY29tL0F1dGhTZXJ2aWNlcy9BY3MiIC8+PC9TdWJqZWN0Q29uZmlybWF0aW9uPjwvU3ViamVjdD48Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMTktMDgtMjJUMTE6MjM6MTYuOTYyWiIgTm90T25PckFmdGVyPSIyMDE5LTA4LTIyVDExOjI0OjE2Ljk2MloiPjxBdWRpZW5jZVJlc3RyaWN0aW9uPjxBdWRpZW5jZT5odHRwczovL25vdy5hZ2VudC5zYWZlY28uY29tL0F1dGhTZXJ2aWNlczwvQXVkaWVuY2U+PC9BdWRpZW5jZVJlc3RyaWN0aW9uPjwvQ29uZGl0aW9ucz48QXV0aG5TdGF0ZW1lbnQgQXV0aG5JbnN0YW50PSIyMDE5LTA4LTIyVDExOjIzOjE2Ljk3N1oiPjxBdXRobkNvbnRleHQ+PEF1dGhuQ29udGV4dENsYXNzUmVmPnVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphYzpjbGFzc2VzOlBhc3N3b3JkPC9BdXRobkNvbnRleHRDbGFzc1JlZj48L0F1dGhuQ29udGV4dD48L0F1dGhuU3RhdGVtZW50PjxBdHRyaWJ1dGVTdGF0ZW1lbnQ+PEF0dHJpYnV0ZSBOYW1lPSJEcGVjLVVzZXItVHlwZSI+PEF0dHJpYnV0ZVZhbHVlPkFnZW50PC9BdHRyaWJ1dGVWYWx1ZT48L0F0dHJpYnV0ZT48L0F0dHJpYnV0ZVN0YXRlbWVudD48L0Fzc2VydGlvbj48L1Jlc3BvbnNlPg==" maxlength="">
									</input>
									<input name="RelayState" type="hidden" value="mSrzvwgGnRNzmr4ye968Wf2Y" maxlength="">
									</input>
									<input name="" type="submit" value="Submit" maxlength="">
									</input>
								</form>
							</forms>
						</result>
					</httpstep>
					<httpstep name="submit17" id="9862635121239886">
						<script protocol="http" method="post" timeout="0" clientauthentication="no" contenttype="text/html" httperrorstreamcapture="allow" form="samlform">
							<url><![CDATA[https://now.agent.safeco.com/AuthServices/Acs]]></url>
							<parameter type="hidden" name="RelayState" value="&lt;=prevhttpstep.extractforminputvalue(samlform,RelayState,input)&gt;" maxlength="">
							</parameter>
							<parameter type="hidden" name="SAMLResponse" value="&lt;=prevhttpstep.extractforminputvalue(samlform,SAMLResponse,input)&gt;" maxlength="">
							</parameter>
						</script>
						<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="Onerror">
							<verify>
							</verify>
						</result>
					</httpstep>
					<httpstep name="Getnewbussiness" id="7359514251866923">
						<script protocol="http" method="get" timeout="0" clientauthentication="no" contenttype="text/html" form="">
							<url><![CDATA[<=this.getvariable(url4)>]]></url>
						</script>
						<result errormessage="Unable to initiate Personal Lines quoting on carrier web site. Try again later. Please contact EZLynx support for any further assistance." onerror="Onerror">
							<verify>
								<form name="frmInput">
									<input name="__VIEWSTATE" value="">
									</input>
								</form>
							</verify>
							<forms>
								<form name="frmInput">
									<input name="__VIEWSTATE" type="hidden" value="/wEPDwUKMTM2NDQ1NTM2MmQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgEFCk5leHRCdXR0b25yQfT92fAGyzPB5VfjPZG3lnkmMQ==" maxlength="">
									</input>
									<input name="__VIEWSTATEGENERATOR" type="hidden" value="160BBDCA" maxlength="">
									</input>
									<input name="NextButton" type="image" value="" maxlength="">
									</input>
									<select name="LineList" value="">
										<option name="Auto" value="Auto">
										</option>
										<option name="   Antiques &amp; Classic" value="Auto">
										</option>
										<option name="   Motorhome/Trailer/RV" value="Auto">
										</option>
										<option name="Homeowners" value="Home">
										</option>
										<option name="   Renters" value="Home">
										</option>
										<option name="   Condominium" value="Home">
										</option>
										<option name="Landlord Protection (Fire)" value="Fire">
										</option>
										<option name="Motorcycle" value="Motorcycle">
										</option>
										<option name="   ATV" value="Motorcycle">
										</option>
										<option name="   Golf Cart" value="Motorcycle">
										</option>
										<option name="   Snowmobile" value="Motorcycle">
										</option>
										<option name="Watercraft" value="Boat">
										</option>
										<option name="Umbrella" value="Umbrella">
										</option>
										<option name="Pet Health Insurance" value="Pet Health Insurance">
										</option>
									</select>
									<select name="StateList" value="">
										<option name="AL" value="AL">
										</option>
										<option name="AK" value="AK">
										</option>
										<option name="AZ" value="AZ">
										</option>
										<option name="AR" value="AR">
										</option>
										<option name="CA" value="CA">
										</option>
										<option name="CO" value="CO">
										</option>
										<option name="CT" value="CT">
										</option>
										<option name="FL" value="FL">
										</option>
										<option name="GA" value="GA">
										</option>
										<option name="ID" value="ID">
										</option>
										<option name="IL" value="IL">
										</option>
										<option name="IN" value="IN">
										</option>
										<option name="IA" value="IA">
										</option>
										<option name="KS" value="KS">
										</option>
										<option name="KY" value="KY">
										</option>
										<option name="LA" value="LA">
										</option>
										<option name="MA" value="MA">
										</option>
										<option name="MD" value="MD">
										</option>
										<option name="ME" value="ME">
										</option>
										<option name="MI" value="MI">
										</option>
										<option name="MN" value="MN">
										</option>
										<option name="MS" value="MS">
										</option>
										<option name="MO" value="MO">
										</option>
										<option name="MT" value="MT">
										</option>
										<option name="NE" value="NE">
										</option>
										<option name="NV" value="NV">
										</option>
										<option name="NH" value="NH">
										</option>
										<option name="NM" value="NM">
										</option>
										<option name="NY" value="NY">
										</option>
										<option name="NC" value="NC">
										</option>
										<option name="ND" value="ND">
										</option>
										<option name="OH" value="OH">
										</option>
										<option name="OK" value="OK">
										</option>
										<option name="OR" value="OR">
										</option>
										<option name="PA" value="PA">
										</option>
										<option name="SC" value="SC">
										</option>
										<option name="SD" value="SD">
										</option>
										<option name="TN" value="TN">
										</option>
										<option name="TX" value="TX">
										</option>
										<option name="UT" value="UT">
										</option>
										<option name="VT" value="VT">
										</option>
										<option name="VA" value="VA">
										</option>
										<option name="WA" value="WA">
										</option>
										<option name="WV" value="WV">
										</option>
										<option name="WI" value="WI">
										</option>
										<option name="WY" value="WY">
										</option>
									</select>
								</form>
							</forms>
						</result>
					</httpstep>
					<httpstep name="SelectRatingState" id="878121498154712">
						<script protocol="http" method="post" httperrorstreamcapture="allow" timeout="0" clientauthentication="no" contenttype="text/html" form="">
							<url><![CDATA[<=this.getvariable(url4)>]]></url>
							<parameter type="" name="__VIEWSTATE" value="&lt;=prevhttpstep.extractforminputvalue(frmInput,__VIEWSTATE,input)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="__VIEWSTATEGENERATOR" value="&lt;=prevhttpstep.extractforminputvalue(frmInput,__VIEWSTATEGENERATOR
,input)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="LineList" value="Home" maxlength="">
							</parameter>
							<parameter type="" name="NextButton.x" value="33" maxlength="">
							</parameter>
							<parameter type="" name="NextButton.y" value="12" maxlength="">
							</parameter>
							<parameter type="" name="StateList" value="&lt;=this.getvariable(dwellingstatecode)&gt;" maxlength="">
							</parameter>
						</script>
						<result errormessage="Unable to initiate Personal Lines quoting on carrier web site. Try again later. Please contact EZLynx support for any further assistance." onerror="Onerror">
							<verify>
								<form name="frmInput">
									<input name="__ContextGUID" value="">
									</input>
								</form>
							</verify>
							<forms>
								<form name="frmInput">
									<input name="__ContextGUID" type="hidden" value="eba02ddd-279e-420e-b1ab-282e2d121ba5" maxlength="">
									</input>
									<input name="__ModeID" type="hidden" value="2" maxlength="">
									</input>
									<input name="__FormIndexing" type="hidden" value="1" maxlength="">
									</input>
									<input name="__FieldList" type="hidden" value="Policy.CompanyOverrideYN!999|Policy.RatingState!8|Policy.Product!999|Policy.MarketTier!999|Policy.MarketTierTranslation!999|Policy.AgentNumber!8|Policy.ProducerName!1|Policy.PaperApplication.ApprovedYN!999|Policy.InternationalTravelerYN!5|Policy.QuoteDate!2|Policy.EffectiveDate!2|Policy.DiscountText!999|Policy.OriginalQuoteDate!1|Policy.Client.AgentCustomerID!1|Policy.DescriptiveName!1|Policy.Client.Person.FirstName!1|Policy.Client.Person.MiddleName!1|Policy.Client.Person.LastName!1|Policy.Client.Person.SocialSecurityNumberStatus!8|Policy.Client.Person.SocialSecurityNumber!10|Policy.Client.Person.Birthdate!20|Policy.Client.HomePhoneNumber!6|Policy.Client.EmailAddress!1|Policy.Client.MailingLocation.AddressLine1!1|Policy.Client.MailingLocation.AddressLine2!1|Policy.Client.MailingLocation.ZipCode!1|Policy.Client.MailingLocation.City!1|Policy.Client.MailingLocation.State!8|Policy.Client.MailingLocation.OverrideGISYN!999|Policy.Client.MailingLocation.OverrideUSPSAddressEditYN!999|Policy.Client.MailingLocation.TaxCode!999|Policy.Client.MailingLocation.CountyTaxCode!999|Policy.AutoData.VehicleGaragingAddressYN!14|Policy.AutoData.AutoBusinessType!8|Policy.AutoData.AnyIncidentsOnPolicyYN!14|Policy.AdditionalInterestsYN!14|Policy.AutoData.MultipleCarDiscYN!5|Policy.AutoData.NamedNonOwnerYN!5|Policy.AutoData.MultipleOwnersYN!999|Policy.AutoData.AllOwnersSameHouseholdYN!999|Policy.AutoData.VerifiableYN!14|Policy.AutoData.DeliveryVehicleYN!14|Policy.AutoData.LongevityCrDate!2|Policy.AutoData.AccidentFreeDate!2|Policy.OfferCode!1|Policy.Transaction.StateLaunchList!999|Policy.OriginalEffectiveDate!999|Policy.AutoData.SNAP3StateYN!15|Policy.AutoData.rPolicyAdvanceQuotingDays!999|Policy.AutoData.AdvanceQuotingDaysScorecard!999|Policy.AutoData.AdvanceQuotingDiscYNScorecard!999|Policy.AutoData.rPolicyHomeownersDiscYN!999|Policy.AutoData.rPolicyNumberChildren!15|Policy.AutoData.rPolicyNumberMarried!15|Policy.AutoData.SNAP3MultipleVersionStateYN!15|Policy.RewriteCustomerSinceDate!15|Policy.Launch.PriceMatchUserYN!8|Policy.SourceData.AMMiscErrorYN!999|Policy.SourceData.AMNameAddressErrorYN!999|Policy.AutoData.CaliforniaAutoNewDiscountsYN!15|Policy.SourceData.SplitCountLOB!15|Policy.AcordClientAppOrg!15|Policy.AcordClientAppName!15|Policy.OriginSource!15|Policy.PMUserAccessed!999|Policy.AutoData.PremiumOwedYN!14|Policy.AutoData.PremiumOwedCollectedYN!14|Policy.AutoData.PremiumOwedOverrideYN!14|Policy.SourceData.RenewalConversionCancelRewriteYN!999|Policy.Launch.AKTruePricingPOAUserYN!8|Policy.Launch.SpecialtyLowTouchLaunchValues!8|Policy.AutoData.RewindRetiredMessageDisplayedYN!1|Policy.AutoData.OldRewindFieldsClearedMsgDisplayedYN!999|Policy.QuoteEntryID!1|Policy.BookTransferID!1|Policy.AutoData.DriverAffidavitMsgYN!1|Policy.Launch.NYPDInspectionLaunchedYN!999|Policy.AgencyPhoneNumber!15|Policy.AgencyEmailAddress!15|Policy.InternationalRVHiddenValue!15" maxlength="">
									</input>
									<input name="PolicyVersion" type="hidden" value="1" maxlength="">
									</input>
									<input name="__ActivityType" type="hidden" value="NewBusiness" maxlength="">
									</input>
									<input name="__ActivityTypeID" type="hidden" value="2" maxlength="">
									</input>
									<input name="__VIEWSTATE" type="hidden" value="/wEPDwUKLTgwODM5MjMxMGQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgUFBEJhY2sFBkNsaWVudAUESW5mbwUEU2F2ZQUIQ29udGludWXlxbppE8hL0+3h8pXLYoqury1mzQ==" maxlength="">
									</input>
									<input name="__VIEWSTATEGENERATOR" type="hidden" value="D6B8C66C" maxlength="">
									</input>
									<input name="__EVENTTARGET" type="hidden" value="" maxlength="">
									</input>
									<input name="__EVENTARGUMENT" type="hidden" value="" maxlength="">
									</input>
									<input name="__EVENTVALIDATION" type="hidden" value="/wEdAAazWtQ1UFNqawgsFMFN9uzwQSrjfB6vpYOOJQjPgcwPpwR6ocj9daiZ497rTiYpH9Cfi5h+cIyul0CevEg4qn5tKCEqvWNYh63OgObW+Ro6m+R9DZU3vcGdqoDJuK9wyeIjG9KIljac+2L+/OAVlqfVFXVgTA==" maxlength="">
									</input>
									<input name="PolicyInternationalRVHiddenValue" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicyDiscountText" type="hidden" value="&lt;b&gt;&lt;font color='green'&gt;Discount&lt;/font&gt;&lt;/b&gt;" maxlength="">
									</input>
									<input name="PolicyClientPersonSocialSecurityNumber" type="hidden" value="--" maxlength="">
									</input>
									<input name="PolicyClientHomePhoneNumber" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicyAgencyPhoneNumber" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicyAgencyEmailAddress" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicyAutoDataSNAP3StateYN" type="hidden" value="N" maxlength="">
									</input>
									<input name="PolicyAutoDatarPolicyNumberChildren" type="hidden" value="0" maxlength="">
									</input>
									<input name="PolicyAutoDatarPolicyNumberMarried" type="hidden" value="0" maxlength="">
									</input>
									<input name="PolicyAutoDataSNAP3MultipleVersionStateYN" type="hidden" value="N" maxlength="">
									</input>
									<input name="PolicyRewriteCustomerSinceDate" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicyAutoDataCaliforniaAutoNewDiscountsYN" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicySourceDataSplitCountLOB" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicyAcordClientAppOrg" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicyAcordClientAppName" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicyOriginSource" type="hidden" value="" maxlength="">
									</input>
									<input name="" type="submit" value="" maxlength="">
									</input>
									<input name="PolicyAutoDataRewindRetiredMessageDisplayedYN" type="text" value="" maxlength="1">
									</input>
									<input name="PolicyAutoDataDriverAffidavitMsgYN" type="text" value="" maxlength="1">
									</input>
									<input name="PolicyProducerName" type="text" value="" maxlength="20">
									</input>
									<input name="PolicyInternationalTravelerYN" type="checkbox" value="Y" maxlength="">
									</input>
									<input name="PolicyBookTransferID" type="text" value="" maxlength="17">
									</input>
									<input name="PolicyQuoteDate" type="text" value="08/22/2019" maxlength="10">
									</input>
									<input name="PolicyEffectiveDate" type="text" value="" maxlength="10">
									</input>
									<input name="PolicyOriginalQuoteDate" type="text" value="8/22/2019" maxlength="10">
									</input>
									<input name="PolicyClientAgentCustomerID" type="text" value="" maxlength="30">
									</input>
									<input name="PolicyDescriptiveName" type="text" value="" maxlength="30">
									</input>
									<input name="PolicyQuoteEntryID" type="text" value="" maxlength="17">
									</input>
									<input name="PolicyClientPersonFirstName" type="text" value="" maxlength="16">
									</input>
									<input name="PolicyClientPersonMiddleName" type="text" value="" maxlength="11">
									</input>
									<input name="PolicyClientPersonLastName" type="text" value="" maxlength="20">
									</input>
									<input name="PolicyClientPersonSocialSecurityNumberFirstThree" type="text" value="" maxlength="3">
									</input>
									<input name="PolicyClientPersonSocialSecurityNumberMiddleTwo" type="text" value="" maxlength="2">
									</input>
									<input name="PolicyClientPersonSocialSecurityNumberLastFour" type="text" value="" maxlength="4">
									</input>
									<input name="PolicyClientPersonBirthdate" type="text" value="" maxlength="10">
									</input>
									<input name="PolicyClientHomePhoneNumberAreaCode" type="text" value="" maxlength="3">
									</input>
									<input name="PolicyClientHomePhoneNumberPrefix" type="text" value="" maxlength="3">
									</input>
									<input name="PolicyClientHomePhoneNumberSuffix" type="text" value="" maxlength="4">
									</input>
									<input name="PolicyClientEmailAddress" type="text" value="" maxlength="50">
									</input>
									<input name="PolicyClientMailingLocationAddressLine1" type="text" value="" maxlength="30">
									</input>
									<input name="PolicyClientMailingLocationAddressLine2" type="text" value="" maxlength="30">
									</input>
									<input name="PolicyClientMailingLocationZipCode" type="text" value="" maxlength="10">
									</input>
									<input name="PolicyClientMailingLocationCity" type="text" value="" maxlength="16">
									</input>
									<input name="PolicyAutoDataVehicleGaragingAddressYN" type="radio" value="Y" maxlength="">
									</input>
									<input name="PolicyAutoDataVehicleGaragingAddressYN" type="radio" value="N" maxlength="">
									</input>
									<input name="PolicyAutoDataAnyIncidentsOnPolicyYN" type="radio" value="Y" maxlength="">
									</input>
									<input name="PolicyAutoDataAnyIncidentsOnPolicyYN" type="radio" value="N" maxlength="">
									</input>
									<input name="PolicyAdditionalInterestsYN" type="radio" value="Y" maxlength="">
									</input>
									<input name="PolicyAdditionalInterestsYN" type="radio" value="N" maxlength="">
									</input>
									<input name="PolicyAutoDataMultipleCarDiscYN" type="checkbox" value="Y" maxlength="">
									</input>
									<input name="PolicyAutoDataNamedNonOwnerYN" type="checkbox" value="Y" maxlength="">
									</input>
									<input name="PolicyAutoDataVerifiableYN" type="radio" value="Y" maxlength="">
									</input>
									<input name="PolicyAutoDataVerifiableYN" type="radio" value="N" maxlength="">
									</input>
									<input name="PolicyAutoDataDeliveryVehicleYN" type="radio" value="Y" maxlength="">
									</input>
									<input name="PolicyAutoDataDeliveryVehicleYN" type="radio" value="N" maxlength="">
									</input>
									<input name="PolicyAutoDataLongevityCrDate" type="text" value="" maxlength="10">
									</input>
									<input name="PolicyAutoDataAccidentFreeDate" type="text" value="" maxlength="10">
									</input>
									<input name="PolicyOfferCode" type="text" value="" maxlength="10">
									</input>
									<input name="PolicyAutoDataPremiumOwedYN" type="radio" value="Y" maxlength="">
									</input>
									<input name="PolicyAutoDataPremiumOwedYN" type="radio" value="N" maxlength="">
									</input>
									<input name="PolicyAutoDataPremiumOwedCollectedYN" type="radio" value="Y" maxlength="">
									</input>
									<input name="PolicyAutoDataPremiumOwedCollectedYN" type="radio" value="N" maxlength="">
									</input>
									<input name="PolicyAutoDataPremiumOwedOverrideYN" type="radio" value="Y" maxlength="">
									</input>
									<input name="PolicyAutoDataPremiumOwedOverrideYN" type="radio" value="N" maxlength="">
									</input>
									<input name="Back" type="image" value="" maxlength="">
									</input>
									<input name="Client" type="image" value="" maxlength="">
									</input>
									<input name="Info" type="image" value="" maxlength="">
									</input>
									<input name="Save" type="image" value="" maxlength="">
									</input>
									<input name="Continue" type="image" value="" maxlength="">
									</input>
									<select name="PolicyLaunchPriceMatchUserYN" value="">
										<option name="" value="">
										</option>
										<option name="SAFECO_MASTER\gpi-uwbktransfer-rw01" value="SAFECO_MASTER\gpi-uwbktransfer-rw01">
										</option>
										<option name="LM\gpi-uwbktransfer-rw01" value="LM\gpi-uwbktransfer-rw01">
										</option>
										<option name="Test_NewNTGroup" value="SAFECO_MASTER\gpi-UWbktransfer-test">
										</option>
										<option name="Test_LMNewNTGroup" value="LM\gpi-UWbktransfer-test">
										</option>
										<option name="TEST_3" value="ECDevPriceMatching">
										</option>
										<option name="SKIP_1" value="N">
										</option>
										<option name="SKIP_2" value="Y">
										</option>
										<option name="SAFECO_MASTER\NANOLS" value="SAFECO_MASTER\NANOLS">
										</option>
										<option name="TEST_Arjun" value="SAFECO_MASTER\ARJBAR">
										</option>
										<option name="TEST_Aniruddha" value="SAFECO_MASTER\ANIRGH">
										</option>
										<option name="TEST_Sakthivel" value="SAFECO_MASTER\SAKBET">
										</option>
										<option name="TEST_Anirdan" value="SAFECO_MASTER\ANICHA">
										</option>
										<option name="TEST_Manasa" value="SAFECO_MASTER\MANVEG">
										</option>
										<option name="TEST_Nahas" value="SAFECO_MASTER\NAHNXX">
										</option>
										<option name="TEST_Venmathy" value="SAFECO_MASTER\VENLOG">
										</option>
										<option name="TEST_KALAXX" value="SAFECO_MASTER\KALAXX">
										</option>
										<option name="TEST_ARUPRA" value="SAFECO_MASTER\ARUPRA">
										</option>
										<option name="TEST_SWATHI" value="SAFECO_MASTER\SWATHI">
										</option>
										<option name="TEST_N0164751" value="LM\N0164751">
										</option>
										<option name="TEST_ROMJIM" value="SAFECO_MASTER\ROMJIM">
										</option>
										<option name="TEST_N0179271" value="LM\N0179271">
										</option>
										<option name="TEST_N0223610" value="LM\223610">
										</option>
										<option name="TEST_N0213800" value="LM\N0213800">
										</option>
										<option name="TEST_VIKGOY" value="SAFECO_MASTER\VIKGOY">
										</option>
										<option name="TEST_N0208048" value="LM\N0208048">
										</option>
										<option name="TEST_N0216207" value="LM\N0216207">
										</option>
										<option name="TEST_N0217751" value="LM\N0217751">
										</option>
										<option name="TEST_N0216909" value="LM\N0216909">
										</option>
										<option name="TEST_SHIJAI" value="SAFECO_MASTER\SHIJAI">
										</option>
										<option name="TEST_N0231233" value="LM\N0231233">
										</option>
										<option name="TEST_N0208408" value="LM\N0208408">
										</option>
										<option name="TEST_JAGAPA" value="SAFECO_MASTER\JAGAPA">
										</option>
										<option name="TEST_N0230339" value="LM\N0230339">
										</option>
										<option name="TEST_DINPAP" value="SAFECO_MASTER\DINPAP">
										</option>
										<option name="SAFECO_MASTER\MARDUT" value="SAFECO_MASTER\MARDUT">
										</option>
										<option name="TEST_N0176969" value="LM\N0176969">
										</option>
										<option name="TEST_JUNDEC" value="SAFECO_MASTER\JUNDEC">
										</option>
										<option name="TEST_N0247427" value="LM\n0247427">
										</option>
										<option name="TEST_YOGKUL" value="SAFECO_MASTER\YOGKUL">
										</option>
										<option name="TEST_N0191527" value="LM\n0191527">
										</option>
										<option name="TEST_SATPUS" value="SAFECO_MASTER\SATPUS">
										</option>
										<option name="TEST_N0158617" value="LM\n0158617">
										</option>
										<option name="TEST_JAMPET" value="SAFECO_MASTER\JAMPET">
										</option>
										<option name="LM\N0175944" value="LM\n0175944">
										</option>
										<option name="SAFECO_MASTER\GRENOM" value="SAFECO_MASTER\GRENOM">
										</option>
										<option name="LM\N0178803" value="LM\n0178803">
										</option>
										<option name="SAFECO_MASTER\PAUNYS" value="SAFECO_MASTER\PAUNYS">
										</option>
										<option name="LM\N0176516" value="LM\n0176516">
										</option>
										<option name="SAFECO_MASTER\JENFRA" value="SAFECO_MASTER\JENFRA">
										</option>
										<option name="LM\N0266028" value="LM\n0266028">
										</option>
										<option name="SAFECO_MASTER\BRISAI" value="SAFECO_MASTER\BRISAI">
										</option>
										<option name="LM\N0266029" value="LM\n0266029">
										</option>
										<option name="SAFECO_MASTER\SOWRAV" value="SAFECO_MASTER\SOWRAV">
										</option>
										<option name="LM\n0089411" value="LM\n0089411">
										</option>
										<option name="SAFECO_MASTER\DEBKIL" value="SAFECO_MASTER\DEBKIL">
										</option>
										<option name="LM\n0214157" value="LM\n0214157">
										</option>
										<option name="SAFECO_MASTER\LINGALA" value="SAFECO_MASTER\LINGALA">
										</option>
										<option name="TEST_N0258218" value="LM\n0258218">
										</option>
										<option name="TEST_N0263447" value="LM\n0263447">
										</option>
										<option name="TEST_VANSIV" value="SAFECO_MASTER\VANSIV">
										</option>
										<option name="TEST_RAKUDA" value="SAFECO_MASTER\RAKUDA">
										</option>
										<option name="LM\n0253846" value="LM\n0253846">
										</option>
										<option name="SAFECO_MASTER\DURMXX" value="SAFECO_MASTER\DURMXX">
										</option>
										<option name="LM\n0260820" value="LM\n0260820">
										</option>
										<option name="SAFECO_MASTER\KIRUBS" value="SAFECO_MASTER\KIRUBS">
										</option>
										<option name="LM\n0220907" value="LM\n0220907">
										</option>
										<option name="SAFECO_MASTER\SWAMAN" value="SAFECO_MASTER\SWAMAN">
										</option>
										<option name="TEST_n0267007" value="LM\n0267007">
										</option>
										<option name="TEST_NEEKAN" value="SAFECO_MASTER\NEEKAN">
										</option>
										<option name="LM\n0251762" value="LM\n0251762">
										</option>
										<option name="SAFECO_MASTER\SATNAT" value="SAFECO_MASTER\SATNAT">
										</option>
										<option name="TEST_n0223125" value="LM\n0223125">
										</option>
										<option name="TEST_SATHMU" value="SAFECO_MASTER\SATHMU">
										</option>
										<option name="LM\n0215302" value="LM\n0215302">
										</option>
										<option name="SAFECO_MASTER\SAIPAI" value="SAFECO_MASTER\SAIPAI">
										</option>
										<option name="TEST_N0184876" value="LM\n0184876">
										</option>
										<option name="TEST_KRIDHA" value="SAFECO_MASTER\KRIDHA">
										</option>
										<option name="LM\n0267404" value="LM\n0267404">
										</option>
										<option name="SAFECO_MASTER\KALRXX" value="SAFECO_MASTER\KALRXX">
										</option>
										<option name="LM\n0223079" value="LM\n0223079">
										</option>
										<option name="SAFECO_MASTER\HIMBIN" value="SAFECO_MASTER\HIMBIN">
										</option>
										<option name="LM\N0206061" value="LM\n0206061">
										</option>
										<option name="SAFECO_MASTER\JANVEN" value="SAFECO_MASTER\JANVEN">
										</option>
										<option name="TEST_n0156910" value="LM\n0156910">
										</option>
										<option name="TEST_ANDGRI" value="SAFECO_MASTER\ANDGRI">
										</option>
										<option name="TEST_n0253845" value="LM\n0253845">
										</option>
										<option name="TEST_RAKPMX" value="SAFECO_MASTER\RAKPMX">
										</option>
										<option name="TEST_n0218292" value="LM\n0218292">
										</option>
										<option name="TEST_YENGOP" value="SAFECO_MASTER\YENGOP">
										</option>
										<option name="TEST_n0234102" value="LM\n0234102">
										</option>
										<option name="TEST_SURNAR" value="SAFECO_MASTER\SURNAR">
										</option>
										<option name="TEST_n0251763" value="LM\n0251763">
										</option>
										<option name="TEST_PRAJAY" value="SAFECO_MASTER\PRAJAY">
										</option>
										<option name="TEST_n0267405" value="LM\n0267405">
										</option>
										<option name="TEST_SASVEE" value="SAFECO_MASTER\SASVEE">
										</option>
										<option name="TEST_n0266275" value="LM\n0266275">
										</option>
										<option name="TEST_SHAANN" value="SAFECO_MASTER\SHAANN">
										</option>
										<option name="TEST_0227943" value="LM\n0227943">
										</option>
										<option name="TEST_SUJAKO" value="SAFECO_MASTER\SUJAKO">
										</option>
										<option name="TEST_MOHTAH" value="SAFECO_MASTER\MOHTAH">
										</option>
										<option name="Test_n0215036" value="LM\N0215036">
										</option>
										<option name="TEST_N0258217" value="LM\n0258217">
										</option>
										<option name="TEST_NAGPAG" value="SAFECO_MASTER\NAGPAG">
										</option>
										<option name="TEST_n0262184" value="LM\n0262184">
										</option>
										<option name="TEST_KARTDE" value="SAFECO_MASTER\KARTDE">
										</option>
										<option name="TEST_N0254685" value="LM\n0254685">
										</option>
										<option name="TEST_SANROY" value="SAFECO_MASTER\SANROY">
										</option>
										<option name="TEST_n0228685" value="LM\n0228685">
										</option>
										<option name="TEST_SATHSA" value="SAFECO_MASTER\SATHSA">
										</option>
										<option name="TEST_N0272866" value="LM\n0272866">
										</option>
										<option name="TEST_SINALL" value="SAFECO_MASTER\SINALL">
										</option>
										<option name="TEST_N0177453" value="LM\N0177453">
										</option>
										<option name="TEST_KYLTOM" value="SAFECO_MASTER\KYLTOM">
										</option>
										<option name="TEST_N0275218" value="LM\N0275218">
										</option>
										<option name="TEST_BRADCR" value="SAFECO_MASTER\BRADCR">
										</option>
										<option name="TEST_N0176516" value="LM\N0176516">
										</option>
										<option name="TEST_JENFRA" value="SAFECO_MASTER\JENFRA">
										</option>
										<option name="TEST_N0274005" value="LM\N0274005">
										</option>
										<option name="TEST_SATHKU" value="SAFECO_SATHKU">
										</option>
										<option name="TEST_N0203667" value="LM\N0203667">
										</option>
										<option name="TEST_AJISAH" value="SAFECO_AJISAH">
										</option>
										<option name="TEST_N0194749" value="LM\N0194749">
										</option>
										<option name="TEST_RAMKUP" value="SAFECO_MASTER\RAMKUP">
										</option>
										<option name="TEST_N0251504" value="LM\N0251504">
										</option>
										<option name="TEST_ANAMUT" value="SAFECO_MASTER\ANAMUT">
										</option>
										<option name="TEST_N0223781" value="LM\N0223781">
										</option>
										<option name="TEST_CHAGAR" value="SAFECO_MASTER\CHAGAR">
										</option>
										<option name="TEST_N0182944" value="LM\N0182944">
										</option>
										<option name="TEST_LALNAT" value="SAFECO_MASTER\LALNAT">
										</option>
										<option name="TEST_N0178070" value="LM\N0178070">
										</option>
										<option name="TEST_MARDUT" value="SAFECO_MASTER\MARDUT">
										</option>
										<option name="TEST_N0268764" value="LM\N0268764">
										</option>
										<option name="TEST_ARUSUB" value="SAFECO_MASTER\ARUSUB">
										</option>
										<option name="LM\N0208773" value="LM\N0208773">
										</option>
										<option name="SAFECO_MASTER\KARKXX" value="SAFECO_MASTER\KARKXX">
										</option>
										<option name="TEST_N0255790" value="LM\N0255790">
										</option>
										<option name="TES_TANGUP" value="SAFECO_MASTER\TANGUP">
										</option>
										<option name="LM\N0246464" value="LM\N0246464">
										</option>
										<option name="SAFECO_MASTER\JAMFAN" value="SAFECO_MASTER\JAMFAN">
										</option>
										<option name="LM\N0089314" value="LM\N0089314">
										</option>
										<option name="SAFECO_MASTER\DEBROB" value="SAFECO_MASTER\DEBROB">
										</option>
										<option name="LM\N0117330" value="LM\N0117330">
										</option>
										<option name="SAFECO_MASTER\KEIMAR" value="SAFECO_MASTER\KEIMAR">
										</option>
										<option name="LM\N0278736" value="LM\N0278736">
										</option>
										<option name="LM\N0258336" value="LM\N0258336">
										</option>
										<option name="LM\N0280983" value="LM\N0280983">
										</option>
										<option name="TEST_N0205155" value="LM\N0205155">
										</option>
										<option name="TEST_ANORAD" value="SAFECO_MASTER\ANORAD">
										</option>
										<option name="TEST_N0218295" value="LM\N0218295">
										</option>
										<option name="TEST_BENCHR" value="SAFECO_MASTER\BENCHR">
										</option>
										<option name="TEST_N0270813" value="LM\N0270813">
										</option>
										<option name="TEST_TOSJAI" value="SAFECO_MASTER\TOSJAI">
										</option>
										<option name="TEST_N0223574" value="LM\N0223574">
										</option>
										<option name="TEST_SHAKNO" value="SAFECO_MASTER\SHAKNO">
										</option>
										<option name="TEST_N0175669" value="LM\N0175669">
										</option>
										<option name="SAFECO_MASTER\EMITRI" value="SAFECO_MASTER\EMITRI">
										</option>
										<option name="TEST_N0266032" value="LM\N0266032">
										</option>
										<option name="SAFECO_MASTER\RANPRA" value="SAFECO_MASTER\RANPRA">
										</option>
										<option name="TEST_N0221112" value="LM\N0221112">
										</option>
										<option name="TEST_MARAHM" value="SAFECO_MASTER\MARAHM">
										</option>
										<option name="TEST_N0274756" value="LM\N0274756">
										</option>
										<option name="TEST_DIVBAK" value="SAFECO_MASTER\DIVBAK">
										</option>
										<option name="TEST_N0274481" value="LM\N0274481">
										</option>
										<option name="TEST_DIVPAR" value="SAFECO_MASTER\DIVPAR">
										</option>
										<option name="TEST_N0274386" value="LM\N0274386">
										</option>
										<option name="TEST_ELASIV" value="SAFECO_MASTER\ELASIV">
										</option>
										<option name="TEST_N0278861" value="LM\N0278861">
										</option>
										<option name="TEST_SENRAN" value="SAFECO_MASTER\SENRAN">
										</option>
										<option name="LM\N0234103" value="LM\N0234103">
										</option>
										<option name="SAFECO_MASTER\VRUSHA" value="SAFECO_MASTER\VRUSHA">
										</option>
										<option name="LM\N0267006" value="LM\N0267006">
										</option>
										<option name="SAFECO_MASTER\KANPUN" value="SAFECO_MASTER\KANPUN">
										</option>
										<option name="LM\N0255461" value="LM\N0255461">
										</option>
										<option name="SAFECO_MASTER\NAGRAJ" value="SAFECO_MASTER\NAGRAJ">
										</option>
										<option name="LM\N0268762" value="LM\N0268762">
										</option>
										<option name="SAFECO_MASTER\ANIKUM" value="SAFECO_MASTER\ANIKUM">
										</option>
										<option name="TEST_N0228687" value="LM\N0228687">
										</option>
										<option name="TEST_SHARSR" value="SAFECO_MASTER\SHARSR">
										</option>
										<option name="LM\N0187588" value="LM\N0187588">
										</option>
										<option name="LM\N0256747" value="LM\N0256747">
										</option>
										<option name="TEST_N0274006" value="LM\N0274006">
										</option>
										<option name="TEST_SATCOD" value="SAFECO_MASTER\SATCOD">
										</option>
										<option name="LM\N0274006" value="LM\N0274006">
										</option>
										<option name="SAFECO_MASTER\tangup" value="SAFECO_MASTER\tangup">
										</option>
										<option name="TEST_N0213024" value="LM\N0213024">
										</option>
										<option name="TEST_VINPAL" value="SAFECO_MASTER\VINPAL">
										</option>
										<option name="TEST_N0206380" value="LM\N0206380">
										</option>
										<option name="TEST_GOWSRI" value="SAFECO_MASTER\GOWSRI">
										</option>
										<option name="TEST_N0251145" value="LM\N0251145">
										</option>
										<option name="TEST_ANWPAN" value="SAFECO_MASTER\ANWPAN">
										</option>
										<option name="LM\N0274007" value="LM\N0274007">
										</option>
										<option name="SAFECO_MASTER\INFRIN" value="SAFECO_MASTER\INFRIN">
										</option>
										<option name="TEST_MADEEP" value="SAFECO_MASTER\MADEEP">
										</option>
										<option name="TEST_N0280881" value="LM\N0280881">
										</option>
										<option name="Test_N0173828" value="LM\N0173828">
										</option>
										<option name="TEST_ADAMOK" value="SAFECO_MASTER\ADAMOK">
										</option>
										<option name="Test_N0255788" value="LM\N0255788">
										</option>
										<option name="TEST_DHIPXX" value="SAFECO_MASTER\DHIPXX">
										</option>
										<option name="Test_N0306992" value="LM\N0306992">
										</option>
										<option name="TEST_NISASW" value="SAFECO_MASTER\NISASW">
										</option>
										<option name="Test_N0217410" value="LM\N0217410">
										</option>
										<option name="Test_ASHPUL" value="SAFECO_MASTER\ASHPUL">
										</option>
										<option name="Test_N0178539" value="LM\N0178539">
										</option>
										<option name="Test_NANOLS" value="SAFECO_MASTER\NANOLS">
										</option>
										<option name="Test_BREMOO" value="SAFECO_MASTER\BREMOO">
										</option>
										<option name="Test_N0264961" value="LM\N0264961">
										</option>
										<option name="Test_ANDBAR" value="SAFECO_MASTER\ANDBAR">
										</option>
										<option name="Test_N0173998" value="LM\N0173998">
										</option>
										<option name="Test_DIAFOL" value="SAFECO_MASTER\DIAFOL">
										</option>
										<option name="Test_N0163122" value="LM\N0163122">
										</option>
										<option name="Test_CHAVEL" value="LM\N0219388">
										</option>
										<option name="Test_N0180148" value="LM\N0180148">
										</option>
										<option name="Test_THOGAW" value="SAFECO_MASTER\THOGAW">
										</option>
										<option name="Test_N0353391" value="LM\N0353391">
										</option>
										<option name="Test_NEHSHA" value="SAFECO_MASTER\NEHSHA">
										</option>
										<option name="Test_N1501354" value="LM\N1501354">
										</option>
										<option name="Test_BIJPAT" value="SAFECO_MASTER\BIJPAT">
										</option>
										<option name="TEST_N1501791" value="LM\N1501791">
										</option>
										<option name="TEST_N1505053" value="LM\N1505053">
										</option>
										<option name="TEST_N1501345" value="LM\N1501345">
										</option>
										<option name="TEST_N1501348" value="LM\N1501348">
										</option>
										<option name="TEST_N1501347" value="LM\N1501347">
										</option>
										<option name="TEST_N1501794" value="LM\N1501794">
										</option>
										<option name="TEST_N0368145" value="LM\N0368145">
										</option>
										<option name="TEST_N1501336" value="LM\N1501336">
										</option>
										<option name="TEST_N0367355" value="LM\N0367355">
										</option>
										<option name="TEST_N1501788" value="LM\N1501788">
										</option>
										<option name="TEST_SREPIL" value="SAFECO_MASTER\SREPIL">
										</option>
										<option name="TEST_HARMOR" value="SAFECO_MASTER\HARMOR">
										</option>
										<option name="TEST_APANIM" value="SAFECO_MASTER\APANIM">
										</option>
										<option name="TEST_MOHASM" value="SAFECO_MASTER\MOHASM">
										</option>
										<option name="TEST_HARVAR" value="SAFECO_MASTER\HARVAR">
										</option>
										<option name="TEST_ALIVIN" value="SAFECO_MASTER\ALIVIN">
										</option>
										<option name="TEST_SWALLY" value="SAFECO_MASTER\SWALLY">
										</option>
										<option name="TEST_SUBKAS" value="SAFECO_MASTER\SUBKAS">
										</option>
										<option name="TEST_SESCHA" value="SAFECO_MASTER\SESCHA">
										</option>
										<option name="TEST_BINBIT" value="SAFECO_MASTER\BINBIT">
										</option>
										<option name="TEST_ARAPAS" value="SAFECO_MASTER\ARAPAS">
										</option>
										<option name="TEST_N1501048" value="LM\N1501048">
										</option>
										<option name="TEST_AJIEIX" value="SAFECO_MASTER\AJKEIX">
										</option>
										<option name="TEST_N1503389" value="LM\N1503389">
										</option>
									</select>
									<select name="PolicyLaunchAKTruePricingPOAUserYN" value="">
										<option name="" value="">
										</option>
										<option name="No" value="N">
										</option>
										<option name="Yes" value="Y">
										</option>
										<option name="LM\glmac-POL-SPWA-AKCreditPOARW-01" value="LM\glmac-POL-SPWA-AKCreditPOARW-01">
										</option>
										<option name="SAFECO_MASTER\glmac-POL-SPWA-AKCreditPOARW-01" value="SAFECO_MASTER\glmac-POL-SPWA-AKCreditPOARW-01">
										</option>
										<option name="LM\N0187588" value="LM\N0187588">
										</option>
										<option name="LM\N0208363" value="LM\N0208363">
										</option>
										<option name="LM\n0142149" value="LM\n0142149">
										</option>
										<option name="glmac-POL-SPWA-AKCreditPOARW-01" value="glmac-POL-SPWA-AKCreditPOARW-01">
										</option>
									</select>
									<select name="PolicyLaunchSpecialtyLowTouchLaunchValues" value="">
										<option name="" value="">
										</option>
										<option name="2" value="12/13/2014 12/13/2014">
										</option>
										<option name="3" value="12/13/2014 12/13/2014">
										</option>
										<option name="5" value="12/13/2014 12/13/2014">
										</option>
										<option name="6" value="12/13/2014 12/13/2014">
										</option>
										<option name="9" value="12/13/2014 12/13/2014">
										</option>
										<option name="11" value="12/13/2014 12/13/2014">
										</option>
										<option name="12" value="12/13/2014 12/13/2014">
										</option>
										<option name="13" value="12/13/2014 12/13/2014">
										</option>
										<option name="14" value="12/13/2014 12/13/2014">
										</option>
										<option name="15" value="12/13/2014 12/13/2014">
										</option>
										<option name="16" value="12/13/2014 12/13/2014">
										</option>
										<option name="21" value="12/13/2014 12/13/2014">
										</option>
										<option name="22" value="12/13/2014 12/13/2014">
										</option>
										<option name="24" value="12/13/2014 12/13/2014">
										</option>
										<option name="25" value="12/13/2014 12/13/2014">
										</option>
										<option name="26" value="12/13/2014 12/13/2014">
										</option>
										<option name="28" value="12/13/2014 12/13/2014">
										</option>
										<option name="30" value="12/13/2014 12/13/2014">
										</option>
										<option name="33" value="12/13/2014 12/13/2014">
										</option>
										<option name="34" value="12/13/2014 12/13/2014">
										</option>
										<option name="35" value="12/13/2014 12/13/2014">
										</option>
										<option name="36" value="12/13/2014 12/13/2014">
										</option>
										<option name="40" value="12/13/2014 12/13/2014">
										</option>
										<option name="42" value="12/13/2014 12/13/2014">
										</option>
										<option name="43" value="12/13/2014 12/13/2014">
										</option>
										<option name="44" value="12/13/2014 12/13/2014">
										</option>
										<option name="48" value="12/13/2014 12/13/2014">
										</option>
										<option name="49" value="12/13/2014 12/13/2014">
										</option>
										<option name="37" value="12/13/2014 12/13/2014">
										</option>
										<option name="54" value="12/13/2014 12/13/2014">
										</option>
										<option name="1" value="12/13/2014 12/13/2014">
										</option>
										<option name="10" value="12/13/2014 12/13/2014">
										</option>
										<option name="17" value="12/13/2014 12/13/2014">
										</option>
										<option name="23" value="12/13/2014 12/13/2014">
										</option>
										<option name="27" value="12/13/2014 12/13/2014">
										</option>
										<option name="31" value="12/13/2014 12/13/2014">
										</option>
										<option name="39" value="12/13/2014 12/13/2014">
										</option>
										<option name="41" value="12/13/2014 12/13/2014">
										</option>
										<option name="45" value="12/13/2014 12/13/2014">
										</option>
										<option name="46" value="12/13/2014 12/13/2014">
										</option>
										<option name="47" value="12/13/2014 12/13/2014">
										</option>
										<option name="4" value="12/13/2014 12/13/2014">
										</option>
										<option name="19" value="12/13/2014 12/13/2014">
										</option>
										<option name="18" value="01/01/2018 01/01/2018">
										</option>
										<option name="29" value="01/01/2019 01/01/2019">
										</option>
										<option name="38" value="01/01/2019 01/01/2019">
										</option>
									</select>
									<select name="PolicyRatingState" value="1">
										<option selected="yes" name="Alabama" value="1">
										</option>
										<option name="Alaska" value="54">
										</option>
										<option name="Arizona" value="2">
										</option>
										<option name="Arkansas" value="3">
										</option>
										<option name="California" value="4">
										</option>
										<option name="Colorado" value="5">
										</option>
										<option name="Connecticut" value="6">
										</option>
										<option name="Florida" value="9">
										</option>
										<option name="Georgia" value="10">
										</option>
										<option name="Idaho" value="11">
										</option>
										<option name="Illinois" value="12">
										</option>
										<option name="Indiana" value="13">
										</option>
										<option name="Iowa" value="14">
										</option>
										<option name="Kansas" value="15">
										</option>
										<option name="Kentucky" value="16">
										</option>
										<option name="Louisiana" value="17">
										</option>
										<option name="Maine" value="18">
										</option>
										<option name="Maryland" value="19">
										</option>
										<option name="Massachusetts" value="20">
										</option>
										<option name="Michigan" value="21">
										</option>
										<option name="Minnesota" value="22">
										</option>
										<option name="Mississippi" value="23">
										</option>
										<option name="Missouri" value="24">
										</option>
										<option name="Montana" value="25">
										</option>
										<option name="Nebraska" value="26">
										</option>
										<option name="Nevada" value="27">
										</option>
										<option name="New Hampshire" value="28">
										</option>
										<option name="New Jersey" value="29">
										</option>
										<option name="New Mexico" value="30">
										</option>
										<option name="New York" value="31">
										</option>
										<option name="North Carolina" value="32">
										</option>
										<option name="North Dakota" value="33">
										</option>
										<option name="Ohio" value="34">
										</option>
										<option name="Oklahoma" value="35">
										</option>
										<option name="Oregon" value="36">
										</option>
										<option name="Pennsylvania" value="37">
										</option>
										<option name="Rhode Island" value="38">
										</option>
										<option name="South Carolina" value="39">
										</option>
										<option name="South Dakota" value="40">
										</option>
										<option name="Tennessee" value="41">
										</option>
										<option name="Texas" value="42">
										</option>
										<option name="Utah" value="43">
										</option>
										<option name="Vermont" value="44">
										</option>
										<option name="Virginia" value="45">
										</option>
										<option name="Washington" value="46">
										</option>
										<option name="West Virginia" value="47">
										</option>
										<option name="Wisconsin" value="48">
										</option>
										<option name="Wyoming" value="49">
										</option>
									</select>
									<select name="PolicyAgentNumber" value="">
										<option name="&lt;Select&gt;" value="&lt;Select&gt;">
										</option>
										<option name="15-6888" value="156888">
										</option>
										<option name="89-1719" value="891719">
										</option>
									</select>
									<select name="PolicyClientPersonSocialSecurityNumberStatus" value="">
										<option name="&lt;Select&gt;" value="&lt;Select&gt;">
										</option>
										<option name="Social Security" value="S">
										</option>
										<option name="Customer won't provide" value="R">
										</option>
										<option name="Customer doesn't have" value="N">
										</option>
									</select>
									<select name="PolicyClientMailingLocationState" value="">
										<option name="&lt;Select&gt;" value="&lt;Select&gt;">
										</option>
										<option name="Alabama" value="AL">
										</option>
										<option name="Alaska" value="AK">
										</option>
										<option name="Arizona" value="AZ">
										</option>
										<option name="Arkansas" value="AR">
										</option>
										<option name="California" value="CA">
										</option>
										<option name="Colorado" value="CO">
										</option>
										<option name="Connecticut" value="CT">
										</option>
										<option name="Delaware" value="DE">
										</option>
										<option name="District of Columbia" value="DC">
										</option>
										<option name="Florida" value="FL">
										</option>
										<option name="Georgia" value="GA">
										</option>
										<option name="Hawaii" value="HI">
										</option>
										<option name="Idaho" value="ID">
										</option>
										<option name="Illinois" value="IL">
										</option>
										<option name="Indiana" value="IN">
										</option>
										<option name="Iowa" value="IA">
										</option>
										<option name="Kansas" value="KS">
										</option>
										<option name="Kentucky" value="KY">
										</option>
										<option name="Louisiana" value="LA">
										</option>
										<option name="Maine" value="ME">
										</option>
										<option name="Maryland" value="MD">
										</option>
										<option name="Massachusetts" value="MA">
										</option>
										<option name="Michigan" value="MI">
										</option>
										<option name="Minnesota" value="MN">
										</option>
										<option name="Mississippi" value="MS">
										</option>
										<option name="Missouri" value="MO">
										</option>
										<option name="Montana" value="MT">
										</option>
										<option name="Nebraska" value="NE">
										</option>
										<option name="Nevada" value="NV">
										</option>
										<option name="New Hampshire" value="NH">
										</option>
										<option name="New Jersey" value="NJ">
										</option>
										<option name="New Mexico" value="NM">
										</option>
										<option name="New York" value="NY">
										</option>
										<option name="North Carolina" value="NC">
										</option>
										<option name="North Dakota" value="ND">
										</option>
										<option name="Ohio" value="OH">
										</option>
										<option name="Oklahoma" value="OK">
										</option>
										<option name="Oregon" value="OR">
										</option>
										<option name="Pennsylvania" value="PA">
										</option>
										<option name="Rhode Island" value="RI">
										</option>
										<option name="South Carolina" value="SC">
										</option>
										<option name="South Dakota" value="SD">
										</option>
										<option name="Tennessee" value="TN">
										</option>
										<option name="Texas" value="TX">
										</option>
										<option name="Utah" value="UT">
										</option>
										<option name="Vermont" value="VT">
										</option>
										<option name="Virginia" value="VA">
										</option>
										<option name="Washington" value="WA">
										</option>
										<option name="West Virginia" value="WV">
										</option>
										<option name="Wisconsin" value="WI">
										</option>
										<option name="Wyoming" value="WY">
										</option>
										<option name="Alberta" value="AB">
										</option>
										<option name="British Columbia" value="BC">
										</option>
										<option name="Manitoba" value="MB">
										</option>
										<option name="New Brunswick" value="NB">
										</option>
										<option name="Newfoundland" value="NL">
										</option>
										<option name="Northwest Territories" value="NT">
										</option>
										<option name="Nova Scotia" value="NS">
										</option>
										<option name="Nunavut" value="NU">
										</option>
										<option name="Ontario" value="ON">
										</option>
										<option name="Prince Edward Island" value="PE">
										</option>
										<option name="Quebec" value="QC">
										</option>
										<option name="Saskatchewan" value="SK">
										</option>
										<option name="Yukon" value="YT">
										</option>
										<option name="Air Atlantic" value="AA">
										</option>
										<option name="Air Europe" value="AE">
										</option>
										<option name="Air Pacific" value="AP">
										</option>
										<option name="American Samoa" value="AS">
										</option>
										<option name="Federated States of Micronesia" value="FM">
										</option>
										<option name="Guam" value="GU">
										</option>
										<option name="Marshall Islands" value="MH">
										</option>
										<option name="Northern Mariana Islands" value="MP">
										</option>
										<option name="Palau" value="PW">
										</option>
										<option name="Puerto Rico" value="PR">
										</option>
										<option name="Virgin Islands" value="VI">
										</option>
									</select>
									<select name="PolicyAutoDataAutoBusinessType" value="">
										<option name="&lt;Select&gt;" value="&lt;Select&gt;">
										</option>
										<option name="New Auto Customer to Safeco (Coverage has not been provided by a Safeco Company)" value="N">
										</option>
										<option name="Rewrite of Policy Lapsed &gt; 60 Days" value="L">
										</option>
										<option name="Fifth Vehicle - Existing Customer" value="F">
										</option>
										<option name="Move To Separate Household - Named Insured/Spouse" value="D">
										</option>
										<option name="Move To Separate Household - Any other household member" value="Y">
										</option>
										<option name="Move to New State - Existing Safeco auto policy" value="S">
										</option>
										<option name="Move Within the State - Existing Safeco auto policy" value="M">
										</option>
										<option name="Other Rewrite or Additional Policy for Safeco Customer" value="I">
										</option>
										<option name="Massachusetts only – Additional Policy for Existing Safeco Customer" value="E">
										</option>
										<option name="Loyalty Rewrite (Ignite Elite only)" value="T">
										</option>
									</select>
								</form>
							</forms>
						</result>
					</httpstep>
				</condition>
				<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
					<loop name="StartLoop" operator="equallesser" start="1" increment="1" count="3">
						<httpstep name="SelectRatingState1" id="81">
							<script protocol="http" method="POST" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="frmInput" httperrorstreamcapture="allow">
								<url><![CDATA[<=this.getvariable(url)>/personal/policyservice/NewBusinessMenu.aspx]]></url>
								<parameter type="" name="LineList" value="Auto" maxlength="">
								</parameter>
								<parameter type="" name="StateList" value="&lt;=this.getvariable(rating_statecode)&gt;" maxlength="">
								</parameter>
								<parameter type="" name="NextButton.x" value="18" maxlength="">
								</parameter>
								<parameter type="" name="NextButton.y" value="19" maxlength="">
								</parameter>
							</script>
							<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/applicant/submiterror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="">
								<verify>
								</verify>
								<forms>
									<form name="frmInput">
										<input name="__ContextGUID" type="hidden" value="9a3efea8-c1a7-4da3-a0f6-4b324fdea00c" maxlength="">
										</input>
										<input name="__FormIndexing" type="hidden" value="1" maxlength="">
										</input>
										<input name="__FieldList" type="hidden" value="Policy.RatingState!8|Policy.Product!8|Policy.Market!999|Policy.CompanyOverrideYN!999|Policy.AgentNumber!8|Policy.ProducerName!1|Policy.QuoteDate!2|Policy.EffectiveDate!2|Policy.OriginalQuoteDate!20|Policy.Client.AgentCustomerID!1|Policy.DescriptiveName!1|Policy.Client.Person.FirstName!1|Policy.Client.Person.MiddleName!1|Policy.Client.Person.LastName!1|Policy.Client.Person.SocialSecurityNumber!10|Policy.Dwelling.CoApplicantYN!14|Policy.Client.HomePhoneNumber!6|Policy.Client.MailingLocation.AddressLine1!1|Policy.Client.MailingLocation.AddressLine2!1|Policy.Client.MailingLocation.City!1|Policy.Client.MailingLocation.State!8|Policy.Client.MailingLocation.ZipCode!1|Policy.HomeData.CurrentAddressYears!7|Policy.HomeData.CurrentAddressMonths!7|Policy.HomeData.LocationSameAsMailingYN!14|Policy.BusinessType!8|Policy.AdditionalInterestsYN!14" maxlength="">
										</input>
										<input name="PolicyVersion" type="hidden" value="1" maxlength="">
										</input>
										<input name="__VIEWSTATE" type="hidden" value="dDw4MjMwMTQ2NDk7O2w8X2N0bDE7X2N0bDc7X2N0bDk7X2N0bDEzO19jdGwxOTs+Pg==" maxlength="">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumber" type="hidden" value="--" maxlength="">
										</input>
										<input name="PolicyClientHomePhoneNumber" type="hidden" value="" maxlength="">
										</input>
										<input name="__EVENTTARGET" type="hidden" value="" maxlength="">
										</input>
										<input name="__EVENTARGUMENT" type="hidden" value="" maxlength="">
										</input>
										<input name="" type="submit" value="" maxlength="">
										</input>
										<input name="PolicyProducerName" type="text" value="" maxlength="20">
										</input>
										<input name="PolicyQuoteDate" type="text" value="06/16/2004" maxlength="">
										</input>
										<input name="PolicyEffectiveDate" type="text" value="" maxlength="">
										</input>
										<input name="PolicyOriginalQuoteDate" type="text" value="6/16/2004" maxlength="">
										</input>
										<input name="PolicyClientAgentCustomerID" type="text" value="" maxlength="30">
										</input>
										<input name="PolicyDescriptiveName" type="text" value="" maxlength="30">
										</input>
										<input name="PolicyClientPersonFirstName" type="text" value="" maxlength="16">
										</input>
										<input name="PolicyClientPersonMiddleName" type="text" value="" maxlength="12">
										</input>
										<input name="PolicyClientPersonLastName" type="text" value="" maxlength="20">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberFirstThree" type="text" value="" maxlength="3">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberMiddleTwo" type="text" value="" maxlength="2">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberLastFour" type="text" value="" maxlength="4">
										</input>
										<input name="PolicyDwellingCoApplicantYN" type="radio" value="Y" maxlength="">
										</input>
										<input name="PolicyDwellingCoApplicantYN" type="radio" value="N" maxlength="">
										</input>
										<input name="PolicyClientHomePhoneNumberAreaCode" type="text" value="" maxlength="3">
										</input>
										<input name="PolicyClientHomePhoneNumberPrefix" type="text" value="" maxlength="3">
										</input>
										<input name="PolicyClientHomePhoneNumberSuffix" type="text" value="" maxlength="4">
										</input>
										<input name="PolicyClientMailingLocationAddressLine1" type="text" value="" maxlength="30">
										</input>
										<input name="PolicyClientMailingLocationAddressLine2" type="text" value="" maxlength="30">
										</input>
										<input name="PolicyClientMailingLocationCity" type="text" value="" maxlength="16">
										</input>
										<input name="PolicyClientMailingLocationZipCode" type="text" value="" maxlength="10">
										</input>
										<input name="PolicyHomeDataCurrentAddressYears" type="text" value="" maxlength="2">
										</input>
										<input name="PolicyHomeDataCurrentAddressMonths" type="text" value="" maxlength="2">
										</input>
										<input name="PolicyHomeDataLocationSameAsMailingYN" type="radio" value="Y" maxlength="">
										</input>
										<input name="PolicyHomeDataLocationSameAsMailingYN" type="radio" value="N" maxlength="">
										</input>
										<input name="PolicyAdditionalInterestsYN" type="radio" value="Y" maxlength="">
										</input>
										<input name="PolicyAdditionalInterestsYN" type="radio" value="N" maxlength="">
										</input>
										<input name="_ctl1" type="image" value="" maxlength="">
										</input>
										<input name="_ctl7" type="image" value="" maxlength="">
										</input>
										<input name="_ctl9" type="image" value="" maxlength="">
										</input>
										<input name="_ctl13" type="image" value="" maxlength="">
										</input>
										<input name="_ctl19" type="image" value="" maxlength="">
										</input>
										<select name="PolicyRatingState" value="">
											<option name="Alabama" value="1">
											</option>
											<option name="Alaska" value="54">
											</option>
											<option name="Arizona" value="2">
											</option>
											<option name="Arkansas" value="3">
											</option>
											<option name="California" value="4">
											</option>
											<option name="Colorado" value="5">
											</option>
											<option name="Connecticut" value="6">
											</option>
											<option name="Florida" value="9">
											</option>
											<option name="Georgia" value="10">
											</option>
											<option name="Idaho" value="11">
											</option>
											<option name="Illinois" value="12">
											</option>
											<option name="Indiana" value="13">
											</option>
											<option name="Iowa" value="14">
											</option>
											<option name="Kansas" value="15">
											</option>
											<option name="Kentucky" value="16">
											</option>
											<option name="Louisiana" value="17">
											</option>
											<option name="Maryland" value="19">
											</option>
											<option name="Michigan" value="21">
											</option>
											<option name="Minnesota" value="22">
											</option>
											<option name="Mississippi" value="23">
											</option>
											<option name="Missouri" value="24">
											</option>
											<option name="Montana" value="25">
											</option>
											<option name="Nebraska" value="26">
											</option>
											<option name="Nevada" value="27">
											</option>
											<option name="New Hampshire" value="28">
											</option>
											<option name="New Mexico" value="30">
											</option>
											<option name="New York" value="31">
											</option>
											<option name="North Carolina" value="32">
											</option>
											<option name="North Dakota" value="33">
											</option>
											<option name="Ohio" value="34">
											</option>
											<option name="Oklahoma" value="35">
											</option>
											<option name="Oregon" value="36">
											</option>
											<option name="Pennsylvania" value="37">
											</option>
											<option name="South Carolina" value="39">
											</option>
											<option name="South Dakota" value="40">
											</option>
											<option name="Tennessee" value="41">
											</option>
											<option name="Texas" value="42">
											</option>
											<option name="Utah" value="43">
											</option>
											<option name="Vermont" value="44">
											</option>
											<option name="Virginia" value="45">
											</option>
											<option name="Washington" value="46">
											</option>
											<option name="West Virginia" value="47">
											</option>
											<option name="Wisconsin" value="48">
											</option>
											<option name="Wyoming" value="49">
											</option>
										</select>
										<select name="PolicyProduct" value="">
											<option name="&lt;Select&gt;" value="&lt;Select&gt;">
											</option>
											<option name="Quality Plus Home" value="QPH">
											</option>
											<option name="Quality Plus Condo" value="QPC">
											</option>
											<option name="Quality Crest Home" value="QCH">
											</option>
											<option name="Quality Crest Condo" value="QCC">
											</option>
											<option name="Renters" value="RENT">
											</option>
										</select>
										<select name="PolicyAgentNumber" value="">
											<option name="00-3002" value="003002">
											</option>
										</select>
										<select name="PolicyClientMailingLocationState" value="">
											<option name="&lt;Select&gt;" value="&lt;Select&gt;">
											</option>
											<option name="Alabama" value="AL">
											</option>
											<option name="Alaska" value="AK">
											</option>
											<option name="Arizona" value="AZ">
											</option>
											<option name="Arkansas" value="AR">
											</option>
											<option name="California" value="CA">
											</option>
											<option name="Colorado" value="CO">
											</option>
											<option name="Connecticut" value="CT">
											</option>
											<option name="Delaware" value="DE">
											</option>
											<option name="District of Columbia" value="DC">
											</option>
											<option name="Florida" value="FL">
											</option>
											<option name="Georgia" value="GA">
											</option>
											<option name="Hawaii" value="HI">
											</option>
											<option name="Idaho" value="ID">
											</option>
											<option name="Illinois" value="IL">
											</option>
											<option name="Indiana" value="IN">
											</option>
											<option name="Iowa" value="IA">
											</option>
											<option name="Kansas" value="KS">
											</option>
											<option name="Kentucky" value="KY">
											</option>
											<option name="Louisiana" value="LA">
											</option>
											<option name="Maine" value="ME">
											</option>
											<option name="Maryland" value="MD">
											</option>
											<option name="Massachusetts" value="MA">
											</option>
											<option name="Michigan" value="MI">
											</option>
											<option name="Minnesota" value="MN">
											</option>
											<option name="Mississippi" value="MS">
											</option>
											<option name="Missouri" value="MO">
											</option>
											<option name="Montana" value="MT">
											</option>
											<option name="Nebraska" value="NE">
											</option>
											<option name="Nevada" value="NV">
											</option>
											<option name="New Hampshire" value="NH">
											</option>
											<option name="New Jersey" value="NJ">
											</option>
											<option name="New Mexico" value="NM">
											</option>
											<option name="New York" value="NY">
											</option>
											<option name="North Carolina" value="NC">
											</option>
											<option name="North Dakota" value="ND">
											</option>
											<option name="Ohio" value="OH">
											</option>
											<option name="Oklahoma" value="OK">
											</option>
											<option name="Oregon" value="OR">
											</option>
											<option name="Pennsylvania" value="PA">
											</option>
											<option name="Rhode Island" value="RI">
											</option>
											<option name="South Carolina" value="SC">
											</option>
											<option name="South Dakota" value="SD">
											</option>
											<option name="Tennessee" value="TN">
											</option>
											<option name="Texas" value="TX">
											</option>
											<option name="Utah" value="UT">
											</option>
											<option name="Vermont" value="VT">
											</option>
											<option name="Virginia" value="VA">
											</option>
											<option name="Washington" value="WA">
											</option>
											<option name="West Virginia" value="WV">
											</option>
											<option name="Wisconsin" value="WI">
											</option>
											<option name="Wyoming" value="WY">
											</option>
											<option name="Alberta" value="AB">
											</option>
											<option name="British Columbia" value="BC">
											</option>
											<option name="Manitoba" value="MB">
											</option>
											<option name="New Brunswick" value="NB">
											</option>
											<option name="Newfoundland" value="NF">
											</option>
											<option name="Northwest Territories" value="NW">
											</option>
											<option name="Nova Scotia" value="NS">
											</option>
											<option name="Ontario" value="ON">
											</option>
											<option name="Prince Edward Island" value="PE">
											</option>
											<option name="Quebec" value="PQ">
											</option>
											<option name="Saskatchewan" value="SK">
											</option>
											<option name="Yukon" value="YK">
											</option>
											<option name="Air Atlantic" value="AA">
											</option>
											<option name="Air Europe" value="AE">
											</option>
											<option name="Air Pacific" value="AP">
											</option>
											<option name="American Samoa" value="AS">
											</option>
											<option name="Federated States of Micronesia" value="FM">
											</option>
											<option name="Guam" value="GU">
											</option>
											<option name="Marshall Islands" value="MH">
											</option>
											<option name="Northern Mariana Islands" value="MP">
											</option>
											<option name="Palau" value="PW">
											</option>
											<option name="Puerto Rico" value="PR">
											</option>
											<option name="Virgin Islands" value="VI">
											</option>
										</select>
										<select name="PolicyBusinessType" value="">
											<option name="&lt;Select&gt;" value="&lt;Select&gt;">
											</option>
											<option name="New property customer to Safeco" value="N">
											</option>
											<option name="Rewrite of policy lapsed &gt; 60 days" value="L">
											</option>
											<option name="Existing Safeco home customer moving to new location or adding secondary" value="R">
											</option>
											<option name="Other reason for policy request for existing Safeco property customer" value="I">
											</option>
										</select>
									</form>
								</forms>
								<frames>
								</frames>
							</result>
						</httpstep>
						<condition name="Started Successfully" expression="{&lt;=SelectRatingState.isformfieldpresent(frmInput, PolicyClientPersonFirstName, input)&gt; EQUAL true}" appliesto="">
							<functionstep name="BreakStartLoop" id="82" prompt="no" errormessage="Error selecting rating state. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[
<=this.setvariable(StartLoop, 5)>
]]></functionstep>
						</condition>
						<condition name="Retry" expression="{&lt;=SelectRatingState.isformfieldpresent(frmInput, PolicyClientPersonFirstName, input)&gt; EQUAL false}" appliesto="">
							<functionstep name="WaitStartLoop" id="83" prompt="no" errormessage="Error executing Wait function. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[
<=this.wait(10)>
]]></functionstep>
						</condition>
					</loop>
				</condition>
				<condition name="CheckSelectFieldProducerCode" expression="{&lt;=SelectRatingState.isformfieldpresent(frmInput, PolicyAgentNumber,select)&gt; EQUAL true}" appliesto="">
					<condition name="CheckStorePRoducerCode" expression="{&lt;=this.refreshvendorcodes(1, 1, &lt;=this.getprofilekeyvalue(username)&gt;)&gt; EQUAL true}" appliesto="">
						<functionstep name="StoreProducerCode" id="1190412266" prompt="no" errormessage="Error setting store producer code. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(Code, <=SelectRatingState.extractformselectallvalues(frmInput, PolicyAgentNumber)>)>

<=func.FixProducerCodeList(Code,|)>

<=this.setvendorcodes(1, 1, <=this.getprofilekeyvalue(username)>, <=this.getvariable(Code)>, |)>]]></functionstep>
					</condition>
				</condition>
			</condition>
		</condition>
	</condition>
</condition>
<condition name="STATE CHECK" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WV}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL SC}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AZ}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL VT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL KS}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL UT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ID}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL LA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NM}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NV}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OK}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WI}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NE}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OH}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL KY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL GA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL PA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NC}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NH}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL VA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MS}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ND}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL SD}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ME}" appliesto="AR -CA -CO -CT -GA -IA -ID -IL -IN -KS -KY -LA -MD -MN -MO -MS -NC -ND -NE -NH -NV -NY -OH -OK -OR -PA -TN -UT -VA -WA -WI -WY -">
	<abortstep message="State Error: &lt;=this.getvariable(dwellingstatecode)&gt; is not available for this carrier.  Please contact EZLynx support for further assistance." name="StateAbort" id="1536423929" savetest="false" savetestvalues="false" />
</condition>
<condition name="INCLUDE QUOTE SCENARIO FILE" expression="{1 EQUAL 1}" appliesto="">
	<include url="quotescenario/begininclude.scx" />
</condition>
<condition name="INCLUDE FILE" expression="{1 EQUAL 1}" appliesto="">
	<include url="includes/home/HOMEINCLUDE.scx" />
	<include profilekeyname="agencyfilter" />
	<condition name="Business Filter Includes" expression="{1 EQUAL 1}" appliesto="">
		<include profilekeyname="businesshome" />
	</condition>
	<functionstep name="SetSwimmingPoolType" id="1841452586" prompt="no" errormessage="Error setting SwimmingPoolType. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_swimmingpooltype, <=this.extractxpathvalue(/EZHOME/RatingInfo/SwimmingPoolType)>)>
<=this.setvariable(replcostdwel, 0)>]]></functionstep>
</condition>
<condition name="MAP VARIABLES" expression="{1 EQUAL 1}" appliesto="">
	<condition name="State-IA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}" appliesto="">
		<functionstep name="MapVariablesIA" id="773294815" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau-Iowa|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Guide One|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1500|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=1|2=2|3=3|4=4|5=5|6=6|7=7|8=8|9=9|10=10)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=CH|Domestic Partner=O|Employee=O|Insured=I|Other=O|Parent=FamilyMember|Relative=FamilyMember|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=TH|Rowhouse=TH|Coop=TH)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>
<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=4|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ASPHS|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Corrugated Steel=STCOR)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15%)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=1|No=0)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>


<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|SteelSid=SteelSid)>]]></functionstep>
	</condition>
	<condition name="State-MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="" id="869909171">
		<functionstep name="MapVariablesMI" id="1225242731" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=2|2=2|3=3|4=4|5=5|6=6|7=7|8=8|9=9|10=10)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=CH|Domestic Partner=C|Employee=O|Insured=I|Other=O|Parent=FamilyMember|Relative=FamilyMember|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=TH|Rowhouse=TH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>
<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=4|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ASPHS|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>


<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>




<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|Sstone=Stone)>
<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>]]></functionstep>
	</condition>
	<condition name="State-WV" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}" appliesto="">
		<functionstep name="MapVariablesWV" id="2064627530" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|25000=10000|50000=10000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=2|2=2|3=3|4=4|5=5|6=6|7=7|8=8|9=9|10=10)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=CH|Domestic Partner=C|Employee=O|Insured=I|Other=O|Parent=FamilyMember|Relative=FamilyMember|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=TH|Rowhouse=TH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>
<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=4|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ASPHS|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>


<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

]]></functionstep>
	</condition>
	<condition name="State-TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="170761339">
		<functionstep name="MapVariablesTX" id="1470662471" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1.5|2=2|2.5=2.5|3=3|3.5=3|Bi-Level=BI|Tri-Level=Tri-Level)>


<=this.setvariable(mapprotectionclass, 1=1|2=2|3=3|4=4|5=5|6=6|7=7|8=8|9=9|10=10)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=CH|Domestic Partner=C|Employee=O|Insured=I|Other=O|Parent=FamilyMember|Relative=FamilyMember|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=T3|HO4=04|HO5=T3|HO6=T6)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=DW|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=4|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ASPHS|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=ASPHS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=25000|50000=50000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_personalliabilityHO6, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1|1%=1|100=500|250=500|500=500|750=1000|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 20=20|25=20|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarmho4, Central=CN|Direct=CN|Local=LO)>


<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>


<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P13|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=1|Adult Care/Child Care/Daycare=1|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=1|Attorney=1|Auto/Vehicle Repair=1|Clerical=1|Consultant=F|Contractor/Artisan/Landscaper=1|Electronic/Machine Repair=1|Farming/Ranching=1|Financial Planner/Insurance Agent=1|Food Service=1|Hair Stylist/Beautician/Nail Salon=1|Massage Therapist=1|Photographer=1|Physician/Dentist/Ophthalmologist/Optometrist=1|Real Estate Agent/Appraiser=1|Sales w/Demo=3|Sales No Demo=1|Teacher - Athletic=5|Teacher - Other=7|Other=1)>

<=this.setvariable(map_moldlimitdamage, 25000=50|50000=50|75000=50|100000=50)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|Sstone=Sstone|SteelSid=Steel|L=Log)>]]></functionstep>
	</condition>
	<condition name="State-SC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}" appliesto="" id="15702386">
		<functionstep name="MapVariablesSC" id="156330720" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=10000|20000=10000|25000=10000|50000=10000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=1|2=2|3=3|4=4|5=5|6=6|7=7|8=8|9=9|10=10)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=CH|Domestic Partner=C|Employee=O|Insured=I|Other=O|Parent=FamilyMember|Relative=FamilyMember|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=4|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ASPHS|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1500|2000=2000|2500=2000|3000=2000|4000=2000|5000=2000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>


<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|SteelSid=SteelSid|Sstone=Sstone)>]]></functionstep>
		<condition name="MapdedSC" expression="{&lt;=this.getvariable(coverage_packagehome)&gt; NOTEQUAL Yes}" appliesto="" id="983797020">
			<functionstep name="MapdedSC" id="960495886" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=1500|1%=1500|100=1500|250=1500|500=1500|750=1500|1000=1500|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1500|1%=1500|100=1500|250=1500|500=1500|750=1500|1000=1500|1500=1500|2000=2000|2500=2000|3000=2000|4000=2000|5000=2000)>]]></functionstep>
		</condition>
	</condition>
	<condition name="State-AZ" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}" appliesto="" id="1795809075">
		<functionstep name="MapVariablesAZ" id="1143661052" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=MetLife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual||Modern USA=Modern USA)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|25000=20000|50000=20000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=4|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=Shingle-Asphalt|Shingle-Architectural=Shingle-Architectural|Wood-Shake=Wood-Shake|Wood-Victorian Scallop=Wood-Victorian Scallop|Tile-Clay/Concrete=Tile-Clay/Concrete|Tar and Gravel=Tar and Gravel|Rolled Rubber=Rolled Rubber|Slate=Slate|Corrugated Steel=Corrugated Steel|Tin=Tin|Copper=Copper|Foam=Foam)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2000|3000=2000|4000=2000|5000=2000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=11000|10000=11000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=L2|DOG BITE (LIABILITY)=L3|EARTH MOVEMENT=P8|EARTHQUAKE=P8|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P16|FREEZING WATER (INCLUDING BURST PIPES)=P1|HAIL=P2|LIABILITY (ALL OTHER)=L2|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P19|PHYSICAL DAMAGE (ALL OTHER)=L1|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12|WATERCRAFT=P12|WIND=P4|WORKER'S COMPENSATION=L3)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=W)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|Sstone=Sstone)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>


]]></functionstep>
	</condition>
	<condition name="State-VT" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}" appliesto="" id="1359340453">
		<functionstep name="MapVariablesVT" id="1012396247" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=1000|2000=2000|3000=5000|4000=4000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=4|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=W)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|L=Log|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>]]></functionstep>
	</condition>
	<condition name="State-MN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}" appliesto="" id="1367592948">
		<functionstep name="MapVariablesMN" id="1919358245" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1%=1|2%=2|3%=5|4%=5|5%=5|1500=2|2000=2|2500=2|5000=5|10000=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=S|Separated=S|Divorced=S)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=DW|Rowhouse=DW|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=4|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2000|3000=2000|4000=2000|5000=2000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=W)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=06|6-12 months=12)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|SteelSid=Steel)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>]]></functionstep>
	</condition>
	<condition name="State-AR" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}" appliesto="" id="820621963">
		<functionstep name="MapVariablesAR" id="2020673051" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=5000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=1|3%=1|4%=1|5%=1)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=DW|Rowhouse=RH|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=4|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2000|3000=2000|4000=2000|5000=2000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=Solid Fuel|Other=Electric)>

<=this.setvariable(map_fueltype, Gas=|Electric=ElectricBboard|Oil=|Solid Fuel=PelletStove|Other=Other)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=06|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=06|6-12 months=12)>

<=this.setvariable(mapcity, Yes=IN|No=SU)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|L=Log|SteelSid=Steel)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>]]></functionstep>
	</condition>
	<condition name="State-KS" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}" appliesto="" id="1571184386">
		<functionstep name="MapVariablesKS" id="1566900720" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1%=1|2%=2|3%=5|4%=5|5%=5|1500=1500|2000=2000|2500=2500|5000=5000|10000=7500)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1101-1200=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=DW|Rowhouse=RH|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2000|3000=2000|4000=2000|5000=2000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P1|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=Solid Fuel|Other=Electric)>

<=this.setvariable(map_fueltype, Gas=|Electric=ElectricBboard|Oil=|Solid Fuel=PelletStove|Other=Other)>
<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=06|6-12 months=12)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|SteelSid=Steel)>


<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>]]></functionstep>
		<condition name="Policy" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
			<functionstep name="RemapStructure" id="1584665981" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_structure, Dwelling=DW|Apartment=DW|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>
]]></functionstep>
		</condition>
	</condition>
	<condition name="State-UT" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}" appliesto="" id="1768368419">
		<functionstep name="MapVariablesUT" id="530269178" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=1000|2000=2000|3000=5000|4000=5000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>

<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1000|1%=1000|2%=2500|3%=5000|4%=5000|5%=5000)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1101-1200=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=ASPHS|Rolled Rubber=RUBB)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000|10000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|Sstone=Sstone)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>]]></functionstep>
	</condition>
	<condition name="State-CO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}" appliesto="" id="571957132">
		<functionstep name="MapVariablesCO" id="455872504" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>


<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1000|1%=1000|2%=2500|3%=5000|4%=5000|5%=5000)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=ASPHS|Rolled Rubber=RUBB)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=1000|250=1000|500=500|750=1000|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=10|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|Sstone=Sstone|SteelSid=Steel)>

]]></functionstep>
	</condition>
	<condition name="State-ID" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}" appliesto="" id="482316128">
		<functionstep name="MapVariablesID" id="2025276004" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>
<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=10000|20000=10000|25000=10000|50000=10000)>


<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1500|1%=1000|2%=2500|3%=5000|4%=5000|5%=5000)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log)>]]></functionstep>
	</condition>
	<condition name="State-IL" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="" id="910401533">
		<functionstep name="MapVariablesIL" id="1836208487" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=50500|2000=50500|3000=50500|4000=50500|5000=50500|6000=100500|7000=100500|8000=100500|9000=100500|10000=100500|15000=250500|20000=250500|25000=250500|50000=500500)>

<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1%=1|2%=2|3%=5|4%=5|5%=5|1500=1500|2000=2000|2500=2500|5000=5000|10000=7500)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=1|2=2|3=3|4=4|5=5|6=6|7=7|8=8|9=9|10=10)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=DW|Condo=CD|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO4, Dwelling=DW|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=ASPHS|Shingle-Architectural=ARCH|Tile-Clay/Concrete=TILE)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000|1500=1500|10000=7500)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|2000=2000|2500=2000|3000=2000|4000=2000|5000=2000|1500=1500|10000=7500)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=10|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=06|6-12 months=12)>


<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>


<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|L=Log|SteelSid=Steel|Sstone=Sstone)>

]]></functionstep>
		<functionstep name="SCC-12435" id="1711244522" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000|1500=1500|10000=7500)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|2000=2000|2500=2000|3000=2000|4000=2000|5000=2000|1500=1500|10000=7500)>

<=this.setvariable(map_earthquakedeductible, 5%=05|10%=10|15%=15|20%=20|25%=25)>]]></functionstep>
	</condition>
	<condition name="State-LA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}" appliesto="" id="1180294631">
		<functionstep name="MapVariablesLA" id="771894928" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=|2000=|3000=|4000=|5000=|6000=|7000=|8000=|9000=|10000=|15000=|20000=|25000=|50000=)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|10000=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO4, Dwelling=DW|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|2000=1000|1500=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log)>]]></functionstep>
	</condition>
	<condition name="State-MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}" appliesto="" id="539742407">
		<functionstep name="MapVariablesMO" id="277639515" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW|Cape Cod=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|Shingle-Asphalt=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1500|1%=1500|100=1500|250=1500|500=1500|750=1500|1000=1500|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2000|3000=2000|4000=2000|5000=2000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=10|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P13|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=00|6 months or less=06|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>


<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>


<=this.setvariable(mapprotectionclass, 1=1|2=2|3=3|4=4|5=5|6=6|7=7|8=8|9=9|10=10)>]]></functionstep>
	</condition>
	<condition name="State-AL" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}" appliesto="" id="1979964638">
		<functionstep name="MapVariablesAL" id="1815121060" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5|2000=2)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=4|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=ASPHS|PLASTIC(PITCHED)=ASPHS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=ASPHS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000|1500=2500)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|2000=1000|2500=2000|3000=1000|4000=1000|5000=1000|1500=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=W)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=00|6 months or less=06|6-12 months=12)>
]]></functionstep>
		<condition name="MapdedAL" expression="{&lt;=this.getvariable(coverage_packagehome)&gt; NOTEQUAL Yes}" appliesto="">
			<functionstep name="MapdedAL" id="901464293" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=5000|1%=5000|100=5000|250=5000|500=5000|750=5000|1000=5000|2000=5000|2500=5000|3000=5000|4000=5000|5000=5000|1500=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=5000|1%=5000|100=5000|250=5000|500=5000|750=5000|1000=5000|2000=5000|2500=5000|3000=5000|4000=5000|5000=5000|1500=5000)>]]></functionstep>
		</condition>
	</condition>
	<condition name="State-NM" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}" appliesto="" id="383548452">
		<functionstep name="MapVariablesNM" id="1374174461" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|25000=10000|50000=10000)>

<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1|1500=1500|1%=1|2%=2|3%=3|4%=4|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO4, Dwelling=DW|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=ASPHS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>


<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_waterbackupamountHO4, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|25000=10000|50000=10000)>


<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|SteelSid=Steel|Sstone=BrStone)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>]]></functionstep>
	</condition>
	<condition name="State-NV" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}" appliesto="" id="749385924">
		<functionstep name="MapVariablesNV" id="236748249" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=MetLife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|25000=10000|50000=10000)>

<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1500|1%=1000|2%=2500|3%=5000|4%=5000|5%=5000|2000=2500)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO4, Dwelling=DW|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2500|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>


<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>
]]></functionstep>
	</condition>
	<condition name="State-OK" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}" appliesto="">
		<functionstep name="MapVariablesOK" id="1842600516" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_WindDeductible, 100=2000|250=2000|500=2000|1000=2000|1500=2000|2000=2000|5000=2000|1%=1|2%=2|3%=2|4%=2|5%=2)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=DW|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=550|1001-1100=1500|1401-1500=1500)>]]></functionstep>
	</condition>
	<condition name="State-WI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}" appliesto="">
		<functionstep name="MapVariablesWI" id="1064447385" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Bunker Hill=Bunker Hill)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=50000|20000=50000|25000=50000|50000=50000)>

<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1500|2500=2500|5000=5000|1%=1000|2%=2500|3%=5000|4%=5000|5%=5000)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=06|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>]]></functionstep>
		<functionstep name="SCC-12359-WI" id="1886065115" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1500|2000=2000|2500=2500|5000=5000|7500=7500|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>


<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2000|2500=2000|3000=2000|4000=2000|5000=2000)>


<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=75|50=75|75=75|100=75)>]]></functionstep>
	</condition>
	<condition name="State-WY" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}" appliesto="" id="1055456295">
		<functionstep name="MapVariablesWY" id="758277027" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|25000=10000|50000=10000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=2|4%=2|5%=2)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=DW|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO4, Dwelling=DW|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick)>
]]></functionstep>
	</condition>
	<condition name="State-CA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="" id="654065861">
		<functionstep name="MapVariablesCA" id="1872953300" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|25000=10000|50000=10000)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F|X - Not Specified=X)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000|10000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=15000|10000=15000|25000=55000|50000=50000|75000=55000|100000=55000)>

<=this.setvariable(map_lossassessmentamountho7, 5000=15000|10000=15000|25000=55000|50000=50000|75000=55000|100000=55000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=Y|No=N)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=Solid Fuel|Other=Electric)>

<=this.setvariable(map_fueltype, Gas=|Electric=ElectricBboard|Oil=|Solid Fuel=PelletStove|Other=Other)>
<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(map_earthquake, Yes=YES|No=NO)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>


<=this.setvariable(mapreplcostdwel, 25=25|50=50|100=50)>


<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|Sstone=Sstone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log)>]]></functionstep>
	</condition>
	<condition name="State-MT" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}" appliesto="" id="442483065">
		<functionstep name="MapVariablesMT" id="899830566" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1000|1%=1000|2%=2500|3%=5000|4%=5000|5%=5000)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ARCH|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=ASPHS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=Solid Fuel|Other=Electric)>

<=this.setvariable(map_fueltype, Gas=|Electric=ElectricBboard|Oil=|Solid Fuel=PelletStove|Other=Other)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(mapreplcostdwel, 25=25|50=50|100=50)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>]]></functionstep>
	</condition>
	<condition name="State-NY" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}" appliesto="" id="1491869414">
		<functionstep name="MapVariablesNY" id="806204633" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO4, Dwelling=DW|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=Shingle-Asphalt|Shingle-Architectural=Shingle-Architectural|Wood-Shake=Wood-Shake|Wood-Victorian Scallop=Wood-Victorian Scallop|Tile-Clay/Concrete=Tile-Clay/Concrete|Tar and Gravel=Tar and Gravel|Rolled Rubber=Rolled Rubber|Slate=Slate|Corrugated Steel=Corrugated Steel|Tin=Tin|Copper=Copper|Foam=Foam)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000|1000000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(mapreplcostdwel, 25=25|50=50|100=50)>
]]></functionstep>
		<condition name="SCC-8392" expression="{1 EQUAL 1}" appliesto="">
			<condition name="HomeOwners" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}" appliesto="">
				<functionstep name="ReMapNY" id="1560392114" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>]]></functionstep>
			</condition>
			<condition name="Renters" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="">
				<functionstep name="ReMapRenters" id="860973153" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_waterbackupamount, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>]]></functionstep>
			</condition>
		</condition>
	</condition>
	<condition name="State-NE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}" appliesto="">
		<functionstep name="MapVariablesNE" id="70995542" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=MetLife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=15000|20000=20000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1500|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRI)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>



<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASPHS|ASPHALT SHINGLES=ASPHS|COMPOSITION=ARCH|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=ARCH|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=STCOR|METAL(PITCHED)=STCOR|MINERAL FIBER SHAKE=ARCH|OTHER=ARCH|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=RUBB|ROLLED PAPER(PITCHED)=RUBB|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TARGRB|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=LTMTLPNL|TIN(PITCHED)=LTMTLPNL|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=300000|500000=300000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=1000|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2000|2500=2000|3000=2000|4000=2000|5000=2000)>

<=this.setvariable(map_deductibleHO6, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau Ins- NE|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=MetLife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide/Scottsdal|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St Paul Companies|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(mapreplcostdwel, 25=25|50=50|100=50)>
]]></functionstep>
	</condition>
	<condition name="State-OH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}" appliesto="" id="1203843575">
		<functionstep name="MapVariablesOH" id="503375436" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1||1500=11%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>


<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=ARCH|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log)>


<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>
<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>


<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=ARCH|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log)>


<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>
<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>


<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=ARCH|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log)>


<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>
<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>


<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=ARCH|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log)>


<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>
<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>


<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=ARCH|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log)>


<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>
<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>


<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=ARCH|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log)>


<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|25000=20000|50000=20000)>
<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|2000=2|2500=5|5000=5|10000=5|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>


<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=ARCH|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log)>


<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>
<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|2000=2|2500=2|5000=5|10000=5|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>


<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=ARCH|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|SteelSid=Steel|Sstone=Stone|)>


<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=20000)>
]]></functionstep>
		<condition name="MapdedOH" expression="{&lt;=this.getvariable(coverage_packagehome)&gt; NOTEQUAL Yes}" appliesto="" id="872738494">
			<functionstep name="MapdedOH" id="1097536840" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>]]></functionstep>
		</condition>
	</condition>
	<condition name="State-TN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}" appliesto="" id="670976929">
		<functionstep name="MapVariablesTN" id="895294169" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=20000|20000=20000|25000=20000|50000=50000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=C|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000|10000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|Sstone=Sstone)>
<=this.setvariable(map_waterbackupamountHO4, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=20000|20000=20000|25000=25000|50000=50000)>
]]></functionstep>
		<condition name="MapdedTN" expression="{&lt;=this.getvariable(coverage_packagehome)&gt; NOTEQUAL Yes}" appliesto="" id="1092582257">
			<functionstep name="MapdedTN" id="1048313363" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=1500|1%=1500|100=1500|250=1500|500=1500|750=1500|1000=1500|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1500|1%=1500|100=1500|250=1500|500=1500|750=1500|1000=1500|1500=1000|2000=1500|2500=1500|3000=1500|4000=1500|5000=1500)>]]></functionstep>
		</condition>
	</condition>
	<condition name="State-KY" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="" id="1609529668">
		<functionstep name="MapVariablesKY" id="1928821241" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Previous Property Insurance|21st Century=21st Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>


<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>

<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1500|1%=1000|2%=2500|3%=5000|4%=5000|5%=5000)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=|)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO4, Dwelling=DW|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(mapreplcostdwel, 25=25|50=50|100=50)>]]></functionstep>
		<condition name="MapdedKY" expression="{&lt;=this.getvariable(coverage_packagehome)&gt; NOTEQUAL Yes}" appliesto="" id="1471374805">
			<functionstep name="MapdedKY" id="37034854" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>]]></functionstep>
		</condition>
	</condition>
	<condition name="State-CT" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}" appliesto="" id="938147947">
		<functionstep name="MapVariablesCT" id="1534059365" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=CH|Domestic Partner=C|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|Sstone=Sstone)>

<=this.setvariable(map_waterbackupamountHO4, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>


<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>
]]></functionstep>
	</condition>
	<condition name="State-GA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}" appliesto="" id="304439785">
		<functionstep name="MapVariablesGA" id="260351449" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse|Cottage=Cottage)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|2000=5|2500=5|5000=5|10000=5|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=C|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1000|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|Sstone=Sstone|SteelSid=Steel)>

<=this.setvariable(map_waterbackupamountHO4, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>


<=this.setvariable(map_moldlimitdamage, 25000=25000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>

<=this.setvariable(map_citylim, Yes=YES|No=NO)>]]></functionstep>
		<condition name="MapdedGA" expression="{&lt;=this.getvariable(coverage_packagehome)&gt; NOTEQUAL Yes}" appliesto="" id="983754577">
			<functionstep name="MapdedGA" id="486346110" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=1500|1%=1500|100=1500|250=1500|500=1500|750=1500|1000=1500|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1500|1%=1500|100=1500|250=1500|500=1500|750=1500|1000=1500|1500=1500|2000=1500|2500=1500|3000=1500|4000=1500|5000=1500)>
]]></functionstep>
		</condition>
	</condition>
	<condition name="State-WA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}" appliesto="" id="1386112790">
		<functionstep name="MapVariablesWA" id="1643773440" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=C|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=20|10%=20|15%=20|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log)>

<=this.setvariable(map_moldlimitdamage, 25000=25000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>

]]></functionstep>
	</condition>
	<condition name="State-OR" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}" appliesto="" id="1760361146">
		<functionstep name="MapVariablesOR" id="2072009079" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>


<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|5000=5|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F|X - Not Specified=X)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=S
|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=2500|3000=2500|4000=2500|5000=2500)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|SteelSid=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log)>


<=this.setvariable(map_moldlimitdamage, 25000=25000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>

]]></functionstep>
		<functionstep name="SCC-12359-OR" id="1755857051" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=2500|3000=2500|4000=2500|5000=2500)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=75|50=75|75=75|100=100)>]]></functionstep>
	</condition>
	<condition name="State-IN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}" appliesto="" id="1601852223">
		<functionstep name="MapVariablesIN" id="426570329" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>


<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1500|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=CH|Domestic Partner=O|Employee=O|Insured=I|Other=O|Parent=FamilyMember|Relative=FamilyMember|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=2|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000|1000000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=Electric|Oil=O|Solid Fuel=W|Other=PelletStove)>

<=this.setvariable(map_fueltype, Gas=G|Electric=Electric|Oil=Oil|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|SteelSid=SteelSid|Sstone=Sstone)>


<=this.setvariable(map_moldlimitdamage, 25000=25000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>

<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=F|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=F|Stucco on Block=F|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>
]]></functionstep>
	</condition>
	<condition name="State-PA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}" appliesto="" id="8667615530">
		<functionstep name="MapVariablesPA" id="16334279957" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America|Allianz of America-Jefferson=Allianz of America|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>


<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=002|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=S|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000|1000000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>

<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=Electric|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|Sstone=BrStone|SteelSid=Steel)>


<=this.setvariable(map_moldlimitdamage, 25000=25000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>]]></functionstep>
		<condition name="MapdedPA" expression="{&lt;=this.getvariable(coverage_packagehome)&gt; NOTEQUAL Yes}" appliesto="" id="1175134396">
			<functionstep name="MapdedPA" id="1580791628" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>
]]></functionstep>
		</condition>
	</condition>
	<condition name="State-NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="" id="811181275">
		<functionstep name="MapVariablesNC" id="345786324" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America|Allianz of America-Jefferson=Allianz of America|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=25000)>


<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=S|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000|1000000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=500|750=1000|1000=1000|1500=1500|2000=2500|2500=2500|3000=2500|4000=2500|5000=2500)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=500|250=500|500=500|750=1000|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=11000|10000=11000|25000=26000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=11000|10000=11000|25000=26000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=11000|10000=11000|25000=26000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>

<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=Electric|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|Sstone=Sstone)>


<=this.setvariable(map_moldlimitdamage, 25000=25000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>]]></functionstep>
	</condition>
	<condition name="State-NH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}" appliesto="" id="195313507">
		<functionstep name="MapVariablesNH" id="506786034" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America|Allianz of America-Jefferson=Allianz of America|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>


<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=S|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000|1000000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=3)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=05|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=100|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>

<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=Electric|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|Sstone=Sstone)>


<=this.setvariable(map_moldlimitdamage, 25000=25000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>]]></functionstep>
	</condition>
	<condition name="State-MD" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}" appliesto="" id="879110585">
		<functionstep name="MapVariablesMD" id="196936435" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America|Allianz of America-Jefferson=Allianz of America|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000|Full=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000|Full=5000)>


<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=S|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000|1000000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5|2500=1)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=005|10%=010|15%=015|20%=020|25%=025)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>

<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=Electric|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=1500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|SteelSid=Steel|Sstone=Sstone)>


<=this.setvariable(map_moldlimitdamage, 25000=25000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>]]></functionstep>
	</condition>
	<condition name="State-VA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="" id="866715530">
		<functionstep name="MapVariablesVA" id="1634279957" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Rambler=Ranch/Rambler|RaisRanch=Bi-Level/Raised Ranch|SplitLvl=Tri-/Split Level|CapeCod=Cape Cod|Colonial=Colonial|Contemp=Contemporary|com.safeco_Craftsman=Craftsman|QueenAnne=Queen Anne|Vict=Victorian|L=Log Home|Manufactured Home=Manufactured Home|Mobile Home=Mobile Home|THEndUnit=Row/Townhouse - End|THCtrUnit=Row/Townhouse)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America|Allianz of America-Jefferson=Allianz of America|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto & Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire & Cas|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|Mid-Continent=Mid-Continent)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=6000|7000=7000|8000=8000|9000=9000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>


<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=S|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=DW|Townhouse=DW|Rowhouse=DW|Coop=DW)>

<=this.setvariable(map_structureHO6, Dwelling=CD|Apartment=CD|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000|1000000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_WindDeductible, 100=1000|250=1000|500=1000|1000=1000|1500=1000|2000=2|2500=5|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=100|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=100|50=100|75=100|100=100)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=P16|DOG BITE (LIABILITY)=L1|EARTH MOVEMENT=P8|EARTHQUAKE=P16|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P12b|FREEZING WATER (INCLUDING BURST PIPES)=P12a|HAIL=P2|LIABILITY (ALL OTHER)=L1|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P14|PHYSICAL DAMAGE (ALL OTHER)=P16|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12b|WATERCRAFT=P16|WIND=P4|WORKER'S COMPENSATION=P16)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>

<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=Electric|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_monthsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=05|6-12 months=12)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1200=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1501 and Greater=1500|None in Area=500|1001-1100=1500|1401-1500=1500)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>


<=this.setvariable(constructionvalues, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Contemp|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|L=Log|Sstone=Sstone)>


<=this.setvariable(map_moldlimitdamage, 25000=25000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>]]></functionstep>
	</condition>
	<condition name="State-NE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}" appliesto="">
		<functionstep name="RemapStructureNE" id="1745136595" prompt="no" errormessage="Error remapping structures. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=DW|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW|Back Split=DW|Tri-level=DW|Tri-level/Row Center=DW|Tri-level/Row End=DW)>

<=this.setvariable(map_structureHO4, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=RH|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW|Back Split=DW|Tri-level=DW|Tri-level/Row Center=RH|Tri-level/Row End=RH)>

<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=CD|Bi-Level/Row End=RH|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD|Back Split=CD|Tri-level=CD|Tri-level/Row Center=RH|Tri-level/Row End=RH)>


<=this.setvariable(dwellinginfo_numberofstories, <=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>)>

<=this.setvariable(mapnumberofstories,1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL|1H=1H|2H=2H|3=3|3.5=3|4=3|BILEVEL=BILEVEL|TRILEVEL=TRILEVEL)>]]></functionstep>
		<condition name="PolicyTypeHO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="">
			<functionstep name="PortalChangesMappings2.5HO4" id="434536946" prompt="no" errormessage="Error remapping structures. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_construction, Adobe=MY|Aluminum/Vinyl=SteelSid|Barn Plank=F|Brick=MY|Brick on Block=MY|Brick on Block\, Custom=MY|Brick Veneer=V|Brick Veneer\, Custom=V|Cement Fiber Shingles=B|Clapboard=F|Concrete Decorative Block\, Painted=B|Exterior Insulation and Finish System \(EIFS\)= EIFSS|Fire Resistant=B|Frame=F|Logs=L|Poured Concrete=B|Siding\, Aluminum=SteelSid|Siding\, Hardboard=SteelSid|Siding\, Plywood=F|Siding\, Steel=SteelSid|Siding\, T-111=SteelSid|Siding\, Vinyl=I|Siding\, Wood=F|Slump Block=MY|Solid Brick=MY|Solid Brick\, Custom=MY|Solid Brownstone=MY|Solid Stone=BrStone|Solid Stone\, Custom=MY|Stone on Block=MY|Stone on Block\, Custom Stone=MY|Stone Veneer=MY|Stone Veneer\, Custom=MY|Stucco=MY|Stucco on Block=F|Stucco on Frame=F|Victorian Scalloped Shakes=F|Window Wall= WinWall|Wood Shakes=F)>
]]></functionstep>
		</condition>
	</condition>
	<condition name="State-MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}" appliesto="">
		<functionstep name="PortalChangesMappingsa" id="914257978" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|Log=Log|BrickY=Brick|Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=A|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard|L=L|Sstone=Sstone|SteelSid=SteelSid)>

]]></functionstep>
	</condition>
	<condition name="State-KY" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="">
		<functionstep name="MapEXTWallsKY" id="123845432" prompt="no" errormessage="Error mapping Exterior walls for KY. Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>


<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=ElectricBboard|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=Other)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapconstructionstyle, Apartment=Contemp|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=THCtrUnit|Bi-Level/Row End=THEndUnit|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Contemp|Coop=Contemp|Contemporary=Contemp|Cottage=Contemp|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THCtrUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|Back Split=Contemp|Tri-level/Row Center=SplitLvl|Tri-level/Row End=SplitLvl|Contemp=Contemporary|RaisRanch=RaisRanch)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=4|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(map_structure, Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW|Back Split=DW|Tri-level=DW|Tri-level/Row Center=DW|Tri-level/Row End=DW)>

<=this.setvariable(map_structureHO4, Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW|Tri-level=DW|)>


<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=CD|Bi-Level/Row End=CD|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=CD|Rowhouse Center=CD|Rowhouse End=CD|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>


<=this.setvariable(map_construction, Adobe=MY|Aluminum/Vinyl=SteelSid|Barn Plank=F|Brick=MY|Brick on Block=MY|Brick on Block\, Custom=MY|Brick Veneer=V|Brick Veneer\, Custom=V|Cement Fiber Shingles=B|Clapboard=F|Concrete Decorative Block\, Painted=B|Exterior Insulation and Finish System \(EIFS\)= EIFSS|Fire Resistant=B|Frame=F|Logs=L|Poured Concrete=B|Siding\, Aluminum=SteelSid|Siding\, Hardboard=SteelSid|Siding\, Plywood=F|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=F|Slump Block=MY|Solid Brick=MY|Solid Brick\, Custom=MY|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=Sstone|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoC|Victorian Scalloped Shakes=Clapboard|Window Wall= WinWall|Wood Shakes=F|Siding\, Aluminum=SteelSid)>

<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=BrickY|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Blapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)= EIFSS|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminium=Steel|Siding\, Hardboard=SteelSid|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrSton|Solid Stone=Sstone|Solid Stone\, Custom=BrSton|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=Sstone|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall= WinWall|Wood Shakes=Clapboard)>


<=this.setvariable(map_construction, Adobe=MY|Aluminum/Vinyl=SteelSid|Barn Plank=F|Brick=MY|Brick on Block=MY|Brick on Block\, Custom=MY|Brick Veneer=V|Brick Veneer\, Custom=V|Cement Fiber Shingles=B|Clapboard=F|Concrete Decorative Block\, Painted=B|Exterior Insulation and Finish System \(EIFS\)=B|Fire Resistant=B|Frame=F|Logs=L|Poured Concrete=B|Siding\, Aluminum=SteelSid|Siding\, Hardboard=F|Siding\, Plywood=F|Siding\, Steel=SteelSid|Siding\, T-111=F|Siding\, Vinyl=I|Siding\, Wood=F|Slump Block=MY|Solid Brick=MY|Solid Brick\, Custom=MY|Solid Brownstone=MY|Solid Stone=MY|Solid Stone\, Custom=MY|Stone on Block=MY|Stone on Block\, Custom Stone=MY|Stone Veneer=V|Stone Veneer\, Custom=V|Stucco=B|Stucco on Block=B|Stucco on Frame=B|Victorian Scalloped Shakes=F|Window Wall=F|Wood Shakes=F)>


]]></functionstep>
	</condition>
	<condition name="State-CT" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}" appliesto="">
		<functionstep name="MapEXTWallsCT" id="61159812" prompt="no" errormessage="Error mapping Exterior walls for KY. Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[
<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>



<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=Electric|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THCtrUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=4|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=DW|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>

<=this.setvariable(map_structureHO4, Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=THEndUnit|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>


<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>


<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>



]]></functionstep>
	</condition>
	<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}" appliesto="MS -">
		<functionstep name="MapVariablesMS" id="1623918282" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Vict|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl|Vict=Vict)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=MetLife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|20000=10000|50000=10000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=003|2=003|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=DW|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>

<=this.setvariable(map_structureHO4, Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>


<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=CD|Bi-Level/Row End=CD|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=L2|DOG BITE (LIABILITY)=L3|EARTH MOVEMENT=P8|EARTHQUAKE=P8|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P16|FREEZING WATER (INCLUDING BURST PIPES)=P1|HAIL=P2|LIABILITY (ALL OTHER)=L2|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P19|PHYSICAL DAMAGE (ALL OTHER)=L1|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12|WATERCRAFT=P12|WIND=P4|WORKER'S COMPENSATION=L3)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|L=Log)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=3000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|25000=10000|50000=10000)>

<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=ElectricBboard|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=06)>

<=this.setvariable(map_WindDeductiblems,1=1|2=2|5=5)>


<=this.setvariable(map_hail,Yes=Yes|No=No)>]]></functionstep>
	</condition>
	<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}" appliesto="ND -" id="1991966930">
		<functionstep name="MapVariablesND" id="1315218335" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=Bungalow|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl|Vict=Vict)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=MetLife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|20000=10000|50000=10000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>
<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=003|2=003|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=S|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=DW|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>

<=this.setvariable(map_structureHO4, Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>


<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=CD|Bi-Level/Row End=CD|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>


<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=2500|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=L2|DOG BITE (LIABILITY)=L3|EARTH MOVEMENT=P8|EARTHQUAKE=P8|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P16|FREEZING WATER (INCLUDING BURST PIPES)=P1|HAIL=P2|LIABILITY (ALL OTHER)=L2|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P19|PHYSICAL DAMAGE (ALL OTHER)=L1|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12|WATERCRAFT=P12|WIND=P4|WORKER'S COMPENSATION=L3)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|L=Log|SteelSid=Steel)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=3000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=15000|20000=20000|25000=25000|50000=50000)>

<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=ElectricBboard|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=06)>

<=this.setvariable(map_WindDeductiblend,1000=1000|1500=1500|2000=2000|2500=2500|5000=5000|1%=1%|2%=2%|3%=3%|4%=4%|5%=5%)>

<=this.setvariable(map_hail,Yes=Yes|No=No)>]]></functionstep>
	</condition>
	<condition name="State-SD" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}" appliesto="">
		<functionstep name="MapVariablesSD" id="1195772494" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Vict|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl|Vict=Vict)>

<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=MetLife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=10000|20000=10000|25000=10000|50000=10000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=003|2=003|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=DW|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>

<=this.setvariable(map_structureHO4, Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>


<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1500|2000=2000|2500=1500|3000=3000|4000=4000|5000=5000|1500=1500)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1500|2500=1500|3000=1500|4000=1500|5000=1500)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=15|10%=15|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000|11000=11000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=50|100=50)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=L2|DOG BITE (LIABILITY)=L3|EARTH MOVEMENT=P8|EARTHQUAKE=P8|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P16|FREEZING WATER (INCLUDING BURST PIPES)=P1|HAIL=P2|LIABILITY (ALL OTHER)=L2|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P19|PHYSICAL DAMAGE (ALL OTHER)=L1|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12|WATERCRAFT=P12|WIND=P4|WORKER'S COMPENSATION=L3)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|L=Log|SteelSid=SteelSid)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=3000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=15000|20000=20000|25000=25000|50000=50000)>

<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=ElectricBboard|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(map_hail,Yes=Yes|No=No)>

<=this.setvariable(map_WindDeductiblend,1000=1000|1500=1500|2000=2000|2500=2500|5000=5000|1%=1%|2%=2%|3%=3%|4%=4%|5%=5%)>]]></functionstep>
	</condition>
	<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}" appliesto="MA -" id="1874203384">
		<functionstep name="MapVariablesMA" id="1369430496" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Vict|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl|Vict=Vict)>


<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=MetLife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>

<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>

<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=20000|20000=20000|25000=20000|50000=50000)>

<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>

<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapprotectionclass, 1=003|2=003|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>

<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>

<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>

<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>

<=this.setvariable(mapcombo, Yes=Y|No=N)>

<=this.setvariable(mapgender, Male=M|Female=F)>

<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>

<=this.setvariable(maprelation, Child=C|Domestic Partner=P|Employee=O|Insured=I|Other=O|Parent=F|Relative=F|Spouse=SP)>

<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>

<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>

<=this.setvariable(map_occupied, Owner=|Tenant=)>

<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>

<=this.setvariable(map_construction, Frame=F|Brick=MY|Brick Veneer=V|Aluminum/Vinyl=SteelSid|Fire Resistant=F|Stucco=F)>

<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=DW|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>

<=this.setvariable(map_structureHO4, Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>


<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>

<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>

<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=1000|1%=1000|100=1000|250=1000|500=1000|750=1000|1000=1000|1500=1500|2000=1000|2500=2500|3000=2500|4000=2500|5000=5000|1500=1500)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=1000|3000=1000|4000=1000|5000=1000)>

<=this.setvariable(map_deductibleHO6, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=2500|3000=2500|4000=2500|5000=5000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000|11000=11000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=25|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=L2|DOG BITE (LIABILITY)=L3|EARTH MOVEMENT=P8|EARTHQUAKE=P8|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P16|FREEZING WATER (INCLUDING BURST PIPES)=P1|HAIL=P2|LIABILITY (ALL OTHER)=L2|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P19|PHYSICAL DAMAGE (ALL OTHER)=L1|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12|WATERCRAFT=P12|WIND=P4|WORKER'S COMPENSATION=L3)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=Oil|Other=PelletStove|Solid Fuel=W)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|L=Log)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=ElectricBboard|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_fueltypeHO6, Gas=|Gas - Forced Air=G|Gas - Hot Water=U|Electric=ElectricBboard|Oil=O|Oil - Forced Air=O
|Oil - Hot Water=O|Solid Fuel=W|Other=I)>

<=this.setvariable(map_monthsatcurrent, 1=00|2=00|3=00|4=00|5=00|6=00|7=00|8=00|9=00|10=00|More than 10=0|6 months or less=05|6-12 months=12)>

<=this.setvariable(map_hail,Yes=Yes|No=No)>

<=this.setvariable(map_WindDeductiblend,1000=1000|1500=1500|2000=2000|2500=2500|5000=5000|1%=1%|2%=2%|3%=3%|4%=4%|5%=5%)>

<=this.setvariable(map_exteriorwallspcHO4, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>
]]></functionstep>
	</condition>
	<condition name="State-TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
		<functionstep name="ConstructionMappingsTX" id="902289851" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_construction, Adobe=MY|Aluminum/Vinyl=SteelSid|Barn Plank=F|Brick=MY|Brick on Block=MY|Brick on Block\, Custom=MY|Brick Veneer=V|Brick Veneer\, Custom=V|Cement Fiber Shingles=B|Clapboard=F|Concrete Decorative Block\, Painted=B|Exterior Insulation and Finish System \(EIFS\)=MY|Fire Resistant=V|Frame=F|Logs=L|Poured Concrete=B|Siding\, Aluminum=SteelSid|Siding\, Hardboard=F|Siding\, Plywood=F|Siding\, Steel=SteelSid|Siding\, T-111=F|Siding\, Vinyl=I|Siding\, Wood=F|Slump Block=MY|Solid Brick=MY|Solid Brick\, Custom=MY|Solid Brownstone=MY|Solid Stone=MY|Solid Stone\, Custom=MY|Stone on Block=MY|Stone on Block\, Custom Stone=MY|Stone Veneer=V|Stone Veneer\, Custom=V|Stucco=F|Stucco on Block=F|Stucco on Frame=F|Victorian Scalloped Shakes=F|Window Wall=F|Wood Shakes=F)>

<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=A|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>

<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>
]]></functionstep>
	</condition>
	<condition name="State-ME" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="" id="1994986995">
		<functionstep name="MapVariablesME" id="2059421385" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Vict|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl|Vict=Vict)>
<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=AllianzAmer/Jefferso|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=MetLife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual)>
<=this.setvariable(maproof, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>
<=this.setvariable(mapplumbing, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>
<=this.setvariable(mapwiring, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>
<=this.setvariable(mapheating, NOT UPDATED=|PARTIAL UPDATE=P|COMPLETE UPDATE=C)>
<=this.setvariable(map_increasedCreditCardAmount, 1\,000=1000|2\,500=2500|5\,000=5000|7\,500=7500|10\,000=10000)>
<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=20000|20000=20000|25000=20000|50000=50000)>
<=this.setvariable(map_waterbackupamountHO4, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000|6000=5000|7000=5000|8000=5000|9000=5000|10000=5000|15000=5000|20000=5000|25000=5000|50000=5000)>
<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>
<=this.setvariable(mapnumberofstoriesME, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=4|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>
<=this.setvariable(mapprotectionclass, 1=001|2=002|3=003|4=004|5=005|6=006|7=007|8=008|9=009|10=010)>
<=this.setvariable(mapearthquakezone, 1=2|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5)>
<=this.setvariable(mapexcludemasonryveneer, Yes=Y|No=N)>
<=this.setvariable(mapmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>
<=this.setvariable(mapcoappmaritalstatus, Single=S|Married=M|Domestic Partner=C|Widowed=W|Separated=P|Divorced=D)>
<=this.setvariable(mapoccupation, Self-Employed=|Employed=|Unemployed=|Homemaker=|Retired=|Student=)>
<=this.setvariable(mapcombo, Yes=Y|No=N)>
<=this.setvariable(mapgender, Male=M|Female=F)>
<=this.setvariable(mapterm, 6 Month=12|12 Month=12)>
<=this.setvariable(maprelation, Child=CH|Domestic Partner=C|Employee=O|Insured=I|Other=O|Parent=FamilyMember|Relative=FamilyMember|Spouse=SP)>
<=this.setvariable(map_statecode, AK=|AL=|AR=|AZ=|CA=|CO=|CT=|DC=|DE=|FL=|GA=|HI=|IA=|ID=|IL=|IN=|KS=|KY=|LA=|MA=|MD=|ME=|MI=|MN=|MO=|MS=|MT=|NC=|ND=|NE=|NH=|NJ=|NM=|NV=|NY=|OH=|OK=|OR=|PA=|RI=|SC=|SD=|TN=|TX=|UT=|VA=|VT=|WA=|WI=|WV=|WY=)>
<=this.setvariable(map_policy, HO3=03|HO4=04|HO5=03|HO6=06)>
<=this.setvariable(map_occupied, Owner=|Tenant=)>
<=this.setvariable(mapdistancetofirehydrant, 1-500=500|501-600=550|601-1000=750|1001 and Greater=1500|1001-1100=1500|1101-1200=1500|1201-1300=1500|1301-1400=1500|1401-1500=1500|1501 and Greater=1500|None in Area=1500)>
<=this.setvariable(map_construction, Adobe=MY|Aluminum/Vinyl=SteelSid|Barn Plank=F|Brick=MY|Brick on Block=MY|Brick on Block\, Custom=MY|Brick Veneer=V|Brick Veneer\, Custom=V|Cement Fiber Shingles=B|Clapboard=F|Concrete Decorative Block\, Painted=B|Exterior Insulation and Finish System \(EIFS\)= EIFSS|Fire Resistant=B|Frame=F|Logs=L|Poured Concrete=B|Siding\, Aluminum=SteelSid|Siding\, Hardboard=SteelSid|Siding\, Plywood=F|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=F|Slump Block=MY|Solid Brick=MY|Solid Brick\, Custom=MY|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=Sstone|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=A|Victorian Scalloped Shakes=Clapboard|Window Wall= WinWall|Wood Shakes=F|Siding\, Aluminum=SteelSid)>
<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=DW|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>
<=this.setvariable(map_structureHO4, Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>
<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>
<=this.setvariable(map_useage, Primary=1|Secondary=3|Seasonal=3|Farm=3|Unoccupied=3|Vacant=3|COC=3)>
<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS)>
<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=3|Four Family=4)>

<=this.setvariable(map_retireescredit, Yes=|No=)>

<=this.setvariable(map_maturediscount, Yes=|No=)>

<=this.setvariable(map_retirementcommunity, Yes=|No=)>

<=this.setvariable(map_limitedaccesscommunity, Yes=|No=)>

<=this.setvariable(map_gatedcommunity, Yes=|No=)>

<=this.setvariable(map_multipolicy, Yes=|No=)>

<=this.setvariable(map_personalliability, 25000=100000|50000=100000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=2500|3000=2500|4000=2500|5000=5000|1500=1500)>

<=this.setvariable(map_deductibleHO4, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=2500|3000=2500|4000=2500|5000=5000)>

<=this.setvariable(map_deductibleHO6, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|1500=1000|2000=1000|2500=2500|3000=2500|4000=2500|5000=5000)>

<=this.setvariable(map_theftdeductible, =0|500=250)>

<=this.setvariable(map_creditcardlimit, 1,000=|2,500=|5,000=|7,500=|10,000=)>

<=this.setvariable(map_earthquakedeductible, 5%=10|10%=10|15%=15|20%=20|25%=25)>

<=this.setvariable(map_moldlimitdamage, 25,000=|50,000=)>

<=this.setvariable(map_identitytheft, Yes=|No=)>

<=this.setvariable(map_increasedmold, Yes=|No=)>

<=this.setvariable(map_increaseliability, Yes=|No=)>

<=this.setvariable(map_propertydamage, 25000=|50000=|75000=|100000=)>

<=this.setvariable(map_garagetype1, None=None|Built-in=BI|Basement=BS|Carport Attached=CP|Carport Detached=CP|Garage Attached=Frame|Garage Detached=Frame)>

<=this.setvariable(map_garagetype2, None=|Built-in=1|Basement=1|Carport Attached=1|Carport Detached=0|Garage Attached=1|Garage Detached=0)>

<=this.setvariable(map_lossassessmentamountho3, 5000=5000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho4, 5000=10000|10000=10000|25000=50000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountho6, 5000=10000|10000=10000|25000=51000|50000=51000|75000=51000|100000=51000|11000=11000)>

<=this.setvariable(map_ordinanceorlaw, Yes=|No=)>

<=this.setvariable(map_ordinanceorlawpercent, 25=25|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=10|100=10)>

<=this.setvariable(map_personalinjury, Yes=|No=)>

<=this.setvariable(map_waterbackup, Yes=|No=)>

<=this.setvariable(map_swimmingpoolfenced, Yes=YES|No=NO)>

<=this.setvariable(map_swimmingpool, Yes=YES|No=NO)>

<=this.setvariable(map_firedistrict, Yes=1|No=0)>

<=this.setvariable(map_replacementcostdwelling, Yes=|No=)>

<=this.setvariable(map_replacementcostcontent, Yes=|No=)>

<=this.setvariable(map_spp, Yes=|No=)>

<=this.setvariable(map_coins_breakage, Yes=|No=)>

<=this.setvariable(map_furs_breakage, Yes=|No=)>

<=this.setvariable(map_fineArts_breakage, Yes=|No=)>

<=this.setvariable(map_guns_breakage, Yes=|No=)>

<=this.setvariable(map_jewelry_breakage, Yes=|No=)>

<=this.setvariable(map_music_breakage, Yes=|No=)>

<=this.setvariable(map_silverware_breakage, Yes=|No=)>

<=this.setvariable(map_protectivedevices, Yes=|No=)>

<=this.setvariable(map_smokedetector, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_fireextinguisher, Yes=1|No=0)>

<=this.setvariable(map_fire, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_temperaturecontrol, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_burglaralarm, Central=CN|Direct=DR|Local=LO)>

<=this.setvariable(map_deadbolt, Yes=|No=)>

<=this.setvariable(map_visibletoneighbor, Yes=Y|No=N)>

<=this.setvariable(map_mannedsecurity, Yes=|No=)>

<=this.setvariable(map_sprinkler, Partial=PT|Full=FU)>

<=this.setvariable(map_losstype, All Other Pollution=0|Judgement Interest=1|Sexual Misconduct=2|Escaped Fuel=21|Lead Poisoning=22|Cumulative Injury (BI)=31|Blasting=33|Collapse=34|Grading=35|Blowout \(Gas\, Oil well Expl.\)=36|All Other=39|Cumulative Injury \(PD\)=41|BI caused by mold=53|PD caused by mold=83|All=110|Fire=111|Lightning=112|Fire not caused by Lightning=117|Fire Caused by Lightning=119|Mold test from fire=154|Mold test from lightning=155|Mold caused by fire=164|Mold caused by lightning=165|Wind=221|Hail=222|Wind caused by Tornado=223|Wind caused by Noreaster=224|Wind caused by Hurricane=225|Wind not otherwise classified=226|Explosions=230|Mold caused by other=238|Mold test from other=239|Riot and Civil Commotion=240|Smoke=250|Mold test from windstorm=256|Mold test from hail=257|Aircraft and Vehicles=260|Mold caused by windstorm=266|Mold caused by hail=267|Vandalism & Malicious Mischief=270|Mine sub/P&C-Insured Premises=271|Sprinkler Leakage=310|Water Damage - not flood=330|Freezing \(DOL after 01/01/95\)=331|Mold caused by other=338|Mold test from other=339|All Other=340|Canada - on Premises=344|Canada - off Premises=345|Theft-unattd. Veh/no force=350|Mold test from discharge=358|Mold test from freezing=359|Mold caused by water discharge=368|Mold caused by freezing=369|V&MM except by Endorsement=370|Credit Cards \(US\)=380|Glass Canada only1 $50 plus ded.=386|Glass Canada only2 $25 plus ded.=387|Glass Canada only21 $10 plus ded.=388|Glass Canada only22 No ded.=389|Glass - Other phy31 damage \(US\)=390|Earthquake=620|Mold caused by other=638|Mold test from other=639|Fire & Lightning/Insured's=911|Fire & Lightning /Other's=912|Coll\,Overturn\,Derail/Insured's=931|Coll\,Overturn\,Derail /Other's=932|Mold caused by other=938|Mold test from other=939|Burglary\,Hijacking /Insured's=941|Burglary\,Hijacking /Other's=942|Disappear\,Pilfer /Insured's=951|Disappear\,Pilfer /Other's=952|Mold test from fire=954|Mold test from lightning=955|Mold test from windstorm=956|Mold test from hail=957|Mold test from discharge=958|Mold test from freezing=959|Marine perils /Insured's=961|Marine perils /Other's=962|Mold caused by fire=964|Mold caused by lightning=965|Mold caused by windstorm=966|Mold caused by hail=967|Mold caused by water discharge=968|Mold caused by freezing=969|Subsidence\,Landslide/Insured's=971|Subsidence\,Landslide /Other's=972|Flood /Insured's=981|Flood /Other's=982|All Other /Insured's=991|All Other /Other's=992|Explosion & Smoke/Insured's=9A1|Explosion & Smoke /Other's=9A2|Civil Comm\,Riot\,VMM/Insured's=9B1|Civil Comm\,Riot\,VMM /Other's=9B2|Earthquake /Insured's=9C1|Earthquake /Other's=9C2|Strikes\,Aircraft\,Veh/Insured's=9D1|Strikes\,Aircraft\,Veh /Other's=9D2|Loading & Unloading/Insured's=90|Loading & Unloading /Other's=900|Non Delivery /Insured's=9F1|Non Delivery /Other's=9F2|Sinking /Insured's=9G1|Sinking /Other's=9G2|Breakage /Insured's=9H1|Breakage /Other's=9H2|Water Damage /Insured's=9J1|Water Damage /Other's=9J2|Drop\,Spoil\,Corrosion/Insured's=9K1|Drop\,Spoil\,Corrosion /Other's=9K2|Sewer Backup\, freeze/Insured's=9L1|Sewer Backup\, freeze /Other's=9L2|Extortion /Insured's=9M1|Extortion /Other's=9M2|Volcanic Action /Insured's=9N1|Volcanic Action /Other's=9N2|Explosion /Insured's=9P1|Explosion /Other's=9P2|Smoke /Insured's=9Q1|Smoke /Other's=9Q2|Riot&Civil Commotion/Insured's=9R1|Riot&Civil Commotion /Other's=9R2|Sprinkler Leakage/Insured's=9S1Sprinkler Leakage /Other's=9S2|Freezing /Insured's=9T1|Freezing /Other's=9T2|Wind - by Tornado /Insured's=9U1|Wind - by Tornado /Other's=9U2|Wind - by Noreaster /Insured's=9V1|Wind - by Noreaster /Other's=9V2|Wind - by Hurricane /Insured's=9W1|Wind - by Hurricane /Other's=9W2|Wind -not classified/Insured's=9X1|Wind -not classified /Other's=9X2|Hail /Insured's=9Y1|Hail /Other's=9Y2|Non-Sinkhole Collapse=209|Sinkhole Collapse=248|Ice Dams=207|Water Damage from Plumb=308)>

<=this.setvariable(map_lossdescription, ALL OTHER=P16|CONTAMINATION=P16|CREDIT CARD=P16|DAMAGE TO PROPERTY OF OTHERS=L2|DOG BITE (LIABILITY)=L3|EARTH MOVEMENT=P8|EARTHQUAKE=P8|EXTENDED COVERAGE PERILS=P16|FIRE=P9|FLOOD=P16|FREEZING WATER (INCLUDING BURST PIPES)=P1|HAIL=P2|LIABILITY (ALL OTHER)=L2|LIGHTNING=P3|MEDICAL PAYMENTS=L4|MYSTERIOUS DISAPPEARANCE=P14|MYSTERIOUS DISAPPEARANCE - SCHEDULED PROPERTY=P19|PHYSICAL DAMAGE (ALL OTHER)=L1|SLIP/FALL (LIABILITY)=L3|SMOKE=P11|THEFT SCHEDULED PROPERTY=P18|THEFT/BURGLARY=P13|VANDALISM/MALICIOUS MISCHIEF=P15|WATER DAMAGE=P12|WATERCRAFT=P12|WIND=P4|WORKER'S COMPENSATION=L3)>

<=this.setvariable(map_tidaldistance, 0-.5=0.5|.5-1=1|1-2=2|2-5=5|more than 5=999)>

<=this.setvariable(map_county, ARLINGTON HTS=ARLINGTON HEIGH|McLean=MC LEAN|McHenry=MC HENRY|DeKalb=DE KALB|DuPage=DU PAGE|McDonough=MC DONOUGH|StClair=ST CLAIR|St.Clair=ST CLAIR|St. Louis=ST LOUIS)>

<=this.setvariable(mapswimmingpooltype, Above Ground with Slide=0|Above Ground without Slide=0|In Ground with Slide=1|In Ground without Slide=1)>

<=this.setvariable(mapbusinessclass, Accounting/Bookkeeping/Tax Preparer=A|Adult Care/Child Care/Daycare=B|Animal Boarding/Grooming/Breeding/Riding/Veterinarian=C|Attorney=D|Auto/Vehicle Repair=E|Clerical=X|Consultant=F|Contractor/Artisan/Landscaper=G|Electronic/Machine Repair=H|Farming/Ranching=I|Financial Planner/Insurance Agent=J|Food Service=P|Hair Stylist/Beautician/Nail Salon=L|Massage Therapist=M|Photographer=N|Physician/Dentist/Ophthalmologist/Optometrist=Q|Real Estate Agent/Appraiser=K|Sales w/Demo=O|Sales No Demo=O|Teacher - Athletic=X|Teacher - Other=X|Other=X)>

<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=Oil|Other=PelletStove|Solid Fuel=W)>

<=this.setvariable(map_yearsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|More than 10=11|6 months or less=00|6-12 months=00)>

<=this.setvariable(map_exteriorwalls, 10013=I|10012=Steel|10001=Clapboard|10011=Log|10017=BrkVen|10028=Brick|10015=StuccoC|10041=A|10032=Cblock|10023=PreStone|10027=BrStone|10036=GHWall|10010=Log|I=I|Steel=Steel|Clapboard=Clapboard|Log=Log|BrkVen=BrkVen|Brick=Brick|StuccoC=StuccoC|A=A|Cblock=Cblock|PreStone=PreStone|BrStone=BrStone|GHWall=GHWall|L=Log)>

<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(map_waterbackupamount, 1000=5000|2000=5000|3000=5000|4000=5000|5000=5000|6000=10000|7000=10000|8000=10000|9000=10000|10000=10000|15000=25000|20000=25000|25000=25000|50000=50000)>

<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=ElectricBboard|Oil=Oil|Oil - Forced Air=Oil
|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>

<=this.setvariable(map_fueltypeHO6, Gas=|Gas - Forced Air=G|Gas - Hot Water=U|Electric=ElectricBboard|Oil=O|Oil - Forced Air=O
|Oil - Hot Water=O|Solid Fuel=W|Other=I)>

<=this.setvariable(map_monthsatcurrent, 1=01|2=02|3=03|4=04|5=05|6=06|7=07|8=08|9=09|10=10|11=11|12=12|More than 10=0|6 months or less=01|6-12 months=11)>

<=this.setvariable(map_hail,Yes=Yes|No=No)>

<=this.setvariable(map_WindDeductiblend,1000=1000|1500=1500|2000=2000|2500=2500|5000=5000|1%=1%|2%=2%|3%=3%|4%=4%|5%=5%)>

<=this.setvariable(map_exteriorwallspcHO4, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>

<=this.setvariable(map_construction, Adobe=MY|Aluminum/Vinyl=SteelSid|Barn Plank=F|Brick=MY|Brick on Block=MY|Brick on Block\, Custom=MY|Brick Veneer=V|Brick Veneer\, Custom=V|Cement Fiber Shingles=B|Clapboard=F|Concrete Decorative Block\, Painted=B|Exterior Insulation and Finish System \(EIFS\)=B|Fire Resistant=F|Frame=F|Logs=L|Poured Concrete=B|Siding\, Aluminum=SteelSid|Siding\, Hardboard=F|Siding\, Plywood=F|Siding\, Steel=SteelSid|Siding\, T-111=F|Siding\, Vinyl=I|Siding\, Wood=F|Slump Block=MY|Solid Brick=MY|Solid Brick\, Custom=MY|Solid Brownstone=MY|Solid Stone=MY|Solid Stone\, Custom=MY|Stone on Block=MY|Stone on Block\, Custom Stone=MY|Stone Veneer=V|Stone Veneer\, Custom=V|Stucco=F|Stucco on Block=F|Stucco on Frame=F|Victorian Scalloped Shakes=F|Window Wall=F|Wood Shakes=F)>




]]></functionstep>
	</condition>
	<elsecondition>
		<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="GA -IN -MD -NC -NH -OR -PA -VA -WA -">
			<functionstep name="ConstructionMappingsIN" id="426215009" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_construction, Adobe=MY|Aluminum/Vinyl=SteelSid|Barn Plank=F|Brick=MY|Brick on Block=MY|Brick on Block\, Custom=MY|Brick Veneer=V|Brick Veneer\, Custom=V|Cement Fiber Shingles=B|Clapboard=F|Concrete Decorative Block\, Painted=B|Exterior Insulation and Finish System \(EIFS\)=B|Fire Resistant=F|Frame=F|Logs=L|Poured Concrete=B|Siding\, Aluminum=SteelSid|Siding\, Hardboard=F|Siding\, Plywood=F|Siding\, Steel=SteelSid|Siding\, T-111=F|Siding\, Vinyl=I|Siding\, Wood=F|Slump Block=MY|Solid Brick=MY|Solid Brick\, Custom=MY|Solid Brownstone=MY|Solid Stone=MY|Solid Stone\, Custom=MY|Stone on Block=MY|Stone on Block\, Custom Stone=MY|Stone Veneer=V|Stone Veneer\, Custom=V|Stucco=F|Stucco on Block=F|Stucco on Frame=F|Victorian Scalloped Shakes=F|Window Wall=F|Wood Shakes=F)>


]]></functionstep>
		</condition>
		<elseifcondition name="State ID" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}" appliesto="">
			<functionstep name="ConstructionMappingsID" id="866125862" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_construction, Adobe=MY|Aluminum/Vinyl=SteelSid|Barn Plank=F|Brick=MY|Brick on Block=MY|Brick on Block\, Custom=MY|Brick Veneer=V|Brick Veneer\, Custom=V|Cement Fiber Shingles=B|Clapboard=F|Concrete Decorative Block\, Painted=B|Exterior Insulation and Finish System \(EIFS\)=B|Fire Resistant=B|Frame=F|Logs=F|Poured Concrete=B|Siding\, Aluminum=SteelSid|Siding\, Hardboard=F|Siding\, Plywood=F|Siding\, Steel=SteelSid|Siding\, T-111=F|Siding\, Vinyl=I|Siding\, Wood=F|Slump Block=MY|Solid Brick=MY|Solid Brick\, Custom=MY|Solid Brownstone=MY|Solid Stone=MY|Solid Stone\, Custom=MY|Stone on Block=MY|Stone on Block\, Custom Stone=MY|Stone Veneer=V|Stone Veneer\, Custom=V|Stucco=B|Stucco on Block=B|Stucco on Frame=B|Victorian Scalloped Shakes=F|Window Wall=F|Wood Shakes=F)>

<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=Brick|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>


]]></functionstep>
		</elseifcondition>
		<elsecondition>
			<functionstep name="ConstructionMappings" id="150573972" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_construction, Adobe=MY|Aluminum/Vinyl=SteelSid|Barn Plank=F|Brick=MY|Brick on Block=MY|Brick on Block\, Custom=MY|Brick Veneer=V|Brick Veneer\, Custom=V|Cement Fiber Shingles=B|Clapboard=F|Concrete Decorative Block\, Painted=B|Exterior Insulation and Finish System \(EIFS\)=B|Fire Resistant=B|Frame=F|Logs=L|Poured Concrete=B|Siding\, Aluminum=SteelSid|Siding\, Hardboard=F|Siding\, Plywood=F|Siding\, Steel=SteelSid|Siding\, T-111=F|Siding\, Vinyl=I|Siding\, Wood=F|Slump Block=MY|Solid Brick=MY|Solid Brick\, Custom=MY|Solid Brownstone=MY|Solid Stone=MY|Solid Stone\, Custom=MY|Stone on Block=MY|Stone on Block\, Custom Stone=MY|Stone Veneer=V|Stone Veneer\, Custom=V|Stucco=B|Stucco on Block=B|Stucco on Frame=B|Victorian Scalloped Shakes=F|Window Wall=F|Wood Shakes=F)>

]]></functionstep>
		</elsecondition>
	</elsecondition>
	<condition name="State-IL" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="">
		<functionstep name="MapExtWalls" id="1691702428" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=A|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>]]></functionstep>
	</condition>
	<functionstep name="PortalChangesMappings" id="1161880421" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[
<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>


<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=ElectricBboard|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>



<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl|Vict=Vict)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1.5|2=2|2.5=2.5|3=3|4=3|3.5=3|Bi-Level=BI|Tri-Level=Tri-Level)>

<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=DW|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>

<=this.setvariable(map_structureHO4, Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>


<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=CD|Bi-Level/Row End=CD|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>


<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=Log|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=BrStone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>

<=this.setvariable(replcostdwel, <=this.convertvalue(<=this.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>

]]></functionstep>
	<condition name="State-OH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}" appliesto="TN -" id="1481315324">
		<functionstep name="ReMapPortalChanges" id="1652132874" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[
<=this.setvariable(map_heatingtype, Electric=Electric|Gas=G|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=O|Other=PelletStove|Solid Fuel=W)>



<=this.setvariable(map_fueltype, Gas=|Gas - Forced Air=G|Gas - Hot Water=HotWaterCentral|Electric=ElectricBboard|Oil=Oil|Oil - Forced Air=Oil|Oil - Hot Water=HotWaterCentral|Solid Fuel=PelletStove|Other=PelletStove)>


<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl)>

<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=4|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>

<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=DW|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>

<=this.setvariable(map_structureHO4, Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=THEndUnit|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>


<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=RH|Bi-Level/Row End=RH|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>


<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=Brick|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>

]]></functionstep>
	</condition>
	<condition name="MapConstruction" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}" appliesto="">
		<functionstep name="MapConstruction" id="730273223" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=SplitLvl|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=Cottage|Dwelling=com.safeco_TwoStory|Federal Colonial=Colonial|Mediterranean=Mediterr|Ornate Victorian=OrnVict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl)>

<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=DW|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>

<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=CD|Bi-Level/Row End=CD|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>
]]></functionstep>
	</condition>
	<condition name="MapConstruction" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="24170332">
		<functionstep name="MapConstructionTX" id="174350633" prompt="no" errormessage="Error setting map variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=SplitLvl|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=Cottage|Dwelling=|Federal Colonial=Colonial|Mediterranean=Mediterr|Ornate Victorian=OrnVict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl)>

<=this.setvariable(map_structure, Apartment=DW|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=DW|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=DW|Rowhouse Center=DW|Rowhouse End=DW|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=DW|Townhouse Center=DW|Townhouse End=DW|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>

<=this.setvariable(map_structureHO6, Apartment=CD|Backsplit=CD|Bi-Level=CD|Bi-Level/Row Center=CD|Bi-Level/Row End=CD|Bungalow=CD|Cape Cod=CD|Colonial=CD|Condo=CD|Coop=CO|Contemporary=CD|Cottage=CD|Dwelling=CD|Federal Colonial=CD|Mediterranean=CD|Ornate Victorian=CD|Queen Anne=CD|Raised Ranch=CD|Rambler=CD|Ranch=CD|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=CD|Split Foyer=CD|Split Level=CD|Substandard=CD|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=CD|Tri-Level Center=CD|Tri-Level End=CD|Victorian=CD)>
]]></functionstep>
	</condition>
	<condition name="State-KY" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="">
		<functionstep name="MapExtWallsKY" id="843391731" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_exteriorwallspc, Adobe=Brick|Aluminum/Vinyl=Steel|Barn Plank=Clapboard|Brick=Brick|Brick on Block=BrkVen|Brick on Block\, Custom=Brick|Brick Veneer=BrkVen|Brick Veneer\, Custom=BrkVen|Cement Fiber Shingles=Clapboard|Clapboard=Clapboard|Concrete Decorative Block\, Painted=Cblock|Exterior Insulation and Finish System \(EIFS\)=A|Fire Resistant=Cblock|Frame=Clapboard|Logs=L|Poured Concrete=Cblock|Siding\, Aluminum=Steel|Siding\, Hardboard=Steel|Siding\, Plywood=Clapboard|Siding\, Steel=SteelSid|Siding\, T-111=Clapboard|Siding\, Vinyl=I|Siding\, Wood=Clapboard|Slump Block=Brick|Solid Brick=Brick|Solid Brick\, Custom=Brick|Solid Brownstone=BrStone|Solid Stone=BrStone|Solid Stone\, Custom=BrStone|Stone on Block=Sstone|Stone on Block\, Custom Stone=Sstone|Stone Veneer=BrkVen|Stone Veneer\, Custom=Sstone|Stucco=StuccoC|Stucco on Block=StuccoC|Stucco on Frame=StuccoF|Victorian Scalloped Shakes=Clapboard|Window Wall=GHWall|Wood Shakes=Clapboard)>
]]></functionstep>
	</condition>
	<condition name="Protection Class Mapping" expression="{1 EQUAL 1} AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MS}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ND}}" appliesto="">
		<functionstep name="MapProtectionClass" id="346739964" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapprotectionclass, 1=2|2=2|3=3|4=4|5=5|6=6|7=7|8=8|9=9|10=10)>]]></functionstep>
	</condition>
	<condition name="State-MN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}" appliesto="">
		<functionstep name="NumberOfStoriesMapping" id="2067976641" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapnumberofstories, 1=1|1.5=1H|2=2|2.5=2H|3=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL)>]]></functionstep>
	</condition>
	<condition name="State IN" expression="{&lt;=global.getvariable(dwellinginfo_structure)&gt; EQUAL Dwelling}
AND
{&lt;=this.getvariable(dwellinginfo_numberofstories)&gt; GREATER 1}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}}" appliesto="">
		<condition name="newcondition" expression="{&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt; GREATER 1960}" appliesto="">
			<functionstep name="ReMapConstructionstyle" id="1383044248" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=|Dwelling=Contemp|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl|Vict=Vict)>


]]></functionstep>
		</condition>
		<elsecondition>
			<condition name="newcondition" expression="{&lt;=this.getvariable(dwellinginfo_numberofstories)&gt; EQUAL 2}" appliesto="">
				<functionstep name="ReMapConstructionstyle1" id="1371597303" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapconstructionstyle, Apartment=Vict|Backsplit=Contemp|Bi-Level=RaisRanch|Bi-Level/Row Center=RaisRanch|Bi-Level/Row End=RaisRanch|Bungalow=com.safeco_Craftsman|Cape Cod=CapeCod|Colonial=Colonial|Condo=Rambler|Coop=Contemp|Contemporary=Contemp|Cottage=|Dwelling=Colonial|Federal Colonial=Colonial|Mediterranean=Contemp|Ornate Victorian=Vict|Queen Anne=QueenAnne|Raised Ranch=RaisRanch|Rambler=Rambler|Ranch=Rambler|Rowhouse=THCtrUnit|Rowhouse Center=THCtrUnit|Rowhouse End=THEndUnit|Southwest Adobe=Contemp|Split Foyer=SplitLvl|Split Level=SplitLvl|Substandard=Contemp|Townhouse=THCtrUnit|Townhouse Center=THEndUnit|Townhouse End=THEndUnit|Tri-Level=SplitLvl|Tri-Level Center=SplitLvl|Tri-Level End=SplitLvl|Victorian=Vict|RaisRanch=RaisRanch|THCtrUnit=THCtrUnit|Contemp=Contemp|SplitLvl=SplitLvl|Vict=Vict)>]]></functionstep>
			</condition>
		</elsecondition>
	</condition>
	<functionstep name="PriorCarrierMappings" id="1420565844" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mappriorcarrier,Other Standard=Standard Other Carrier|Other Non-Standard=Non-Standard Other Carrier|No Prior Insurance=No Previous Property Insurance|21st Century=Twenty First Century|AAA=AAA|Acuity=Acuity|Adirondack Ins Exchange=Adirondack Ins Exchange|AIG=AIG|Allianz of America=Allianz of America-Jefferson|Allianz of America-Jefferson=Allianz of America-Jefferson|Allied=Allied|Allmerica=Allmerica P & C|Allstate=Allstate|America First=America First|Amica=Amica|ASI Lloyds=ASI Lloyds|Austin Mutual=Austin Mutual|Auto-Owners=Auto-Owners|Balboa=Balboa|Beacon National=Beacon National|Central Mutual of OH=Central Mutual of OH|Chubb=Chubb|Citizens=Citizens|Colorado Casualty=Colorado Casualty|Dairyland=Dairyland|Donegal=Donegal|Electric=Electric|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|GMAC=GMAC|Grange=Grange|Guide One=Guide One|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford OMNI|Hawkeye Security=Hawkeye Security|Horace Mann=Horace Mann|Houston General=Houston General|Indiana=Indiana|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=MetLife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|MSA=MSA|Mutual Benefit=Mutual Benefit|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|Northstar=Northstar|Ohio Casualty=Ohio Casualty|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Preferred Mutual=Preferred Mutual|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal and Sun Alliance|Safeco=Safeco|St. Paul/Travelers=St. Paul/Travelers|State Auto=State Auto|State Farm=State Farm|Tower=Tower|TWFG=TWFG|Unigard=Unigard|Unitrin=Unitrin|USAA=USAA|Western National=Western National|White Mountains=White Mountains|Zurich=Zurich|Alfa Alliance=Alfa Alliance|American Commerce=American Commerce|Atlas General Agency=Atlas General Agency|Badger Mutual=Badger Mutual|Bunker Hill=Bunker Hill|Capital Insurance Group=Capital Insurance Group|Cincinnati=Cincinnati|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|EMC=EMC|General Casualty=General Casualty|Germantown Mutual=Germantown Mutual|Grinnell=Grinnell|Homeowners of America=Homeowners of America|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Liberty Northwest=Liberty Northwest|Main Street America=Main Street America|NJ Skylands=NJ Skylands|Penn National=Penn National|Plymouth Rock=Plymouth Rock|SECURA=SECURA|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|Standard Mutual=Standard Mutual|Travelers=Travelers|United Fire and Casualty=United Fire and Casualty|Universal=Universal|Utica National=Utica National|West Bend=West Bend|Western Reserve Group=Western Reserve Group|Westfield=Westfield|Wilson Mutual=Wilson Mutual|AARP=AARP|Aegis=Aegis|American Family=American Family|American Freedom Insurance Company=American Freedom Insurance Company|Atlantic Mutual=Atlantic Mutual|California Casualty=California Casualty|CNA=CNA|Delta Lloyds Insurance Company=Delta Lloyds Insurance Company|Flagship Insurance=Flagship Insurance|Geico=Geico|Great American=Great American|GRE/Go America=GRE/Go America|Hallmark Insurance Company=Hallmark Insurance Company|Integon=Integon|Motorists Mutual=Motorists Mutual|Mutual of Enumclaw=Mutual of Enumclaw|National Lloyds Insurance Company=National Lloyds Insurance Company|Omaha P/C=Omaha P/C|Progressive=Progressive|Selective=Selective|Shelter Insurance=Shelter|Windsor=Windsor)>



<=this.setvariable(mapnumberofstories,1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL|1H=1H|2H=2H|3=3|3.5=3|4=3|BILEVEL=BILEVEL|TRILEVEL=TRILEVEL)>
]]></functionstep>
	<condition name="newcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="">
		<functionstep name="RemapEXT" id="520831476" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=75|100=100)>


<=this.setvariable(replcostdwel, <=this.convertvalue(<=global.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|75=75|100=100)>)>



]]></functionstep>
	</condition>
	<condition name="State NE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}" appliesto="">
		<functionstep name="numberofstories" id="1249514011" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[

<=this.setvariable(mapnumberofstories,1=1|1.5=1H|2=2|2.5=2H|3=3|3.5=3|4=3|Bi-Level=BILEVEL|Tri-Level=TRILEVEL|1H=1H|2H=2H|3=3|3.5=3|4=3|BILEVEL=BILEVEL|TRILEVEL=TRILEVEL)>
]]></functionstep>
	</condition>
	<condition name="ReMap PriorCarrier" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}" appliesto="" id="1377013108">
		<functionstep name="MapVariables-PriorCarrier" id="1962045115" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mappriorcarrier, Other Standard=Other Standard|Other Non-Standard=Other Non-Standard|No Prior Insurance=No Prior Insurance|21st Century=21st Century|AAA=AAA Auto Club|AARP=AARP|Acuity=Acuity|Adirondack Ins Exchange=Adirondack|Aegis=Aegis|AIG=American Intl Group|Alfa Alliance=Alfa|Allianz of America=Allianz of America|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=Allied|Allmerica=Allmerica|Allstate=Allstate|America First=America First|American Commerce=American Commerce|American Family=American Family|American Freedom Insurance Company=American Freedom Insurance Company|Amica=Amica|ASI Lloyds=ASI Lloyds|Atlantic Mutual=Atlantic Casualty|Atlas General Agency=Atlas General Agency|Austin Mutual=Austin Mutual|Auto-Owners=Auto Owners|Badger Mutual=Badger Mutual|Balboa=Balboa|Beacon National=Beacon|Bunker Hill=Bunker Hill|California Casualty=California Casualty|Capital Insurance Group=Capital Insurance Group|Central Mutual of OH=Central Mutual|Chubb=Chubb|Cincinnati=Cincinnati Ins Co|Citizens=Citizens|CNA=CNA|Colorado Casualty=Colorado Casualty|CSE=CSE|Cumberland=Cumberland|Cypress=Cypress|Dairyland=Dairyland|Delta Lloyds Insurance Company=Delta Lloyds Insurance Company|Donegal=Donegal|Electric=Electric (GE)|EMC=EMC|Encompass=Encompass|Erie=Erie|Esurance=Esurance|Excelsior Insurance Company=Excelsior Insurance Company|Fair Plan=Fair Plan|Farm Bureau=Farm Bureau|Farmers=Farmers|Flagship Insurance=Flagship Insurance|Fidelity=Fidelity|Firemans Fund=Firemans Fund|First American=First American|Geico=Geico/Geico General|General Casualty=General Casualty|Germantown Mutual=Germantown|GMAC=GMAC|Grange=Grange|Great American=Great American|GRE/Go America=GRE/Go America|Grinnell=Grinnell Select|Guide One=Guide One|Hallmark Insurance Company=Hallmark Insurance Company|Hanover=Hanover|Harleysville=Harleysville|Hartford=Hartford|Hartford OMNI=Hartford Omni |Hawkeye Security=Hawkeye Security|Homeowners of America=Homeowners of America|Horace Mann=Horace Mann|Houston General=Houston General|Integon=Integon|Indiana=Indiana|Indiana Farmers=Indiana Farmers|Integrity=Integrity|Kemper=Kemper|Liberty Mutual=Liberty Mutual|Liberty Northwest=Liberty Northwest|Lloyds=Lloyds|Main Street America=Main Street America|Merchants Group=Merchants Group|Mercury=Mercury|MetLife=Metlife Auto/Home|Midwestern Indemnity=Midwestern Indemnity|Montgomery=Montgomery|Motorists Mutual=Motorists Mutual|MSA=MSA|Mutual Benefit=Mutual Benefit Group|Mutual of Enumclaw=Mutual of Enumclaw|National Lloyds Insurance Company=National Lloyds Insurance Company|Nationwide=Nationwide|Nationwide-Scottsdale=Nationwide-Scottsdale|New York Central Mutual=New York Central Mutual|NJ Skylands=NJ Skylands|Northstar=North Star|Ohio Casualty=Ohio Casualty|Omaha P/C=Omaha|One Beacon=One Beacon|Oregon Mutual=Oregon Mutual|Peerless/Montgomery=Peerless/Montgomery|Pekin=Pekin|Penn National=Penn National Insurance|Plymouth Rock=Plymouth Rock|Preferred Mutual=Preferred Mutual|Progressive=Progressive|Prudential=Prudential|Republic=Republic|Royal and Sun Alliance=Royal|Safeco=Safeco|SECURA=SECURA|Selective=Selective|Shelter Insurance=Shelter Mutual|Southern Mutual=Southern Mutual|Southern Trust=Southern Trust|St. Paul/Travelers=St Paul Companies|Standard Mutual=Standard Mutual|State Auto=State Auto|State Farm=State Farm|Tower=Tower|Travelers=Travelers|TWFG=TWFG|Unigard=Unigard|United Fire and Casualty=United Fire|Unitrin=Unitrin|Universal=Universal|USAA=USAA|Utica National=Utica|West Bend=West Bend|Western National=Western National|Western Reserve Group=Western Reserve|Westfield=Westfield|White Mountains=White Mountains|Wilson Mutual=Wilson Mutual|Windsor=Windsor|Zurich=Zurich|Consumers Insurance=Consumers Insurance|)>]]></functionstep>
	</condition>
	<functionstep name="PortalChanges4.17.04" id="434234317" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mappriorcarrier1, |AAANCNU=OTHER|Allied Trust=OTHER|American Traditions=OTHER|Anchor Insurance=OTHER|Bankers=OTHER|Bear River Mutual=OTHER|Capitol Preferred=OTHER|Celina=OTHER|Centauri=OTHER|Florida Family=OTHER|Florida Peninsula=OTHER|Goodville Mutual=OTHER|GulfStream=OTHER|Heritage P/C=OTHER|LightHouse=OTHER|Modern USA=OTHER|Southern Fidelity=OTHER|Southern Fidelity P/C=OTHER|St. Johns=OTHER|Titan=OTHER|Towerhill=OTHER|UPCIC=OTHER|Vermont Mutual=OTHER|Wellington Select=OTHER|Wellington Standard=OTHER)>

<=this.appendvariable(mappriorcarrier,<=this.getvariable(mappriorcarrier1)>)>
]]></functionstep>
	<condition name="PriorCarrier" expression="{1 EQUAL 1}" appliesto="">
		<functionstep name="Mappriorcarrier" id="156006800" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(mappriorcarrier,|American Integrity=OTHER|AmShield=OTHER|Andover Companies=OTHER|American Risk Insurance=OTHER|Badger Mutual Insurance Company=OTHER|Berkshire Hathaway GUARD=OTHER|Brethren Mutual Insurance Company=OTHER|Cabrillo Coastal=OTHER|Century National=OTHER|Chautauqua Patrons Insurance Company=OTHER|Cincinnati Casualty=OTHER|Cincinnati Insurance=OTHER|Commonwealth=OTHER|Concord Group Insurance=OTHER|Consumers Insurance=OTHER|Countryway Insurance Co=OTHER|Edison Insurance Company=OTHER|Enumclaw Insurance=OTHER|Farmers of Salem=OTHER|FedNat Insurance Company=OTHER|Florida Specialty=OTHER|Frankenmuth Mutual Insurance Company=OTHER|Hastings Mutual=OTHER|Hippo Insurance=OTHER|Imperial Fire and Casualty Insurance=OTHER|Insurors Indemnity=OTHER|Interboro Insurance Company=OTHER|LeMars Insurance=OTHER|Lititz Mutual=OTHER|Madison Mutual Insurance Company=OTHER|Maidstone Insurance Company=OTHER|Maison Insurance=OTHER|MAPFRE=OTHER|Michigan Insurance Company=OTHER|Michigan Millers Mutual Insurance Company=OTHER|MissionSelect Insurance Services=OTHER|MMG Insurance Company=OTHER|Monarch National Ins Co=OTHER|National General One Choice=OTHER|NLC Insurance Companies=OTHER|Northern Neck Insurance Company=OTHER|Ohio Mutual=OTHER|Pacific Specialty=OTHER|Pacific Specialty Insurance Company=OTHER|Patriot Insurance=OTHER|Patrons Oxford=OTHER|Peerless=OTHER|PEMCO Insurance=OTHER|Peninsula Insurance Companies=OTHER|Pioneer State Mutual=OTHER|Prepared Insurance Company=OTHER|Providence Mutual Fire Insurance Company=OTHER|QBE=OTHER|Quincy Mutual=OTHER|RAM Mutual Insurance Company=OTHER|Rockford Mutual=OTHER|Rockingham Casualty Company=OTHER|Service Insurance Company=OTHER|Sheboygan Falls Insurance=OTHER|Southern Oak Insurance Company=OTHER|Sterling Insurance Company=OTHER|Stillwater Property and Casualty=OTHER|Sublimity Insurance Company=OTHER|The Philadelphia Contributionship XML=OTHER|TWICO=OTHER|United Heritage Property and Casualty Company=OTHER|United Home=OTHER|Universal North America=OTHER|Universal Property and Casualty Insurance Company=OTHER|Universal/Arrowhead Insurance company=OTHER|Utica First Insurance Company=OTHER|Utica National Insurance=OTHER|Velocity Risk Underwriters LLC=OTHER)>]]></functionstep>
	</condition>
</condition>
<condition name="INIT VARIABLES" expression="{1 EQUAL 1}" appliesto="">
	<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}" appliesto="AR -CA -IN -MD -MN -MS -NC -ND -NH -PA -SD -VA -VT -">
		<condition name="Policy Type" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}" appliesto="">
			<functionstep name="SetPolicyType" id="406643671" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_policytype, HO3)>]]></functionstep>
		</condition>
	</condition>
	<functionstep name="InitVariables" id="1188681561" prompt="no" errormessage="Error Initialising Variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(addinterestxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(quotesrc,EZLynx)>
<=this.setvariable(resistivexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(focus,)>
<=this.setvariable(signrqxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(updatexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(insurancesvcrqxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(addressxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(previousaddressxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(applicantinfoxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(coapplicantxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(perspolicyxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(locationxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(dwellinginfoxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(interest, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(today, <=java.formatdate(today, MM/dd/yyyy)>)>
<=this.setvariable(exteriorwalls, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(constructionstyle, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(coverage_Foundations, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(fbath, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(hbath, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(tbath, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(gunsxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(jewelryxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(fursxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(silverwarexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(fineartsxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(musicxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(firstmortxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(secondmortxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(thirdmortxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(equityxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(cosignerxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(dwellconst, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(lossxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(business, NO)>

<=this.setvariable(umbrellapolicyno, )>

<=this.setvariable(gunsdesc, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(jewelrydesc, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(fursdesc, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(silverdesc, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(finedesc, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(policyxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(policynum, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(homephonexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(workphonexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(constructionvalues, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(increasedjewelryxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(agentid, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(effprompt, 0)>

<=this.setvariable(dedxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(flag, 0)>

<=this.setvariable(abc, 0)>

<=this.setvariable(manufacturer, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(agent, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(alarmdate, <=this.getvariable(today)>)>

<=this.setvariable(dogxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(businessxmltx, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(exclusionxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(condition, false)>

<=this.setvariable(consumerportallive, false)>

<=this.setvariable(waterdamage, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(ratingmessage1, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(premium, <=java.callstringmethod(anonymous, VK_BLANK)>)>



<=this.setvariable(updateml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(extendeddwellingxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(fullvaluexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(optpackage, No)>
<=this.setvariable(qualityplus, No)>
<=this.setvariable(optqualitypackage, No)>

<=this.setvariable(premium1, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(rquid, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(qsinfo, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(withincitylimit, <AreaTypeSurroundingsCd>IN</AreaTypeSurroundingsCd>)>

<=this.setvariable(PostLoop, 0)>

<=this.setvariable(pxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(spxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(earthquakexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(wind, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(flag, 0)>

<=this.setvariable(winddedxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(ownedxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(coinsxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(SafecoHomeURL, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(applicantid, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(minexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(musicxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(gatedxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(mannedxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(maintenance, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(waterfromsump, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(policys, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(packagenew, )>

<=this.setvariable(exteriorwalls, )>

<=this.setvariable(earthxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(busxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(altdwellxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(coveragelxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(multipolicyoption, AUTO)>

<=this.setvariable(altdwellingaddressline2xml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(windxmlnc, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(windxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(addressline2xml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(firedistxmlNC, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(splpp,No)>



<=this.setvariable(dogbreed, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(dogbite, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(replacementcost_bathinfo,)>

<=this.setvariable(replacementcost_kitcheninfo,)>

<=this.setvariable(replacementcost_additionalstructure,)>

<=this.setvariable(accnumber1, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(accnumber2, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(accnumber3, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(name1, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(name2, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(name3, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(address1, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(address2, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(address3, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(city1, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(city2, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(city3, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(statecode1, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(statecode2, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(statecode3, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(zipcode1, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(zipcode2, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(zipcode3, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(applicantaddresslist1, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(applicantaddresslist2, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(applicantaddresslist3, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(hailcreditxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(waterseepagexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(upolicyxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(windxml,<=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(foundationxml,<=java.callstringmethod(anonymous, VK_BLANK)>)>


<=this.setvariable(coverage_dwellingsafeco,<=this.extractxpathvalue(//EZHOME/ExtendedInfo/valuepair[@name="coverage_dwellingsafeco"]/value)>)>

<=this.setvariable(gasshutoff,<=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(affinitydiscount,<=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(affinitydiscountxml,<=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(umbrellapolicyxml,<=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(otherpolicyxml,<=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(waterfoundation, )>

<=this.setvariable(sinkxml,)>

<=this.setvariable(safeco_personalproperty, )>

<=this.setvariable(wicityxml,)>
<=this.setvariable(eqpbrkxml, )>
<=this.setvariable(equipbreakdown,N)>
<=this.setvariable(sinkholexml, )>
<=this.setvariable(sewerxml, )>
<=this.setvariable(sewerend, )>
<=this.setvariable(firexml, )>
<=this.setvariable(servicexml, )>
<=this.setvariable(serviceline, )>
<=this.setvariable(ERRORMSG, )>
<=this.setvariable(otherpolicynum, )>
<=this.setvariable(premium_ss, )>
<=this.setvariable(link_ss, )>
<=this.setvariable(premiumPIF_ss, )>
<=this.setvariable(issuingcompany_ss, )>]]></functionstep>
</condition>
<condition name="PresumedScoring" expression="{&lt;=this.getprofilekeyvalue(agency)&gt; EQUAL nrtagency}" appliesto="">
	<functionstep name="ResetInsuredName" id="1898516276" prompt="no" errormessage="Error resetting insured name. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(applicant_middlename, CS-MAX )>]]></functionstep>
	<condition name="Production Quotes" expression="{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 0}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 1}" appliesto="">
		<functionstep name="ResetInsuredName12" id="1173427041" prompt="no" errormessage="Error resetting insured name. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(applicant_middlename, <=this.extractxpathvalue(//EZHOME/Applicant[./ApplicantType='Applicant']/PersonalInfo/Name/MiddleName)>)>]]></functionstep>
	</condition>
</condition>
<condition name="If Consumer Portal is Yes" expression="{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 2}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 8}" appliesto="">
	<functionstep name="SetConsumerPortal" id="1366405053" prompt="no" errormessage="Error setting Consumer Portal variable. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(consumerportallive, true)>
]]></functionstep>
</condition>
<condition name="For CP" expression="{&lt;=this.getprofilekeyvalue(OriginalChannel)&gt; EQUAL 2}
OR
{&lt;=this.getprofilekeyvalue(OriginalChannel)&gt; EQUAL 8}" appliesto="">
	<functionstep name="SetCPsrc" id="141656821" prompt="no" errormessage="Error Setting Variables. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(quotesrc,EZLynxCP)>
]]></functionstep>
</condition>
<condition name="AutomaticQuoting" expression="{&lt;=this.getprofilekeyvalue(agency)&gt; EQUAL nrtagency}" appliesto="" id="1623451006">
	<functionstep name="SetCPsrc1" id="1403999245" prompt="no" errormessage="Error Setting Variables. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(quotesrc,Batch)>

]]></functionstep>
	<condition name="newcondition" expression="{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 0}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 1}" appliesto="">
		<functionstep name="SetCPsrc3" id="905735979" prompt="no" errormessage="Error Setting Variables. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[

<=this.setvariable(quotesrc,EZLynx)>

<=this.setvariable(applicant_middlename, <=this.getvariable(applicant_middlename)>)>

]]></functionstep>
	</condition>
	<condition name="newcondition" expression="{{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 0}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 1}}
AND
{&lt;=this.getprofilekeyvalue(OriginalChannel)&gt; EQUAL 16}" appliesto="">
		<functionstep name="SetCPsrc2" id="1975404439" prompt="no" errormessage="Error Setting Variables. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(quotesrc,Batch)>

<=this.setvariable(applicant_middlename, <=this.getvariable(applicant_middlename)>)>
]]></functionstep>
	</condition>
</condition>
<condition name="Existing Customer" expression="{&lt;=this.gettxdata(qsinfo&lt;=this.getprofilekeyvalue(__APPLICANTID)&gt;&lt;=this.getvariable(applicant_firstname)&gt;&lt;=this.getvariable(applicant_lastname)&gt;&lt;=this.getvariable(applicant_dob)&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
	<functionstep name="SetQuoteNumber" id="2096508486" prompt="no" errormessage="Error Setting QUOte Number. Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(qsinfo, <=this.gettxdata(qsinfo<=this.getprofilekeyvalue(__APPLICANTID)><=this.getvariable(applicant_firstname)><=this.getvariable(applicant_lastname)><=this.getvariable(applicant_dob)>)>)>]]></functionstep>
</condition>
<condition name="Existing Client" expression="{&lt;=this.gettxdata(quotenum&lt;=this.getprofilekeyvalue(__APPLICANTID)&gt;&lt;=this.getvariable(applicant_firstname)&gt;&lt;=this.getvariable(applicant_lastname)&gt;&lt;=this.getvariable(applicant_dob)&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
	<condition name="Check Client ID" expression="{&lt;=this.substringregex(&lt;=this.gettxdata(quotenum&lt;=this.getprofilekeyvalue(__APPLICANTID)&gt;&lt;=this.getvariable(applicant_firstname)&gt;&lt;=this.getvariable(applicant_lastname)&gt;&lt;=this.getvariable(applicant_dob)&gt;)&gt;,&lt;com.safeco_CompanyClientID&gt;,\&lt;\/com.safeco_CompanyClientID\&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
		<condition name="Existing Customer" expression="{&lt;=this.gettxdata(qsinfo&lt;=this.getprofilekeyvalue(__APPLICANTID)&gt;&lt;=this.getvariable(applicant_firstname)&gt;&lt;=this.getvariable(applicant_lastname)&gt;&lt;=this.getvariable(applicant_dob)&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<functionstep name="SetQuoteNumber_001" id="909355608" prompt="no" errormessage="Error Setting QUOte Number. Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(qsinfobuffer, <=this.gettxdata(qsinfo<=this.getprofilekeyvalue(__APPLICANTID)><=this.getvariable(applicant_firstname)><=this.getvariable(applicant_lastname)><=this.getvariable(applicant_dob)>)>)>

<=this.setvariable(cnum, <=this.substringregex(<=this.getvariable(qsinfobuffer)>,<CompanysQuoteNumber>,\<\/CompanysQuoteNumber\>)>)>

<=this.setvariable(qsinfo,<QuoteInfo>
<CompanysQuoteNumber><=this.getvariable(cnum)></CompanysQuoteNumber>
<com.safeco_CompanyClientID><=this.substringregex(<=this.gettxdata(quotenum<=this.getprofilekeyvalue(__APPLICANTID)><=this.getvariable(applicant_firstname)><=this.getvariable(applicant_lastname)><=this.getvariable(applicant_dob)>)>,<com.safeco_CompanyClientID>,\<\/com.safeco_CompanyClientID\>)></com.safeco_CompanyClientID>
</QuoteInfo>)>]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetQuoteNumber_00101" id="1145061445" prompt="no" errormessage="Error Setting QUOte Number. Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(qsinfo,<QuoteInfo>
<com.safeco_CompanyClientID><=this.substringregex(<=this.gettxdata(quotenum<=this.getprofilekeyvalue(__APPLICANTID)><=this.getvariable(applicant_firstname)><=this.getvariable(applicant_lastname)><=this.getvariable(applicant_dob)>)>,<com.safeco_CompanyClientID>,\<\/com.safeco_CompanyClientID\>)></com.safeco_CompanyClientID>
</QuoteInfo>)>]]></functionstep>
		</elsecondition>
	</condition>
</condition>
<condition name="RQUID" expression="{1 EQUAL 1}" appliesto="">
	<functionstep name="SERQUID" id="83021873725" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(rquidvar,<=this.formatdate(today, ddHHmmss)>)>
]]></functionstep>
</condition>
<inlinefunction name="InlineValidations">
	<condition name="All States" expression="{1 EQUAL 1}" appliesto="">
		<condition name="CARRIER PROMPTS" expression="{1 EQUAL 1}" appliesto="">
			<condition name="Single Flow" expression="{&lt;=this.getvariable(PostLoop)&gt; EQUAL 0}" appliesto="">
				<condition name="Check For Construction Style" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
AND
{&lt;=this.getvariable(dwellinginfo_structure)&gt; EQUAL Contemporary}
AND
{&lt;=this.getvariable(dwellinginfo_construction)&gt; EQUAL Logs}" appliesto="">
					<functionstep name="SetConstructionStyle_WI" id="1342061242" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_construction, Frame)>]]></functionstep>
				</condition>
				<include profilekeyname="safecoxmlhome" />
				<functionstep name="PromptGroup1" id="1284997552" prompt="yes" errormessage="Error prompting Group. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.promptgroup(group)>]]></functionstep>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(coverage_Foundations*MA)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="47308050">
					<functionstep name="SetFoundationMA" id="738861600" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_Foundations,<=this.getvariable(coverage_Foundations*MA)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(coverage_Foundations*SD)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="627356647">
					<functionstep name="SetFoundationSD" id="578539142" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_Foundations,<=this.getvariable(coverage_Foundations*SD)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(coverage_Foundations*GA)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="114776288">
					<functionstep name="SetFoundationGA" id="1711412721" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_Foundations,<=this.getvariable(coverage_Foundations*GA)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(coverage_Foundations*ALL)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="10773407">
					<functionstep name="SetFoundationALL" id="1860603126" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_Foundations,<=this.getvariable(coverage_Foundations*ALL)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(coverage_Foundations*NC)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1694172656">
					<functionstep name="SetFoundationNCNew" id="76008989" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_Foundations,<=this.getvariable(coverage_Foundations*NC)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(dwellinginfo_purchasedate*HO4)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="913541755">
					<functionstep name="SetDwellinPurchaseDateHO4" id="1772764979" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_purchasedate,<=this.getvariable(dwellinginfo_purchasedate*HO4)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(dwellinginfo_purchasedate*HO3)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="915654773">
					<functionstep name="SetDwellinPurchaseDateHO3" id="2105292642" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_purchasedate,<=this.getvariable(dwellinginfo_purchasedate*HO3)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(dwellinginfo_purchasedate*HO6)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="520432660">
					<functionstep name="SetDwellinPurchaseDateHO6" id="370654122" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_purchasedate,<=this.getvariable(dwellinginfo_purchasedate*HO6)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(maintenance*ALL)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="754350143">
					<functionstep name="SetmaintenanceAll" id="1665649048" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(maintenance,<=this.getvariable(maintenance*ALL)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(maintenance*HO3)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="2089008266">
					<functionstep name="SetmaintenanceHO3" id="1192922131" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(maintenance,<=this.getvariable(maintenance*HO3)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence coverage_winddeductible*SD" expression="{&lt;=this.getvariable(coverage_winddeductible*SD)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="405503057">
					<functionstep name="Setcoverage_winddeductible*SD" id="1511715543" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible,<=this.getvariable(coverage_winddeductible*SD)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence coverage_winddeductible*IA" expression="{&lt;=this.getvariable(coverage_winddeductible*IA)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1412066774">
					<functionstep name="Setcoverage_winddeductible*IA" id="755645499" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible,<=this.getvariable(coverage_winddeductible*IA)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence umbrellapolicyno*MA" expression="{&lt;=this.getvariable(umbrellapolicyno*MA)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1553929539">
					<functionstep name="Setcoverage_umbrellapolicyno*MA" id="1170706079" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(umbrellapolicyno,<=this.getvariable(umbrellapolicyno*MA)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence umbrellapolicyno*MA" expression="{&lt;=this.getvariable(umbrellapolicyno*ALL)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="897069310">
					<functionstep name="Setcoverage_umbrellapolicyno*ALL" id="1861574197" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(umbrellapolicyno,<=this.getvariable(umbrellapolicyno*ALL)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence coveragewinddeductible*MS" expression="{&lt;=this.getvariable(coveragewinddeductible*MS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="844240082">
					<functionstep name="Setcoverage_coveragewinddeductible*MS" id="1543657204" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coveragewinddeductible,<=this.getvariable(coveragewinddeductible*MS)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence package*WA" expression="{&lt;=this.getvariable(packagenew*WA)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="589345139">
					<functionstep name="Setcoverage_package*WA" id="2119199747" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(packagenew,<=this.getvariable(packagenew*WA)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence package*CA" expression="{&lt;=this.getvariable(packagenew*CA)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="193291981">
					<functionstep name="Setcoverage_package*CA" id="516081213" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(packagenew,<=this.getvariable(packagenew*CA)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence policynum*ALL" expression="{&lt;=this.getvariable(policynum*ALL)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1522247475">
					<functionstep name="Setpolicynum*ALL" id="894754532" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policynum,<=this.getvariable(policynum*ALL)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence policynum*OH" expression="{&lt;=this.getvariable(policynum*OH)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="490004538">
					<functionstep name="Setpolicynum*OH" id="694335963" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policynum,<=this.getvariable(policynum*OH)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(equipbreakdown*MS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetEquipmentBreaKdownMS" id="810508530" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(equipbreakdown,<=this.getvariable(equipbreakdown*MS)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(equipbreakdown*ND)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1360602288">
					<functionstep name="SetEquipmentBreaKdownND" id="1923526690" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(equipbreakdown,<=this.getvariable(equipbreakdown*ND)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(equipbreakdown*ALL)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1395864448">
					<functionstep name="SetEquipmentBreaKdownALL" id="654995751" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(equipbreakdown,<=this.getvariable(equipbreakdown*ALL)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence" expression="{&lt;=this.getvariable(equipbreakdown*TX)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="148127354">
					<functionstep name="SetEquipmentBreaKdownTX" id="1742583828" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(equipbreakdown,<=this.getvariable(equipbreakdown*TX)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence optqualitypackage*MA" expression="{&lt;=this.getvariable(optqualitypackage*MA)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1342293540">
					<functionstep name="SetoptqualitypackageMA" id="41465497" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optqualitypackage,<=this.getvariable(optqualitypackage*MA)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence optqualitypackage*PA" expression="{&lt;=this.getvariable(optqualitypackage*PA)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1124129202">
					<functionstep name="SetoptqualitypackagePA" id="379005405" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optqualitypackage,<=this.getvariable(optqualitypackage*PA)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence optqualitypackage*TXHO3" expression="{&lt;=this.getvariable(optqualitypackage*TXHO3)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="276818667">
					<functionstep name="Setoptqualitypackage*TXHO3" id="986185290" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optqualitypackage,<=this.getvariable(optqualitypackage*TXHO3)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence optqualitypackage*TXHO4" expression="{&lt;=this.getvariable(optqualitypackage*TXHO4)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1665970651">
					<functionstep name="Setoptqualitypackage*TXHO4" id="604586055" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optqualitypackage,<=this.getvariable(optqualitypackage*TXHO4)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence coverage_effective*IA" expression="{&lt;=this.getvariable(coverage_effective*IA)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1580636383">
					<functionstep name="Setcoverage_effective*IA" id="1515131067" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_effective,<=this.getvariable(coverage_effective*IA)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence coverage_effective*VT" expression="{&lt;=this.getvariable(coverage_effective*VT)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="156372417">
					<functionstep name="Setcoverage_effective*VT" id="74083821" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_effective,<=this.getvariable(coverage_effective*VT)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence coverage_effective*ALL" expression="{&lt;=this.getvariable(coverage_effective*ALL)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1210720802">
					<functionstep name="Setcoverage_effective*ALL" id="1049575910" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_effective,<=this.getvariable(coverage_effective*ALL)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence coverage_effective*MI" expression="{&lt;=this.getvariable(coverage_effective*MI)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="2042764508">
					<functionstep name="Setcoverage_effective*MI" id="49023614" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_effective,<=this.getvariable(coverage_effective*MI)>)>]]></functionstep>
				</condition>
				<condition name="RatingIntelligence coverage_effective*SD" expression="{&lt;=this.getvariable(coverage_effective*SD)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1767310161">
					<functionstep name="Setcoverage_effective*SD" id="821367875" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_effective,<=this.getvariable(coverage_effective*SD)>)>]]></functionstep>
				</condition>
				<condition name="Promptgroup1 Execution" expression="{&lt;=this.getprofilekeyvalue(promptgroup1)&gt; EQUAL yes}" appliesto="">
					<exitstep message="Completed Successfully" name="ExitPromptgroup1" id="20438508" savetest="false" savetestvalues="false" />
				</condition>
				<condition name="EZNone" expression="{&lt;=this.getvariable(agentid)&gt; EQUAL eznone}" appliesto="">
					<functionstep name="promptproducerno" id="2005552723" prompt="yes" errormessage="Error extracting  agency id." savetest="false" savetestvalues="false"><![CDATA[<=this.promptinput(agentid1,Enter Agency ID,6)>]]></functionstep>
					<functionstep name="setagencyid" id="1047753041" prompt="no" errormessage="Error extracting  agency id." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(agentid,<=this.getvariable(agentid1)>)>]]></functionstep>
				</condition>
				<condition name="Producer Name is Blank" expression="{&lt;=this.getvariable(producername)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}" appliesto="">
					<functionstep name="SetProducerName" id="1097725798" prompt="no" errormessage="Error setting Producer Name. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(producername, <=this.getvariable(agentid)>)>


]]></functionstep>
				</condition>
				<condition name="FoundationProfileKeyPresent" expression="{&lt;=this.getprofilekeyvalue(coverage_Foundations)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="ConvertFoundationType" id="353999010" prompt="no" errormessage="Error mapping FoundationType. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_foundations, 851=Slab|852=Crawl|853=Finished|854=Partial|855=Unfinished|856=Walkout|857=PartialDaylight|858=UnfinishedDaylight|859=Piers|Slab=Slab|Crawl=Crawl|Finished=Finished|Partial=Partial|Unfinished=Unfinished|Walkout=Walkout|PartialDaylight=PartialDaylight|UnfinishedDaylight=UnfinishedDaylight|Piers=Piers)>

<=this.setvariable(coverage_Foundations, <=this.convertvalue(<=this.getvariable(coverage_Foundations)>, <=this.getvariable(map_foundations)>)>)>
]]></functionstep>
				</condition>
				<condition name="newcondition" expression="{&lt;=this.getvariable(exteriorwalls)&gt; EQUAL StuccoF}" appliesto="">
					<functionstep name="SetStucco" id="1675004645" prompt="no" errormessage="Error mapping FoundationType. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_exteriorwalls,StuccoF=StuccoF)>]]></functionstep>
				</condition>
				<condition name="ExteriorWallPresent" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL LA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL KY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NE}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ID}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MS}" appliesto="">
					<functionstep name="ConvertExteriorWalls" id="1251105479" prompt="no" errormessage="Error mapping FoundationType. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(exteriorwalls, <=this.convertvalue(<=this.getvariable(exteriorwalls)>, <=this.getvariable(map_exteriorwalls)>)>)>]]></functionstep>
				</condition>
				<condition name="ExteriorWallPresent" expression="{&lt;=this.getvariable(exteriorwalls)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}" appliesto="" id="282426112">
					<functionstep name="ConvertExteriorWallsLA" id="1107441179" prompt="no" errormessage="Error mapping FoundationType. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(exteriorwalls, <=this.convertvalue(<=this.getvariable(exteriorwalls)>, <=this.getvariable(map_exteriorwalls)>)>)>]]></functionstep>
				</condition>
				<condition name="Quality Select Plus" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(optqualitypackage)&gt; EQUAL qualityplus}" appliesto="">
					<functionstep name="SetQualtiyPlus" id="814138053" prompt="no" errormessage="Error setting Quality Plus. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(qualityplus, Yes)>
<=this.setvariable(optpackage, No)>]]></functionstep>
				</condition>
				<condition name="OptimumCoverage" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(optqualitypackage)&gt; EQUAL optpackage}" appliesto="">
					<functionstep name="SetOptimumPackage" id="1591756914" prompt="no" errormessage="Error setting OptimumPackage. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optpackage, Yes)>
<=this.setvariable(qualityplus, No)>]]></functionstep>
				</condition>
				<condition name="SetPackageToNone" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(optqualitypackage)&gt; EQUAL No}" appliesto="">
					<functionstep name="SetOptimumPackage&amp;QualityPlus" id="1943128805" prompt="no" errormessage="Error setting Optimum Package and Quality plus endorsement. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optpackage, No)>
<=this.setvariable(qualityplus, No)>]]></functionstep>
				</condition>
				<condition name="Check Protective Devices-TX" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(condition)&gt; EQUAL true}" appliesto="">
					<condition name="Check Burglar Alarm Present" expression="{&lt;=this.getvariable(alarmdate)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="FormatAlarmDate" id="2026993635" prompt="no" errormessage="Error Setting Alarm Date. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(alarmdate, <=this.formatdate(<=this.getvariable(alarmdate)>, yyyy/MM/dd)>)>


<=this.setvariable(alarmdate, <=java.callstringmethod(replaceAll, <=this.getvariable(alarmdate)>, [/],-)>)>
]]></functionstep>
					</condition>
				</condition>
				<condition name="Check EffectiveDate" expression="{&lt;=this.getvariable(effprompt)&gt; EQUAL 1}" appliesto="">
					<functionstep name="FormatEffectiveDate" id="91684064" prompt="no" errormessage="Error formatting EffectiveDate. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_effective, <=java.formatdate(<=this.getvariable(coverage_effective)>, yyyy-MM-dd)>)>]]></functionstep>
				</condition>
				<condition name="State" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}
AND
{&lt;=this.getvariable(dwellinginfo_purchasedate)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="MA -MS -ND -SD -">
					<functionstep name="SetPurchaseDateMS" id="639317460" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_purchasedate,<=java.callstringmethod(concat,<=java.callstringmethod(substring,<=this.getvariable(dwellinginfo_purchasedate)>, 6, 10)>,<=java.callstringmethod(concat,-,<=java.callstringmethod(concat,<=java.callstringmethod(substring, <=this.getvariable(dwellinginfo_purchasedate)>, 0, 2)>,<=java.callstringmethod(concat,-,<=java.callstringmethod(substring,<=this.getvariable(dwellinginfo_purchasedate)>, 3, 5)>)>)>)>)>)>
]]></functionstep>
				</condition>
				<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
				</condition>
				<functionstep name="PromptGroup2" id="1113774523" prompt="yes" errormessage="Error prompting Group2. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.promptgroup(group2)>]]></functionstep>
				<condition name="Check For State-OH - SPP" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}" appliesto="">
					<condition name="SPP Not Blank" expression="{&lt;=this.extractxpathvalue(//EZHOME/ExtendedInfo/valuepair[@name=&quot;specialpersonalproperty&quot;]/value)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="SetPersonalPropertySPP" id="191629578" prompt="no" errormessage="Error setting special personal property coverage.Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(specialpersonalproperty, <=this.extractxpathvalue(//EZHOME/ExtendedInfo/valuepair[@name="specialpersonalproperty"]/value)>)>
]]></functionstep>
					</condition>
					<elsecondition>
						<condition name="newcondition" expression="{&lt;=this.getvariable(consumerportallive)&gt; EQUAL false}" appliesto="">
							<functionstep name="PromptSPPOH" id="11975041" prompt="yes" errormessage="Error setting special personal property coverage.Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.promptselect(specialpersonalproperty, No|Yes, Special Personal Property)>]]></functionstep>
						</condition>
						<condition name="newcondition" expression="{&lt;=this.getvariable(consumerportallive)&gt; EQUAL true}" appliesto="">
							<functionstep name="SetSPPoh1" id="691020922" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(specialpersonalproperty,No)>
]]></functionstep>
						</condition>
					</elsecondition>
				</condition>
			</condition>
		</condition>
		<condition name="ABORT INCLUDE" expression="{&lt;=this.getvariable(PostLoop)&gt; EQUAL 0}" appliesto="" id="1128434763">
			<include url="carriers/Safecoxml/Aborts/Home/Safeco_Aborts_Home.scx" id="1213357076" />
		</condition>
		<condition name="CARRIER VALIDATIONS" expression="{1 EQUAL 1}" appliesto="">
			<condition name="State MD" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; EQUALLESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.5)&gt;, \., 0)&gt;}" appliesto="">
				<functionstep name="temp" id="2116218693" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(midCovA,<=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.5)>, \., 1)>)>]]></functionstep>
				<condition name="newcondition" expression="{&lt;=this.getvariable(midCovA)&gt; EQUAL 1}
OR
{&lt;=this.getvariable(midCovA)&gt; EQUAL 3}
OR
{&lt;=this.getvariable(midCovA)&gt; EQUAL 5}
OR
{&lt;=this.getvariable(midCovA)&gt; EQUAL 7}
OR
{&lt;=this.getvariable(midCovA)&gt; EQUAL 9}" appliesto="">
					<functionstep name="incrementByOne" id="502717501" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(coverage_dwelling)>]]></functionstep>
				</condition>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="MA -">
				<functionstep name="ResetWindDeductible" id="1932408349" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible,<=this.getvariable(coverage_winddeductible_safecoxml)>)>]]></functionstep>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="ME -" id="225096280">
				<functionstep name="HurricaneDeductible" id="1683079658" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible,<=this.getvariable(coverage_Hurricanedeductible_safecoxml)>)>]]></functionstep>
			</condition>
			<condition name="Dwelling" expression="{1 EQUAL 1}" appliesto="">
				<condition name="Check Replacementcost" expression="{&lt;=this.getvariable(coverage_dwellingsafeco)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetReplacementcostSafeco" id="1153194022" prompt="no" errormessage="Error setting ReplacementCost.Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_replacementcostextended, No)>

<=this.setvariable(coverage_dwelling, <=this.getvariable(coverage_dwellingsafeco)>)>

<=this.setvariable(coverage_replacementcost, <=this.getvariable(coverage_dwellingsafeco)>)>
]]></functionstep>
				</condition>
				<elsecondition>
					<condition name="Check Consumer Portal is true" expression="{&lt;=this.getvariable(consumerportallive)&gt; EQUAL true}" appliesto="">
						<functionstep name="SetReplacementcostSafeco1_CP" id="1153058783" prompt="no" errormessage="Error setting ReplacementCost.Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_dwelling, <=this.getvariable(coverage_dwelling)>)>

<=this.setvariable(coverage_replacementcost, <=this.getvariable(coverage_replacementcost)>)>

]]></functionstep>
					</condition>
					<elsecondition>
						<functionstep name="SetReplacementcostSafeco1" id="227276209" prompt="no" errormessage="Error setting ReplacementCost.Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_dwelling, <=this.getvariable(coverage_dwelling)>)>

<=this.setvariable(coverage_replacementcost, <=this.getvariable(coverage_replacementcost)>)>
]]></functionstep>
					</elsecondition>
				</elsecondition>
			</condition>
			<condition name="Prior Is Safeco" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_priorcarrier)&gt;, &lt;=this.getvariable(mappriorcarrier)&gt;)&gt; EQUAL Safeco}" appliesto="">
				<condition name="CheckInceptionDate" expression="{&lt;=this.getvariable(inc)&gt; EQUAL Y}
AND
{&lt;=this.getvariable(inceptiondate)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetDate" id="575162837" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(inceptiondate, <=java.formatdate(<=this.getvariable(inceptiondate)>, yyyy-MM-dd)>)>

]]></functionstep>
				</condition>
			</condition>
			<condition name="Single Flow" expression="{&lt;=this.getvariable(PostLoop)&gt; EQUAL 0}" appliesto="">
				<condition name="State VT" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}" appliesto="">
					<condition name="Policy Type HO3-HO5" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(replcostdwel)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="SetExtendedDwellingCov" id="872932448" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(replcostdwel, 0)>]]></functionstep>
					</condition>
				</condition>
				<condition name="Business on Premises" expression="{&lt;=this.getvariable(dwellinginfo_businessonpremises)&gt; EQUAL Yes}" appliesto="">
					<functionstep name="SetBusinessOnPremises" id="1186950856" prompt="no" errormessage="Error setting Business Variable. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(business, YES)>]]></functionstep>
					<condition name="State MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="">
						<functionstep name="SetBusinessXML" id="587613998" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(busxml, <QuestionAnswer>
<NumEmployeesFullTimeResidence>1</NumEmployeesFullTimeResidence>
</QuestionAnswer>
)>]]></functionstep>
					</condition>
					<condition name="State NE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}" appliesto="AL -IA -MS -NM -WY -">
						<functionstep name="SetBusinessXML_NE" id="1309940560" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(busxml, <NumEmployeesFullTimeResidence><=this.getvariable(dwellinginfo_fulltimedomemps)>
</NumEmployeesFullTimeResidence>)>]]></functionstep>
					</condition>
				</condition>
				<condition name="State LA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="CT -GA -IN -MD -MO -NC -NH -OR -PA -VA -WA -">
					<condition name="Policy Type HO3-HO5" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="">
						<functionstep name="MapStructure" id="1572214820" prompt="no" errormessage="Error setting extended dwelling coverage. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_structure, Dwelling=DW|Apartment=APT|Condo=CD|Townhouse=TH|Rowhouse=RH|Coop=CO|Cape Cod=DW|Apartment=APT|Backsplit=DW|Bi-Level=DW|Bi-Level/Row Center=DW|Bi-Level/Row End=DW|Bungalow=DW|Cape Cod=DW|Colonial=DW|Condo=CD|Coop=CO|Contemporary=DW|Cottage=DW|Dwelling=DW|Federal Colonial=DW|Mediterranean=DW|Ornate Victorian=DW|Queen Anne=DW|Raised Ranch=DW|Rambler=DW|Ranch=DW|Rowhouse=RH|Rowhouse Center=RH|Rowhouse End=RH|Southwest Adobe=DW|Split Foyer=DW|Split Level=DW|Substandard=DW|Townhouse=TH|Townhouse Center=TH|Townhouse End=TH|Tri-Level=DW|Tri-Level Center=DW|Tri-Level End=DW|Victorian=DW)>


]]></functionstep>
					</condition>
					<condition name="Policy Type HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}" appliesto="">
						<functionstep name="MapStructure1" id="201107526" prompt="no" errormessage="Error setting extended dwelling coverage. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>
]]></functionstep>
					</condition>
				</condition>
				<condition name="CheckPurchaseDate" expression="{&lt;=this.getvariable(dwellinginfo_purchasedate)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(flag)&gt; EQUAL true}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
AND
{&lt;=this.bigdatediff(&lt;=this.getvariable(coverage_effective)&gt;, 2010-06-12, yyyy-MM-dd, days)&gt; EQUALGREATER 0}}}" appliesto="">
					<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="CA -">
						<functionstep name="SetPurchase_CA" id="299575690" prompt="no" errormessage="Error setting purchase date. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_purchasedate,<=java.callstringmethod(concat,<=java.callstringmethod(substring,<=this.getvariable(dwellinginfo_purchasedate)>, 6, 10)>,<=java.callstringmethod(concat,-,<=java.callstringmethod(concat,<=java.callstringmethod(substring, <=this.getvariable(dwellinginfo_purchasedate)>, 0, 2)>,<=java.callstringmethod(concat,-,<=java.callstringmethod(substring,<=this.getvariable(dwellinginfo_purchasedate)>, 3, 5)>)>)>)>)>)>

]]></functionstep>
					</condition>
					<elsecondition>
						<functionstep name="SetPurchase" id="2053794775" prompt="no" errormessage="Error setting purchase date. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_purchasedate, <=java.formatdate(<=this.getvariable(dwellinginfo_purchasedate)>, yyyy-MM-DD)>)>
]]></functionstep>
					</elsecondition>
				</condition>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}" appliesto="CO -MN -">
				<condition name="Deductible" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; LESSER 1000}" appliesto="">
					<functionstep name="SetWindDeductibleMN" id="414524110" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 100)>

]]></functionstep>
				</condition>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}" appliesto="AR -">
				<condition name="Deductible" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; LESSER 1000}" appliesto="">
					<functionstep name="SetWindDeductibleKS" id="2010912951" prompt="no" errormessage="Error setting Wind Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(winddedxml,<Deductible>
<FormatPct>1</FormatPct>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>
]]></functionstep>
				</condition>
				<condition name="CheckCitylimits" expression="{&lt;=this.getvariable(dwellinginfo_withinfiredistrict)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL No}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CO}" appliesto="">
					<functionstep name="RemapCityLimits" id="289676274" prompt="no" errormessage="Error setting City Limits. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mapcity, Yes=IN|No=FD)>
]]></functionstep>
				</condition>
			</condition>
			<condition name="SCC-8004" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="">
				<functionstep name="ReMap" id="113955112" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_ordinanceorlawpercent, 25=10|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=75|100=100)>


<=this.setvariable(replcostdwel, <=this.convertvalue(<=global.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|75=75|100=100)>)>


]]></functionstep>
			</condition>
			<condition name="SCC-8004" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="2128015402">
				<functionstep name="ReMap_TX" id="1621687289" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=20|50=50|75=50|100=100)>


<=this.setvariable(replcostdwel, <=this.convertvalue(<=global.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|75=75|100=100)>)>


]]></functionstep>
			</condition>
			<condition name="SCC-8313" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}" appliesto="" id="2126362924">
				<functionstep name="ReMapOR" id="1230066745" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=100|100=100)>


<=this.setvariable(replcostdwel, <=this.convertvalue(<=global.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|75=75|100=100)>)>


]]></functionstep>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
AND
{1 EQUAL 0}" appliesto="KS -" id="1800967951">
				<condition name="Deductible" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; LESSER 1000}
AND
{&lt;=this.getvariable(coverage_deductible)&gt; NOTEQUAL 1%}
AND
{&lt;=this.getvariable(coverage_deductible)&gt; NOTEQUAL 2%}
AND
{&lt;=this.getvariable(coverage_deductible)&gt; NOTEQUAL 3%}
AND
{&lt;=this.getvariable(coverage_deductible)&gt; NOTEQUAL 4%}
AND
{&lt;=this.getvariable(coverage_deductible)&gt; NOTEQUAL 5%}" appliesto="" id="438783751">
					<functionstep name="SetWindDeductibleKS1" id="1402338304" prompt="no" errormessage="Error setting Wind Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 100)>

]]></functionstep>
				</condition>
			</condition>
			<condition name="DEDUCTIBLE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MA -">
				<condition name="CHECK DEDUCTIBLE" expression="{{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 100000}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 1}}
OR
{{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 50000}
AND
{{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 1}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 2}}}
OR
{{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 20000}
AND
{{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 1}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 2}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 5}}}" appliesto="">
					<functionstep name="SetWindDeductible-MA" id="830218737" prompt="no" errormessage="Error setting deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, <=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)>)>]]></functionstep>
				</condition>
				<condition name="CHECK WIND DEDUCTIBLE" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; GREATER &lt;=this.getvariable(coverage_winddeductible)&gt;}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 1}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 2}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 5}" appliesto="">
					<functionstep name="SetWindDeductible-MA2" id="1561678268" prompt="no" errormessage="Error setting deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, <=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)>)>]]></functionstep>
				</condition>
				<condition name="WIND DEDUCTIBLE -1%" expression="{{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 250000}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 1}
AND
{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; EQUALGREATER 2500}}
OR
{{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 500000}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 1}
AND
{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; EQUALGREATER 5000}}" appliesto="">
					<functionstep name="SetWindDeductible-MA3" id="800842161" prompt="no" errormessage="Error setting deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, <=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)>)>]]></functionstep>
				</condition>
				<condition name="WIND DEDUCTIBLE-2%" expression="{{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 125000}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 2}
AND
{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; EQUALGREATER 2500}}
OR
{{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 250000}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 2}
AND
{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; EQUALGREATER 5000}}" appliesto="">
					<functionstep name="SetWindDeductible-MA4" id="1508169911" prompt="no" errormessage="Error setting deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, <=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)>)>]]></functionstep>
				</condition>
				<condition name="WIND DEDUCTIBLE-5%" expression="{{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 50000}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 5}
AND
{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; EQUALGREATER 2500}}
OR
{{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 100000}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 5}
AND
{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; EQUALGREATER 5000}}" appliesto="">
					<functionstep name="SetWindDeductible-MA5" id="1961598646" prompt="no" errormessage="Error setting deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, <=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)>)>]]></functionstep>
				</condition>
			</condition>
			<condition name="newcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
AND
{&lt;=this.getvariable(coverage_package)&gt; EQUAL No}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
				<functionstep name="SetDeductibleAL" id="2005531691" prompt="no" errormessage="Error setting Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=5000|1%=5000|100=5000|250=5000|500=5000|750=5000|1000=5000|2000=5000|2500=5000|3000=5000|4000=5000|5000=5000|1500=5000)>]]></functionstep>
			</condition>
			<condition name="newcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
AND
{&lt;=this.getvariable(coverage_package)&gt; EQUAL No}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="" id="1060633413">
				<functionstep name="SetDeductibleGA" id="1873558034" prompt="no" errormessage="Error setting Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=1500|1%=1500|100=1500|250=1500|500=1500|750=1500|1000=1500|1500=1500|2000=2000|2500=2500|3000=5000|4000=5000|5000=5000)>]]></functionstep>
			</condition>
			<condition name="State IL" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
AND
{1 EQUAL 0}" appliesto="">
				<condition name="Deductible" expression="{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 1%}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 2%}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 3%}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 4%}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 5%}" appliesto="" id="822171613">
					<condition name="Deductible" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; LESSER 1000}
AND
{1 EQUAL 0}" appliesto="">
						<functionstep name="SetWindDeductibleKS2" id="1256465707" prompt="no" errormessage="Error setting WindDeductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 100)>

]]></functionstep>
					</condition>
					<condition name="Wind" expression="{1 EQUAL 0}" appliesto="">
						<condition name="Deductible" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; GREATER &lt;=this.convertvalue(&lt;=this.getvariable(coverage_winddeductible)&gt;, &lt;=this.getvariable(map_WindDeductible)&gt;)&gt;}
AND
{&lt;=this.getvariable(coverage_deductible)&gt; NOTEQUAL 750}
AND
{&lt;=this.getvariable(coverage_deductible)&gt; NOTEQUAL 10000}" appliesto="" id="216127999">
							<functionstep name="SetWindDeductibleIL1500" id="127878281" prompt="no" errormessage="Error setting WindDeductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, <=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)>)>

]]></functionstep>
						</condition>
						<condition name="Deductible" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; EQUAL 7500)&gt;}
AND
{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; LESSER 7500}" appliesto="" id="1243294232">
							<functionstep name="SetWindDeductibleIL7500" id="1500541166" prompt="no" errormessage="Error setting WindDeductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 10000)>

]]></functionstep>
						</condition>
					</condition>
				</condition>
			</condition>
			<condition name="State IN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}" appliesto="" id="777580319">
				<condition name="Check For Deductible value" expression="{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 750}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1113867042">
					<functionstep name="SetWindDeductibleIN1" id="1590437116" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 1000)>

]]></functionstep>
				</condition>
			</condition>
			<condition name="State NM" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}" appliesto="">
				<condition name="Deductible" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; EQUALLESSER 1000}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 1%}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 2%}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 3%}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 4%}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL 5%}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetWindDeductibleNM2" id="1682712677" prompt="no" errormessage="Error setting Wind Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 1000)>

]]></functionstep>
				</condition>
			</condition>
			<condition name="State KY" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="">
				<condition name="Deductible" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; EQUALLESSER 1000}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetWindDeductibleKY" id="1331340786" prompt="no" errormessage="Error setting Wind Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 1000)>

ss]]></functionstep>
				</condition>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}" appliesto="OK -">
				<condition name="Check deductible" expression="{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetdedOK" id="1069193953" prompt="no" errormessage="Error setting Wind Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 1%)>]]></functionstep>
				</condition>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
AND
{&lt;=this.getvariable(policy)&gt; EQUAL Quality Crest Home}
AND
{1 EQUAL 0}" appliesto="CA -">
				<condition name="CheckPolicy" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}" appliesto="">
					<condition name="CheckDwelling" expression="{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 500000}" appliesto="">
						<functionstep name="SetDwellingCA" id="635687937" prompt="no" errormessage="Error setting Dwelling coverage. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_dwelling, 500000)>]]></functionstep>
					</condition>
					<condition name="CheckDwelling" expression="{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER 500000}" appliesto="" id="1915849631">
						<functionstep name="SetDwellingCA1" id="1040596277" prompt="no" errormessage="Error setting Dwelling coverage. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, 500000)>
]]></functionstep>
					</condition>
				</condition>
				<condition name="RemapCA" expression="{1 EQUAL 1}" appliesto="">
					<functionstep name="MAPCA" id="291575092" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=1000|1000=1000|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>

<=this.setvariable(map_lossassessmentamountho8, 5000=10000|10000=10000|25000=55000|50000=55000|75000=55000|100000=55000)>


<=this.setvariable(endorsements_ordinanceorlaw, No)>]]></functionstep>
				</condition>
				<condition name="CheckPolicy" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="">
					<condition name="CheckDwelling" expression="{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 75000}" appliesto="" id="421503401">
						<functionstep name="SetPPCA" id="1356563158" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, 75000)>]]></functionstep>
					</condition>
				</condition>
			</condition>
			<condition name="State is NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
				<condition name="Check Product" expression="{&lt;=this.getvariable(policync)&gt; EQUAL Quality Crest Home}" appliesto="">
					<functionstep name="Remap_Policy" id="1185165911" prompt="no" errormessage="Error setting Dwelling coverage. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_policy, HO3=HE07|HO4=04|HO5=HE07|HO6=06)>]]></functionstep>
					<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
						<condition name="CheckDwelling" expression="{&lt;=this.getvariable(coverage_dwelling)&gt; LESSER 500000}" appliesto="">
							<functionstep name="SetDwelling_NC" id="1652388338" prompt="no" errormessage="Error setting Dwelling coverage. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_dwelling, 500000)>]]></functionstep>
						</condition>
						<condition name="CheckDwelling" expression="{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER 500000}" appliesto="" id="802529115">
							<functionstep name="SetDwelling_NC1" id="1799107943" prompt="no" errormessage="Error setting Dwelling coverage. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, 500000)>
]]></functionstep>
						</condition>
					</condition>
				</condition>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="AL -AR -AZ -CA -CO -CT -GA -ID -IL -IN -KS -KY -LA -MA -MD -MO -MS -NC -ND -NH -NM -NV -NY -OH -OK -OR -PA -SD -TN -UT -VA -WA -WY -">
				<condition name="Prior Is Safeco" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_priorcarrier)&gt;, &lt;=this.getvariable(mappriorcarrier)&gt;)&gt; EQUAL Safeco}" appliesto="">
					<functionstep name="SetSafecoPriorPolicy" id="1936037872" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policys2, <PolicyNumber><=this.getvariable(policys)></PolicyNumber>)>

]]></functionstep>
				</condition>
				<condition name="Wind Deductible blank- Carrier change CRI-26323" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="">
					<functionstep name="Reset-WindHail-CarrierChange" id="263352152" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_WindDeductible, 100=|250=|500=|1000=|1500=|1%=|2%=|3%=|4%=|5%=)>]]></functionstep>
				</condition>
			</condition>
			<condition name="MultiPolicy" expression="{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}" appliesto="">
				<condition name="Multi-policy QS Flow" expression="{&lt;=this.getvariable(PostLoop)&gt; GREATER 0}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}}" appliesto="">
					<functionstep name="SetPriorPolicyNumberQS" id="641010399" prompt="no" errormessage="Error setting PriorPolicy Number. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml, <PolicyNumber>Y1111111</PolicyNumber>)>]]></functionstep>
				</condition>
				<condition name="Multi-policy QS Flow" expression="{&lt;=this.getvariable(PostLoop)&gt; GREATER 0}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="" id="735399821">
					<functionstep name="SetPriorPolicyNumberQS_CA" id="1148303751" prompt="no" errormessage="Error setting PriorPolicy Number. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml, <PolicyNumber>OM2222222</PolicyNumber>)>]]></functionstep>
				</condition>
				<condition name="Multi-policy_ME" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="" id="2055686900">
					<functionstep name="SetPriorPolicyNumber_ME" id="369982298" prompt="no" errormessage="Error setting PriorPolicy Number. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml, <PolicyNumber><=this.getvariable(otherpolicynum)></PolicyNumber>)>]]></functionstep>
				</condition>
				<elsecondition>
					<functionstep name="SetPriorPolicyNumber" id="1604208075" prompt="no" errormessage="Error setting PriorPolicy Number. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml, <PolicyNumber><=this.getvariable(policynum)></PolicyNumber>)>]]></functionstep>
				</elsecondition>
			</condition>
			<condition name="Multipolicy" expression="{{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(othpolicynum)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
				<functionstep name="SetPriorPolicyNumberMA" id="1773668440" prompt="no" errormessage="Error setting PriorPolicy Number. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(otherpolicyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd><=this.getvariable(multipolicyoption)></LOBCd>
<PolicyNumber><=this.getvariable(othpolicynum)></PolicyNumber>
</OtherOrPriorPolicy>)> 
]]></functionstep>
			</condition>
			<condition name="Multipolicy-ME" expression="{{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}}
AND
{&lt;=this.getvariable(multipolicyoptionME)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1515608459">
				<functionstep name="SetPriorPolicyNumberME" id="2102666904" prompt="no" errormessage="Error setting PriorPolicy Number. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(otherpolicyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd><=this.getvariable(multipolicyoptionME)></LOBCd>
<PolicyNumber><=this.getvariable(multipolicyoption)></PolicyNumber>
</OtherOrPriorPolicy>)> 


]]></functionstep>
			</condition>
			<condition name="Personal Property Blank" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{{&lt;=this.getvariable(coverage_personalproperty)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(coverage_personalproperty)&gt; EQUAL 0}
OR
{&lt;=this.getvariable(coverage_personalproperty)&gt; EQUALLESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.5)&gt;, \., 0)&gt;}}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}}" appliesto="">
				<functionstep name="AdjustPersonalProperty" id="2139390310" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.roundup(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.5)>)>)>

]]></functionstep>
			</condition>
			<condition name="Single Flow" expression="{&lt;=this.getvariable(PostLoop)&gt; EQUAL 0}" appliesto="">
				<condition name="HO3-PersonalProperty not" expression="{{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.5)&gt;, \., 0)&gt;}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL VT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL UT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ID}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL LA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NV}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NM}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WI}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL KY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL GA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NC}" appliesto="AR -CO -CT -GA -ID -IL -LA -MO -NC -NM -NV -TX -VT -WI -">
					<functionstep name="SetPersonalProperty" id="904184543" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.5)>, \., 0)>)>]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.7)&gt;, \., 0)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="AL -CT -NC -" id="621146318">
					<functionstep name="SetPersonalPropertyAL" id="1007075596" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.7)>, \., 0)>)>

<=this.setvariable(coverage_personalproperty, <=this.roundup(<=this.getvariable(coverage_personalproperty)>, 100)>)>]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty" expression="{{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.5)&gt;, \., 0)&gt;}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}" appliesto="AR -" id="1553101507">
					<functionstep name="SetPersonalPropertyAR" id="388374027" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.5)>, \., 0)>)>]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty" expression="{{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.5)&gt;, \., 0)&gt;}}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}}
AND
{&lt;=this.getvariable(dwellinginfo_dwellinguse)&gt; EQUAL Primary}" appliesto="">
					<functionstep name="SetProp1" id="1367223230" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.5)>, \., 0)>)>

]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}" appliesto="VT -" id="1592404510">
					<condition name="CheckEndorsement" expression="{&lt;=this.getvariable(endorsements_replacementcostcontent)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.75)&gt;, \., 0)&gt;}
AND
{1 EQUAL 0}" appliesto="">
						<functionstep name="SetPersonalProperty75%VT" id="406460131" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.75)>, \., 0)>)>]]></functionstep>
					</condition>
					<condition name="CheckEndorsement" expression="{&lt;=this.getvariable(endorsements_replacementcostcontent)&gt; EQUAL No}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.5)&gt;, \., 0)&gt;}" appliesto="">
						<functionstep name="SetPersonalProperty50%VT" id="1365888997" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.5)>, \., 0)>)>]]></functionstep>
					</condition>
				</condition>
				<condition name="HO3 PersonalProperty" expression="{{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.75)&gt;, \., 0)&gt;}}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}}" appliesto="CO -GA -KY -MO -UT -WI -">
					<functionstep name="SetPersonalPropertyMO" id="1258196412" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.75)>, \., 0)>)>
]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty" expression="{{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.5)&gt;, \., 0)&gt;}}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}}
AND
{&lt;=this.getvariable(dwellinginfo_dwellinguse)&gt; EQUAL Primary}" appliesto="">
					<functionstep name="SetProp" id="650037916" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.5)>, \., 0)>)>

]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty" expression="{{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.3)&gt;, \., 0)&gt;}}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}}
AND
{&lt;=this.getvariable(dwellinginfo_dwellinguse)&gt; NOTEQUAL Primary}" appliesto="">
					<functionstep name="SetPersonalPropertyIL" id="896104065" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.3)>, \., 0)>)>
]]></functionstep>
				</condition>
				<condition name="HO5-PersonalProperty" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.6)&gt;, \., 0)&gt;}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="1733428258">
					<functionstep name="SetPersonalProperty-TX" id="1357250952" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.6)>, \., 0)>)>]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty-TX" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.6)&gt;, \., 0)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
					<functionstep name="setPersonalProperty-HO3" id="583984475" prompt="no" errormessage="Error setting Personal Property-HO3. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.6)>, \., 0)>)>]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.7)&gt;, \., 0)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="CA -" id="75404145">
					<functionstep name="setPersonalProperty-HO3CA" id="324350578" prompt="no" errormessage="Error setting Personal Property-HO3. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.7)>, \., 0)>)>]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty-AZ" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.5)&gt;, \., 0)&gt;}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}}" appliesto="">
					<functionstep name="SetPersonalProperty-AZ" id="774885752" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.5)>, \., 0)>)>]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty" expression="{{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; GREATER 99999999}}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}}" appliesto="AL -AR -AZ -CO -GA -ID -IL -IN -KS -KY -MD -MN -NC -NH -OH -OR -PA -SC -TN -VA -VT -WA -WI -">
					<functionstep name="SetPersonalProperty1" id="1614928531" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, 99999999)> ]]></functionstep>
				</condition>
				<condition name="Increased Jewelry-TX" expression="{&lt;=this.getvariable(endorsements_increasedjewelryfurs)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(endorsements_increasedjewelryfursamount)&gt; GREATER 4500}" appliesto="">
					<functionstep name="SetIncreasedJewellery" id="1499685429" prompt="no" errormessage="Error setting Increased Jewellery. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_increasedjewelryfursamount, 4500)> ]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty-NE" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; GREATER 9999999}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}" appliesto="">
					<functionstep name="SetPersonalPropertNE" id="557592219" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, 9999999)> 
]]></functionstep>
				</condition>
				<condition name="HO3-PersonalProperty-NE" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.7)&gt;, \., 0)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
AND
{&lt;=this.getvariable(safeco_personalproperty)&gt; EQUAL Yes}" appliesto="">
					<functionstep name="SetPersonalPropertWA" id="55012212219" prompt="no" errormessage="Error setting Personal Property. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalproperty, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.7)>, \., 0)>)>]]></functionstep>
				</condition>
			</condition>
			<condition name="State-TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}}" appliesto="">
				<condition name="Check Deductible-HO4-HO6" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductibleHO4)&gt;)&gt; EQUAL 250}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER 30000}" appliesto="">
					<functionstep name="SetDeductibleTX1" id="1764914528" prompt="no" errormessage="Error setting Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_deductible, 1%)> ]]></functionstep>
				</condition>
				<condition name="Check Deductible-HO4-HO6" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductibleHO4)&gt;)&gt; EQUAL 100}
AND
{&lt;=this.getvariable(coverage_personalproperty)&gt; LESSER 11000}" appliesto="" id="1435112367">
					<functionstep name="SetDeductibleTX2" id="1719617957" prompt="no" errormessage="Error setting Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_deductible, 1%)> ]]></functionstep>
				</condition>
			</condition>
			<condition name="Construction" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="">
				<condition name="Construction Style" expression="{&lt;=this.getvariable(dwellinginfo_structure)&gt; EQUAL Dwelling}
AND
{&lt;=this.getvariable(dwellinginfo_numberofstories)&gt; EQUAL 2}" appliesto="">
					<functionstep name="SetConstruction" id="1029941652" prompt="no" errormessage="Error setting Construction Style. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(constructionstyle,com.safeco_TwoStory)>]]></functionstep>
				</condition>
			</condition>
			<condition name="newcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="">
				<condition name="newcondition" expression="{&lt;=this.getvariable(dwellinginfo_structure)&gt; EQUAL Dwelling}
AND
{&lt;=this.getvariable(dwellinginfo_numberofstories)&gt; EQUAL 2}" appliesto="">
					<functionstep name="newfunctionstep" id="266504657" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(constructionstyle,3)>
]]></functionstep>
				</condition>
			</condition>
			<condition name="State NY-NE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="GA -OR -WA -">
				<condition name="CheckBurglar" expression="{{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Local}
OR
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Central}
OR
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Direct}}
AND
{&lt;=this.getvariable(coverage_gatedcommunity)&gt; EQUAL Yes}" appliesto="">
					<functionstep name="SetComminity" id="617876548" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_gatedcommunity, No)>

]]></functionstep>
				</condition>
				<condition name="State NY" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}" appliesto="">
					<condition name="CheckZip" expression="{&lt;=this.getvariable(applicant_zip5)&gt; EQUAL 11238}
OR
{&lt;=this.getvariable(applicant_zip5)&gt; EQUAL 10032}
OR
{&lt;=this.getvariable(applicant_zip5)&gt; EQUAL 11746}
OR
{&lt;=this.getvariable(applicant_zip5)&gt; EQUAL 11756}
OR
{&lt;=this.getvariable(applicant_zip5)&gt; EQUAL 11724}" appliesto="">
						<functionstep name="SetDeductibleNY" id="311117186" prompt="no" errormessage="Error setting Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 5%)>

<=this.setvariable(coverage_deductible, 5000)>
]]></functionstep>
					</condition>
				</condition>
			</condition>
			<condition name="Single Flow" expression="{&lt;=this.getvariable(PostLoop)&gt; EQUAL 0}" appliesto="">
				<condition name="Policy Type HO3-HO5-TX" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
					<condition name="Ordinance Or Law Is No" expression="{&lt;=this.getvariable(endorsements_ordinanceorlaw)&gt; NOTEQUAL Yes}" appliesto="">
						<functionstep name="SetOrdinance" id="14911343" prompt="no" errormessage="Error setting Ordinance or Law. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_ordinanceorlaw_percent, 5000)>

<=this.setvariable(flag, 1)>

]]></functionstep>
					</condition>
					<condition name="Increased Mold" expression="{&lt;=this.getvariable(endorsements_increasedmold)&gt; NOTEQUAL Yes}" appliesto="">
						<functionstep name="SetIncreasedMold" id="1391063969" prompt="no" errormessage="Error Setting Ordinance or Law. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_increasedmold_propertydamage, 5000)>

<=this.setvariable(abc, 1)>
]]></functionstep>
					</condition>
				</condition>
				<condition name="SCC- 1371 -State UT" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}" appliesto="">
					<condition name="Check Year Built and Construction" expression="{{&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt; LESSER 1975}
OR
{&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_construction)&gt;, &lt;=this.getvariable(map_construction)&gt;)&gt; EQUAL MY}}
AND
{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL Yes}" appliesto="">
						<functionstep name="SetEarthQuakeNo" id="2009864614" prompt="no" errormessage="Error setting Earthquake. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_earthquake, No)>]]></functionstep>
					</condition>
				</condition>
				<condition name="SCC- 1371" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="AL -AR -IA -KS -MT -NM -UT -WY -" id="1558140060">
					<functionstep name="SetMaintainence" id="573832921" prompt="no" errormessage="Error setting Earthquake. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(maintenance, com.safeco_None)>]]></functionstep>
				</condition>
				<condition name="SCC- 1706 -State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}" appliesto="SC -" id="1980638585">
					<condition name="Check Year Built and Construction" expression="{&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt; LESSER 1960}
AND
{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL Yes}" appliesto="" id="266650726">
						<functionstep name="SetEarthQuakeNo_SC" id="319958715" prompt="no" errormessage="Error setting Earthquake. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_earthquake, No)>]]></functionstep>
					</condition>
				</condition>
				<condition name="SCC- 1706 -State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}" appliesto="MN -" id="413197681">
					<condition name="Ordinance or Law" expression="{&lt;=this.getvariable(endorsements_ordinanceorlaw)&gt; EQUAL Yes}
AND
{1 EQUAL 0}" appliesto="" id="1742251618">
						<functionstep name="SetOrdinanceLaw" id="528070631" prompt="no" errormessage="Error setting Earthquake. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_ordinanceorlaw, No)>]]></functionstep>
					</condition>
				</condition>
			</condition>
			<condition name="State CT" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}" appliesto="">
				<condition name="Check Ded" expression="{{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 2000}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 2500}}
AND
{{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 1%}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 100}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 250}}" appliesto="">
					<functionstep name="Setwind1" id="1575676230" prompt="no" errormessage="Error setting wind deductible, Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 2%)>
]]></functionstep>
				</condition>
				<condition name="Check Windded" expression="{{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 3000}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 4000}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 5000}}
AND
{{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 1%}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 100}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 250}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 500}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 1000}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 2%}}" appliesto="">
					<functionstep name="SetWind2" id="1821910492" prompt="no" errormessage="Error setting wind deductible, Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 5%)>
]]></functionstep>
				</condition>
			</condition>
			<condition name="State TN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="GA -IN -MD -NC -NH -OR -PA -VA -WA -">
				<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="GA -IN -MD -NC -NH -OR -PA -VA -WA -">
					<functionstep name="RemapRoofGA" id="732251826" prompt="no" errormessage="Error mapping roof type. Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ARCH|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=ARCH|ROCK=ARCH|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=ASPHS|Shingle-Architectural=ARCH|Wood-Shake=WOODSS|Wood-Victorian Scallop=VSS|Tile-Clay/Concrete=CLAY|Tar & Gravel=TARGRB|Rolled Rubber=RUBB|Slate=SLAT|Corrugated Steel=STCOR|Tin=ALUM|Copper=COPP|Foam=FOAM|Tar and Gravel=TARGRB)>
]]></functionstep>
				</condition>
				<elsecondition>
					<functionstep name="RemapRoof" id="871201743" prompt="no" errormessage="Error mapping roof type. Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=ARCH|ASBESTOS=ASBO|ASPHALT SHINGLES=ASPHS|COMPOSITION=COMP|COPPER(FLAT)=COPP|COPPER(PITCHED)=COPP|CORRUGATED STEEL(FLAT)=STCOR|CORRUGATED STEEL(PITCHED)=STCOR|FIBERGLASS=FIBER|FOAM=FOAM|GRAVEL=TARGRB|METAL(FLAT)=METL|METAL(PITCHED)=METL|MINERAL FIBER SHAKE=MINFR|OTHER=ASPHS|PLASTIC(FLAT)=PLAS|PLASTIC(PITCHED)=PLAS|ROCK=TILE|ROLLED PAPER(FLAT)=ROLL|ROLLED PAPER(PITCHED)=ROLL|RUBBER FLAT=RUBB|RUBBER(PITCHED)=RUBB|SLATE=SLAT|TAR=TAR|TAR and GRAVEL=TARGRB|TILE(CLAY)=CLAY|TILE(CONCRETE)=CONC|TILE(SPANISH)=CLAY|TIN(FLAT)=ALUM|TIN(PITCHED)=ALUM|WOOD FIBERGLASS SHINGLES=WF|WOOD SHAKE=WOODSS|WOOD SHINGLES=WOODS|Shingle-Asphalt=ASPHS|Shingle-Architectural=ARCH|Wood-Shake=WOODSS|Wood-Victorian Scallop=VSS|Tile-Clay/Concrete=CLAY|Tar & Gravel=TARGRB|Rolled Rubber=RUBB|Slate=SLAT|Corrugated Steel=STCOR|Tin=ALUM|Copper=COPP|Foam=FOAM)>

]]></functionstep>
				</elsecondition>
			</condition>
			<condition name="State IL" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="">
				<condition name="newcondition" expression="{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 1/2%}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 500}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 100}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 250}" appliesto="">
					<functionstep name="Mapwaterbackup" id="1540053452" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_waterbackupamount, 1000=50500|2000=50500|3000=50500|4000=50500|5000=50500|6000=100500|7000=100500|8000=100500|9000=100500|10000=100500|15000=250500|20000=250500|25000=250500|50000=500500)>]]></functionstep>
				</condition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 1%}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 1000}" appliesto="">
					<functionstep name="Mapwaterbackup1" id="197606352" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_waterbackupamount, 1000=51000|2000=51000|3000=51000|4000=51000|5000=51000|6000=101000|7000=101000|8000=101000|9000=101000|10000=101000|15000=251000|20000=251000|25000=251000|50000=501000)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 1500}" appliesto="" id="525906764">
					<functionstep name="Mapwaterbackup15" id="1986587895" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_waterbackupamount, 1000=51500|2000=51500|3000=51500|4000=51500|5000=51500|6000=101500|7000=101500|8000=101500|9000=101500|10000=101500|15000=2515000|20000=251500|25000=251500|50000=501500)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 2000}" appliesto="" id="1360197132">
					<functionstep name="Mapwaterbackup2" id="635437240" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_waterbackupamount, 1000=52000|2000=52000|3000=52000|4000=52000|5000=52000|6000=102000|7000=102000|8000=102000|9000=102000|10000=102000|15000=252000|20000=252000|25000=252000|50000=502000)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 2500}" appliesto="">
					<functionstep name="Mapwaterbackup3" id="1376178678" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_waterbackupamount, 1000=52500|2000=52500|3000=52500|4000=52500|5000=52500|6000=102500|7000=102500|8000=102500|9000=102500|10000=102500|15000=252500|20000=252500|25000=252500|50000=502500)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 3000}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 5000}" appliesto="">
					<functionstep name="Mapwaterbackup4" id="876737087" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_waterbackupamount, 1000=55000|2000=55000|3000=55000|4000=55000|5000=55000|6000=105000|7000=105000|8000=105000|9000=105000|10000=105000|15000=255000|20000=255000|25000=255000|50000=505000)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 10000}" appliesto="" id="22546609">
					<functionstep name="Mapwaterbackup5" id="133550537" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_waterbackupamount, 1000=57500|2000=57500|3000=57500|4000=57500|5000=57500|6000=107500|7000=107500|8000=107500|9000=107500|10000=107500|15000=257500|20000=257500|25000=257500|50000=507500)>]]></functionstep>
				</elseifcondition>
			</condition>
			<condition name="State OH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}" appliesto="">
				<condition name="CheckBurglar" expression="{{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Local}
OR
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Central}
OR
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Direct}}
AND
{&lt;=this.getvariable(coverage_gatedcommunity)&gt; EQUAL Yes}" appliesto="">
					<functionstep name="SetCommnity" id="63152219" prompt="no" errormessage="Error setting gated community.Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_gatedcommunity, No)>]]></functionstep>
				</condition>
				<condition name="CheckPolicy" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TN}" appliesto="">
					<functionstep name="SetdedOH" id="243333040" prompt="no" errormessage="Error setting deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=250|250=250|500=500|750=750|1000=1000|1500=1500|2000=2500|2500=2500|3000=5000|4000=5000|5000=5000)>
]]></functionstep>
				</condition>
			</condition>
			<condition name="State NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
				<condition name="Deductible 1000" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; EQUAL 1000}" appliesto="">
					<functionstep name="RemapwinddedNC" id="2050165252" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_WindDeductible, 100=2|250=2|500=5|1000=5|1500=5|1%=2|2%=2|3%=5|4%=5|5%=5)>]]></functionstep>
				</condition>
				<elseifcondition name="Deductible greater 1000" expression="{&lt;=this.convertvalue(&lt;=this.getvariable(coverage_deductible)&gt;, &lt;=this.getvariable(map_deductible)&gt;)&gt; GREATER 1000}" appliesto="">
					<functionstep name="RemapwinddedNC1" id="1105483334" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_WindDeductible, 100=5|250=5|500=5|1000=5|1500=5|1%=1|2%=2|3%=5|4%=5|5%=5)>]]></functionstep>
				</elseifcondition>
				<elsecondition>
					<functionstep name="RemapwinddedNC2" id="1086614268" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1500=1|1%=1|2%=2|3%=5|4%=5|5%=5)>]]></functionstep>
				</elsecondition>
			</condition>
			<condition name="State MN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="">
				<condition name="newcondition" expression="{&lt;=this.getvariable(exteriorwalls)&gt; EQUAL L}" appliesto="">
					<functionstep name="SetLog" id="82862426" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(constructionstyle,L)>]]></functionstep>
				</condition>
			</condition>
			<condition name="State SD" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}" appliesto="">
				<condition name="Policy Type HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 2000}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 2500}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 3000}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 4000}
OR
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 5000}}" appliesto="">
					<functionstep name="SetDeductibleHO6" id="257683019" prompt="no" errormessage="Error Setting Deductible for HO6. Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_deductible,1500)>]]></functionstep>
				</condition>
				<condition name="LossAssessment" expression="{&lt;=this.getvariable(endorsements_lossassessment)&gt; EQUAL Yes}
AND
{{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUAL 5000}
OR
{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUAL 10000}}
AND
{1 EQUAL 0}" appliesto="">
					<functionstep name="SetLossAssessmentSD" id="1433017005" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_lossassessment_amount,11000)>]]></functionstep>
				</condition>
				<condition name="Check Square Footage" expression="{&lt;=this.getvariable(dwellinginfo_squarefootage)&gt; LESSER 1200}" appliesto="">
					<functionstep name="SetSquareFootage" id="1925317416" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_squarefootage,1200)>]]></functionstep>
				</condition>
				<condition name="Square Footage" expression="{&lt;=this.getvariable(dwellinginfo_squarefootage)&gt; GREATER 15000}" appliesto="">
					<functionstep name="SetSqFootage" id="1065564430" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_squarefootage,15000)>
]]></functionstep>
				</condition>
			</condition>
			<condition name="CheckPolicyType" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.getvariable(dwellinginfo_numberofstories)&gt; EQUAL Bi-Level}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}" appliesto="">
				<functionstep name="SetNumberOfStories" id="195259101" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_numberofstories,)>
]]></functionstep>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}" appliesto="MD -">
				<condition name="Water Backup" expression="{&lt;=this.getvariable(endorsements_waterbackup)&gt; EQUAL Yes}" appliesto="">
					<functionstep name="SetWaterBackupAmountMD" id="1165509944" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_waterbackup_amount,5000)>
]]></functionstep>
				</condition>
			</condition>
			<condition name="newcondition" expression="{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 1000}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
AND
{1 EQUAL 10}" appliesto="">
				<functionstep name="setvalue_MD" id="475217323" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_waterbackupamount, 1000=50500|2000=50500|3000=50500|4000=50500|5000=50500|6000=100500|7000=100500|8000=100500|9000=100500|10000=100500|15000=250500|20000=250500|25000=250500|50000=5000)>
]]></functionstep>
			</condition>
			<condition name="STATENY" expression="{&lt;=this.getvariable(endorsements_waterbackup_amount)&gt; LESSER 5000}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NY}" appliesto="">
				<functionstep name="SetWaterBackup3" id="1695163838" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_waterbackup_amount,5000)>]]></functionstep>
			</condition>
			<condition name="OrdinanceorLaw - Yes" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=java.callstringmethod(matches, &lt;=this.getvariable(rating_statecode)&gt;, MA|CO|IN|TN|WI)&gt; EQUAL true}" appliesto="" id="303775412">
				<functionstep name="Setordinanceorlaw1" id="1060253795" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=75|100=100)>]]></functionstep>
			</condition>
			<condition name="OrdinanceorLaw - Yes" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=java.callstringmethod(matches, &lt;=this.getvariable(rating_statecode)&gt;,  IL|MN|NY|UT|AZ|)&gt; EQUAL true}
AND
{&lt;=java.callstringmethod(matches, &lt;=this.getvariable(packagenew)&gt;,A|C)&gt; EQUAL true}" appliesto="">
				<functionstep name="Setordinanceorlaw" id="1156520193" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=75|100=100)>]]></functionstep>
			</condition>
			<condition name="newcondition" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
				<functionstep name="Setordinanceorlaw12" id="339728309" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_ordinanceorlawpercent, 10=50|25=50|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 10=10|25=10|50=10|75=75|100=100)>
]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="Setordinanceorlaw11" id="838620248" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_ordinanceorlawpercent, 25=50|50=50|75=75|100=100)>

<=this.setvariable(map_ordinanceorlawpercentHO6, 25=10|50=10|75=75|100=100)>]]></functionstep>
			</elsecondition>
			<condition name="Agency" expression="{&lt;=this.getprofilekeyvalue(agencyname)&gt; EQUAL libertymutual}" appliesto="">
				<functionstep name="SetprotectionClass" id="1607837598" prompt="no" errormessage="Error setting home details xml.Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_protectionclass,4)>
]]></functionstep>
			</condition>
		</condition>
		<condition name="SIGN ON &amp; INSURANCE" expression="{1 EQUAL 1}" appliesto="">
			<functionstep name="SignonRqXML" id="114512154" prompt="no" errormessage="Error setting SignOnRqXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(signrqxml, <SignonRq>
<SignonPswd>
<CustId>
<SPName>www.ezlynx.com</SPName>
<CustLoginId><=this.getprofilekeyvalue(username)></CustLoginId>
</CustId>
<CustPswd>
<EncryptionTypeCd>NONE</EncryptionTypeCd>
<Pswd><=this.getprofilekeyvalue(password)></Pswd>
</CustPswd>
</SignonPswd>
<ClientDt>
</ClientDt>
<CustLangPref>en-US</CustLangPref>
<ClientApp>
<Org>EZL</Org>
<Name><=this.getvariable(quotesrc)></Name>
<Version>1.1</Version>
</ClientApp>
</SignonRq>)>]]></functionstep>
			<condition name="Test Account" expression="{&lt;=this.getprofilekeyvalue(environment)&gt; EQUAL UAT}" appliesto="">
				<functionstep name="SignonRqXMLUAT" id="980301144" prompt="no" errormessage="Error setting SignOnRqXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(signrqxml, <SignonRq>
<SignonPswd>
<CustId>
<SPName>www.ezlynx.com</SPName>
<CustLoginId><=this.getprofilekeyvalue(username)></CustLoginId>
</CustId>
<CustPswd>
<EncryptionTypeCd>NONE</EncryptionTypeCd>
<Pswd><=this.getprofilekeyvalue(password)></Pswd>
</CustPswd>
</SignonPswd>
<ClientDt>
</ClientDt>
<CustLangPref>en-US</CustLangPref>
<ClientApp>
<Org>EZL</Org>
<Name><=this.getvariable(quotesrc)></Name>
<Version>1.1</Version>
</ClientApp>
</SignonRq>)>]]></functionstep>
			</condition>
			<condition name="FOR CAP" expression="{&lt;=this.getprofilekeyvalue(newenvironment)&gt; EQUAL CAP}" appliesto="" id="81738524">
				<functionstep name="SignonRqXMLCAP" id="1142494886" prompt="no" errormessage="Error setting SignOnRqXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(signrqxml, <SignonRq>
<SignonPswd>
<CustId>
<SPName>www.ezlynx.com</SPName>
<CustLoginId><=this.getprofilekeyvalue(username)></CustLoginId>
</CustId>
<CustPswd>
<EncryptionTypeCd>NONE</EncryptionTypeCd>
<Pswd><=this.getprofilekeyvalue(password)></Pswd>
</CustPswd>
</SignonPswd>
<ClientDt>
</ClientDt>
<CustLangPref>en-US</CustLangPref>
<ClientApp>
<Org>PROJECT</Org>
<Name>CAP</Name>
<Version>1.0</Version>
</ClientApp>
</SignonRq>)>]]></functionstep>
			</condition>
			<functionstep name="GenerateApplicantID" id="1795109352" prompt="no" errormessage="Error setting applicant ID. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(applicantid, <=java.callstringmethod(substring, <=this.getvariable(applicant_dob)>, 0, 4)><=java.callstringmethod(substring, <=this.getvariable(applicant_dob)>, 5, 7)><=java.callstringmethod(substring, <=this.getvariable(applicant_dob)>, 8, 10)><=java.callstringmethod(substring, <=this.getvariable(applicant_zip5)>, 0, 4)>)>]]></functionstep>
			<condition name="RCE" expression="{{&lt;=this.getvariable(dwellinginfo_replacementcostextended)&gt; EQUAL Yes}
AND
{&lt;=this.getprofilekeyvalue(RUNREPLACEMENTCOST)&gt; EQUAL 1}
AND
{{&lt;=this.getvariable(PostLoop)&gt; EQUAL 0}
OR
{&lt;=this.getvariable(PostLoop)&gt; EQUAL &lt;=this.getvariable(basketcount)&gt;}}}" appliesto="">
				<functionstep name="InsuranceSvcRqXML_RCE" id="578265759" prompt="no" errormessage="Error setting InsuranceXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(insurancesvcrqxml, <RqUID><=this.getvariable(rquidvar)>-<=this.formatdate(today, mmss)>-11da-8ad9-<=this.getvariable(applicantid)></RqUID>
<HomePolicyQuoteInqRq>
<RqUID><=this.getvariable(rquidvar)>-<=this.formatdate(today, mmss)>-11da-8ad9-<=this.getvariable(applicantid)></RqUID>
<com.safeco_TransactionType>QuoteRQ</com.safeco_TransactionType>
<com.safeco_SubTransactionType>com.safeco_CalcReplCost</com.safeco_SubTransactionType> 
<TransactionRequestDt><=this.formatdate(today, yyyy-MM-dd)>T<=this.formatdate(today, HH:mm:ss)></TransactionRequestDt>
<TransactionEffectiveDt><=this.formatdate(today, yyyy-MM-dd)></TransactionEffectiveDt>
<CurCd>USD</CurCd>
<Producer>
<ProducerInfo>
<ContractNumber><=this.getvariable(agentid)></ContractNumber>
<ProducerSubCode><=this.getvariable(producername)></ProducerSubCode>
</ProducerInfo>
</Producer>)>]]></functionstep>
				<functionstep name="ReplacementCost_FoundationSlope" id="538285529" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfo_landunderfoundation,
<HillsideIncline>
<UnitMeasurementCd>DD</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_landunderfoundation)>, Flat to Slight Slope=10|Moderate Slope=20|Steep Slope=30)></NumUnits>
</HillsideIncline>
)>

]]></functionstep>
				<condition name="Baths" expression="{1 EQUAL 1}" appliesto="">
					<condition name="FullBath" expression="{1 EQUAL 0}" appliesto="">
						<condition name="EconomicBathRoom" expression="{&lt;=this.addinteger(&lt;=this.getvariable(dwellinginfo_fullbaths_buildersgrade)&gt;,&lt;=this.getvariable(dwellinginfo_fullbaths_basic)&gt;)&gt; GREATER 0}" appliesto="">
							<functionstep name="Build_EconomicBathRoomXML" id="2128669854" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>Full</BathroomTypeCd>
<ConstructionQualityCd>ECONO</ConstructionQualityCd>
<NumBathrooms><=this.addinteger(<=this.getvariable(dwellinginfo_fullbaths_buildersgrade)>,<=this.getvariable(dwellinginfo_fullbaths_basic)>)></NumBathrooms>
</BathroomInfo> )>]]></functionstep>
						</condition>
						<condition name="SemiCustomBathRoom" expression="{&lt;=this.getvariable(dwellinginfo_fullbaths_semicustom)&gt; GREATER 0}" appliesto="" id="722321113">
							<functionstep name="Build_SemiCustomBathRoomXML" id="1684940211" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>Full</BathroomTypeCd>
<ConstructionQualityCd>STCUST</ConstructionQualityCd>
<NumBathrooms><=this.getvariable(dwellinginfo_fullbaths_semicustom)></NumBathrooms>
</BathroomInfo> )>]]></functionstep>
						</condition>
						<condition name="CustomBathRoom" expression="{&lt;=this.getvariable(dwellinginfo_fullbaths_custom)&gt; GREATER 0}" appliesto="" id="1372345589">
							<functionstep name="Build_CustomBathRoomXML" id="1767804332" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>Full</BathroomTypeCd>
<ConstructionQualityCd>CUSTM</ConstructionQualityCd>
<NumBathrooms><=this.getvariable(dwellinginfo_fullbaths_custom)></NumBathrooms>
</BathroomInfo> )>
]]></functionstep>
						</condition>
						<condition name="DesignerBathRoom" expression="{&lt;=this.getvariable(dwellinginfo_fullbaths_designer)&gt; GREATER 0}" appliesto="" id="240325886">
							<functionstep name="Build_DesignerBathRoomXML" id="542865666" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>Full</BathroomTypeCd>
<ConstructionQualityCd>Designer</ConstructionQualityCd>
<NumBathrooms><=this.getvariable(dwellinginfo_fullbaths_designer)>
</NumBathrooms>
</BathroomInfo> )>]]></functionstep>
						</condition>
					</condition>
					<condition name="HalfBath" expression="{1 EQUAL 0}" appliesto="" id="1705462371">
						<condition name="EconomicBathRoom" expression="{&lt;=this.addinteger(&lt;=this.getvariable(dwellinginfo_halfbaths_buildersgrade)&gt;,&lt;=this.getvariable(dwellinginfo_halfbaths_basic)&gt;)&gt; GREATER 0}" appliesto="" id="449332869">
							<functionstep name="Build_EconomicBathRoomXML_Half" id="1258512632" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>Half</BathroomTypeCd>
<ConstructionQualityCd>ECONO</ConstructionQualityCd>
<NumBathrooms><=this.addinteger(<=this.getvariable(dwellinginfo_halfbaths_buildersgrade)>,<=this.getvariable(dwellinginfo_halfbaths_basic)>)></NumBathrooms>
</BathroomInfo> )>]]></functionstep>
						</condition>
						<condition name="SemiCustomBathRoom" expression="{&lt;=this.getvariable(dwellinginfo_halfbaths_semicustom)&gt; GREATER 0}" appliesto="" id="1807669935">
							<functionstep name="Build_SemiCustomBathRoomXML_Half" id="552535119" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>Half</BathroomTypeCd>
<ConstructionQualityCd>STCUST</ConstructionQualityCd>
<NumBathrooms><=this.getvariable(dwellinginfo_halfbaths_semicustom)></NumBathrooms>
</BathroomInfo> )>]]></functionstep>
						</condition>
						<condition name="CustomBathRoom" expression="{&lt;=this.getvariable(dwellinginfo_halfbaths_custom)&gt; GREATER 0}" appliesto="" id="291654178">
							<functionstep name="Build_CustomBathRoomXML_Half" id="556253799" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>Half</BathroomTypeCd>
<ConstructionQualityCd>CUSTM</ConstructionQualityCd>
<NumBathrooms><=this.getvariable(dwellinginfo_halfbaths_custom)></NumBathrooms>
</BathroomInfo> )>
]]></functionstep>
						</condition>
						<condition name="DesignerBathRoom" expression="{&lt;=this.getvariable(dwellinginfo_halfbaths_designer)&gt; GREATER 0}" appliesto="" id="488230528">
							<functionstep name="Build_DesignerBathRoomXML_Half" id="1759665807" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>Half</BathroomTypeCd>
<ConstructionQualityCd>Designer</ConstructionQualityCd>
<NumBathrooms><=this.getvariable(dwellinginfo_halfbaths_designer)>
</NumBathrooms>
</BathroomInfo> )>]]></functionstep>
						</condition>
					</condition>
					<condition name="ThreeQuarterBath" expression="{1 EQUAL 0}" appliesto="" id="1676270057">
						<condition name="EconomicBathRoom" expression="{&lt;=this.addinteger(&lt;=this.getvariable(dwellinginfo_threequarterbaths_buildersgrade)&gt;,&lt;=this.getvariable(dwellinginfo_threequarterbaths_basic)&gt;)&gt; GREATER 0}" appliesto="" id="525121998">
							<functionstep name="Build_EconomicBathRoomXML_ThreeQuarter" id="961145812" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>ThreeQuarter</BathroomTypeCd>
<ConstructionQualityCd>ECONO</ConstructionQualityCd>
<NumBathrooms><=this.addinteger(<=this.getvariable(dwellinginfo_threequarterbaths_buildersgrade)>,<=this.getvariable(dwellinginfo_threequarterbaths_basic)>)></NumBathrooms>
</BathroomInfo> )>]]></functionstep>
						</condition>
						<condition name="SemiCustomBathRoom" expression="{&lt;=this.getvariable(dwellinginfo_threequarterbaths_semicustom)&gt; GREATER 0}" appliesto="" id="2091079873">
							<functionstep name="Build_SemiCustomBathRoomXML_ThreeQuarter" id="1093640483" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>ThreeQuarter</BathroomTypeCd>
<ConstructionQualityCd>STCUST</ConstructionQualityCd>
<NumBathrooms><=this.getvariable(dwellinginfo_threequarterbaths_semicustom)></NumBathrooms>
</BathroomInfo> )>]]></functionstep>
						</condition>
						<condition name="CustomBathRoom" expression="{&lt;=this.getvariable(dwellinginfo_threequarterbaths_custom)&gt; GREATER 0}" appliesto="" id="1379581585">
							<functionstep name="Build_CustomBathRoomXML_ThreeQuarter" id="2093977381" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>ThreeQuarter</BathroomTypeCd>
<ConstructionQualityCd>CUSTM</ConstructionQualityCd>
<NumBathrooms><=this.getvariable(dwellinginfo_threequarterbaths_custom)></NumBathrooms>
</BathroomInfo> )>
]]></functionstep>
						</condition>
						<condition name="DesignerBathRoom" expression="{&lt;=this.getvariable(dwellinginfo_threequarterbaths_designer)&gt; GREATER 0}" appliesto="" id="1047927412">
							<functionstep name="Build_DesignerBathRoomXML_ThreeQuarter" id="418348201" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_bathinfo, <BathroomInfo>
<BathroomTypeCd>ThreeQuarter</BathroomTypeCd>
<ConstructionQualityCd>Designer</ConstructionQualityCd>
<NumBathrooms><=this.getvariable(dwellinginfo_threequarterbaths_designer)>
</NumBathrooms>
</BathroomInfo> )>]]></functionstep>
						</condition>
					</condition>
					<functionstep name="SetTotalBaths" id="1754126346" prompt="no" errormessage="Error setting total baths. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(fbath, <=this.addinteger(<=this.getvariable(dwellinginfo_fullbaths_buildersgrade)>,<=this.getvariable(dwellinginfo_fullbaths_basic)>,<=this.getvariable(dwellinginfo_fullbaths_semicustom)>,<=this.getvariable(dwellinginfo_fullbaths_custom)>,<=this.getvariable(dwellinginfo_fullbaths_designer)>)>)>

<=this.setvariable(hbath, <=this.addinteger(<=this.getvariable(dwellinginfo_halfbaths_buildersgrade)>,<=this.getvariable(dwellinginfo_halfbaths_basic)>,<=this.getvariable(dwellinginfo_halfbaths_semicustom)>,<=this.getvariable(dwellinginfo_halfbaths_custom)>,<=this.getvariable(dwellinginfo_halfbaths_designer)>)>)>

<=this.setvariable(tbath, <=this.addinteger(<=this.getvariable(dwellinginfo_threequarterbaths_buildersgrade)>,<=this.getvariable(dwellinginfo_threequarterbaths_basic)>,<=this.getvariable(dwellinginfo_threequarterbaths_semicustom)>,<=this.getvariable(dwellinginfo_threequarterbaths_custom)>,<=this.getvariable(dwellinginfo_threequarterbaths_designer)>)>)>


<=this.setvariable(replacementcost_bathinfo,
<BathroomInfo>
<BathroomTypeCd>Full</BathroomTypeCd>
<NumBathrooms><=this.getvariable(fbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>ThreeQuarter</BathroomTypeCd>
<NumBathrooms><=this.getvariable(tbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>Half</BathroomTypeCd>
<NumBathrooms><=this.getvariable(hbath)></NumBathrooms>
</BathroomInfo> 
)>]]></functionstep>
				</condition>
				<condition name="GaragesAndCarports" expression="{1 EQUAL 1}" appliesto="">
					<functionstep name="ReplacementCost_AttachedGarage" id="1170870172" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(replacementcost_garageinfo,<GarageInfo>
<GarageTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_garagetype)>,Attached Garage=Frame|Detached Garage=Frame|Built - In Garage=BI|Basement Garage=BS|Carport=CP|None=)></GarageTypeCd>
<NumVehs><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofcars)>, 1=1|2=2|3=3|4=4|5=5|6=5|7=5|8=5|9=5|10=5|11=5|12=5|13=5|14=5|15=5|16=5|17=5|18=5|19=5|20=5)></NumVehs>
<NumGarages>1</NumGarages>
</GarageInfo>
)>

]]></functionstep>
				</condition>
				<condition name="KitchenInfo" expression="{1 EQUAL 1}" appliesto="">
					<condition name="KitchenInfo_Economy" expression="{&lt;=this.addinteger(&lt;=this.getvariable(dwellinginfo_kitchens_basic)&gt;,&lt;=this.getvariable(dwellinginfo_kitchens_buildersgrade)&gt;)&gt; GREATER 0}" appliesto="">
						<functionstep name="Build_KitchenInfo_Economy" id="84593131" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_kitcheninfo,
<KitchenInfo>
<ConstructionQualityCd>ECONO</ConstructionQualityCd>
<NumKitchens><=this.addinteger(<=this.getvariable(dwellinginfo_kitchens_basic)>,<=this.getvariable(dwellinginfo_kitchens_buildersgrade)>)></NumKitchens>
</KitchenInfo>
)>]]></functionstep>
					</condition>
					<condition name="KitchenInfo_SemiCustom" expression="{&lt;=this.getvariable(dwellinginfo_kitchens_semicustom)&gt; GREATER 0}" appliesto="" id="1053015517">
						<functionstep name="Build_KitchenInfo_SemiCustom" id="108326103" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_kitcheninfo,
<KitchenInfo>
<ConstructionQualityCd>STCUST</ConstructionQualityCd>
<NumKitchens><=this.getvariable(dwellinginfo_kitchens_semicustom)></NumKitchens>
</KitchenInfo>
)>]]></functionstep>
					</condition>
					<condition name="KitchenInfo_Custom" expression="{&lt;=this.getvariable(dwellinginfo_kitchens_custom)&gt; GREATER 0}" appliesto="" id="1654419621">
						<functionstep name="Build_KitchenInfo_Custom" id="101142825" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_kitcheninfo,
<KitchenInfo>
<ConstructionQualityCd>CUSTM</ConstructionQualityCd>
<NumKitchens><=this.getvariable(dwellinginfo_kitchens_custom)></NumKitchens>
</KitchenInfo>
)>]]></functionstep>
					</condition>
					<condition name="KitchenInfo_Designer" expression="{&lt;=this.getvariable(dwellinginfo_kitchens_designer)&gt; GREATER 0}" appliesto="" id="218459068">
						<functionstep name="Build_KitchenInfo_Designer" id="1465767009" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_kitcheninfo,
<KitchenInfo>
<ConstructionQualityCd>Designer</ConstructionQualityCd>
<NumKitchens><=this.getvariable(dwellinginfo_kitchens_designer)></NumKitchens>
</KitchenInfo>
)>]]></functionstep>
					</condition>
				</condition>
				<condition name="AdditionalStructures" expression="{1 EQUAL 1}" appliesto="">
					<condition name="AdditionalStructure1" expression="{1 EQUAL 1}" appliesto="">
						<condition name="Porch" expression="{{&lt;=this.getvariable(dwellinginfo_porchtype1)&gt; EQUAL Open Porch}
OR
{&lt;=this.getvariable(dwellinginfo_porchtype1)&gt; EQUAL Enclosed Porch}
OR
{&lt;=this.getvariable(dwellinginfo_porchtype1)&gt; EQUAL Screened Porch}}" appliesto="">
							<functionstep name="Replacementcost_AdditionalStructure1_Porch" id="1343791947" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_additionalstructure,
<PorchInfo>
<PorchTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_porchtype1)>,Open Porch=O|Enclosed Porch=E|Screened Porch=Screen)></PorchTypeCd>
<SurfaceArea>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
<NumUnits><=this.getvariable(dwellinginfo_porch1_squarefootage)></NumUnits>
</SurfaceArea>
</PorchInfo>
)>]]></functionstep>
						</condition>
						<condition name="Deck" expression="{{&lt;=this.getvariable(dwellinginfo_porchtype1)&gt; EQUAL Redwood Deck}
OR
{&lt;=this.getvariable(dwellinginfo_porchtype1)&gt; EQUAL Wood Deck}}" appliesto="">
							<functionstep name="Replacementcost_AdditionalStructure1_Deck" id="1368862382" prompt="no" errormessage="PorchInfo&gt;
          &lt;PorchTypeCd&gt;Screen&lt;/PorchTypeCd&gt;
          &lt;BreezewayTypeCd&gt;&lt;/BreezewayTypeCd&gt;
          &lt;SurfaceArea&gt;
               &lt;UnitMeasurementCd&gt;square foot&lt;UnitMeasurementCd&gt;
               &lt;NumUnits&gt;100&lt;/NumUnits&gt;
          &lt;/SurfaceArea&gt;
     &lt;/PorchInfo&gt;" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_additionalstructure,
<DeckInfo>
<DeckTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_porchtype1)>,Redwood Deck=Rewood|Wood Deck=Wood)></DeckTypeCd>
<SurfaceArea>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
<NumUnits><=this.getvariable(dwellinginfo_porch1_squarefootage)></NumUnits>
</SurfaceArea>
</DeckInfo>
)>]]></functionstep>
						</condition>
						<condition name="Breezeways" expression="{{&lt;=this.getvariable(dwellinginfo_porchtype1)&gt; EQUAL Open Breezeways}
OR
{&lt;=this.getvariable(dwellinginfo_porchtype1)&gt; EQUAL Enclosed Breezeways}
OR
{&lt;=this.getvariable(dwellinginfo_porchtype1)&gt; EQUAL Screened Breezeways}}" appliesto="">
							<functionstep name="Replacementcost_AdditionalStructure1_Breezeway" id="1651275226" prompt="no" errormessage="PorchInfo&gt;
          &lt;PorchTypeCd&gt;Screen&lt;/PorchTypeCd&gt;
          &lt;BreezewayTypeCd&gt;&lt;/BreezewayTypeCd&gt;
          &lt;SurfaceArea&gt;
               &lt;UnitMeasurementCd&gt;square foot&lt;UnitMeasurementCd&gt;
               &lt;NumUnits&gt;100&lt;/NumUnits&gt;
          &lt;/SurfaceArea&gt;
     &lt;/PorchInfo&gt;" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_additionalstructure,
<PorchInfo>
<BreezewayTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_porchtype1)>,Open Breezeways=O|Enclosed Breezeways=E|Screened Breezeways=Screen)></BreezewayTypeCd>
<SurfaceArea>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
<NumUnits><=this.getvariable(dwellinginfo_porch1_squarefootage)></NumUnits>
</SurfaceArea>
</PorchInfo>
)>]]></functionstep>
						</condition>
					</condition>
					<condition name="AdditionalStructure2" expression="{1 EQUAL 1}" appliesto="" id="746637727">
						<condition name="Porch" expression="{{&lt;=this.getvariable(dwellinginfo_porchtype2)&gt; EQUAL Open Porch}
OR
{&lt;=this.getvariable(dwellinginfo_porchtype2)&gt; EQUAL Enclosed Porch}
OR
{&lt;=this.getvariable(dwellinginfo_porchtype2)&gt; EQUAL Screened Porch}}" appliesto="" id="105312653">
							<functionstep name="Replacementcost_AdditionalStructure2_Porch" id="150889044" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_additionalstructure,
<PorchInfo>
<PorchTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_porchtype2)>,Open Porch=O|Enclosed Porch=E|Screened Porch=Screen)></PorchTypeCd>
<SurfaceArea>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
<NumUnits><=this.getvariable(dwellinginfo_porch2_squarefootage)></NumUnits>
</SurfaceArea>
</PorchInfo>
)>]]></functionstep>
						</condition>
						<condition name="Deck" expression="{{&lt;=this.getvariable(dwellinginfo_porchtype2)&gt; EQUAL Redwood Deck}
OR
{&lt;=this.getvariable(dwellinginfo_porchtype2)&gt; EQUAL Wood Deck}}" appliesto="" id="847653759">
							<functionstep name="Replacementcost_AdditionalStructure2_Deck" id="993806553" prompt="no" errormessage="PorchInfo&gt;
          &lt;PorchTypeCd&gt;Screen&lt;/PorchTypeCd&gt;
          &lt;BreezewayTypeCd&gt;&lt;/BreezewayTypeCd&gt;
          &lt;SurfaceArea&gt;
               &lt;UnitMeasurementCd&gt;square foot&lt;UnitMeasurementCd&gt;
               &lt;NumUnits&gt;100&lt;/NumUnits&gt;
          &lt;/SurfaceArea&gt;
     &lt;/PorchInfo&gt;" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_additionalstructure,
<DeckInfo>
<DeckTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_porchtype2)>,Redwood Deck=Rewood|Wood Deck=Wood)></DeckTypeCd>
<SurfaceArea>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
<NumUnits><=this.getvariable(dwellinginfo_porch2_squarefootage)></NumUnits>
</SurfaceArea>
</DeckInfo>
)>]]></functionstep>
						</condition>
						<condition name="Breezeways" expression="{{&lt;=this.getvariable(dwellinginfo_porchtype2)&gt; EQUAL Open Breezeways}
OR
{&lt;=this.getvariable(dwellinginfo_porchtype2)&gt; EQUAL Enclosed Breezeways}
OR
{&lt;=this.getvariable(dwellinginfo_porchtype2)&gt; EQUAL Screened Breezeways}}" appliesto="" id="813730327">
							<functionstep name="Replacementcost_AdditionalStructure2_Breezeway" id="262261151" prompt="no" errormessage="PorchInfo&gt;
          &lt;PorchTypeCd&gt;Screen&lt;/PorchTypeCd&gt;
          &lt;BreezewayTypeCd&gt;&lt;/BreezewayTypeCd&gt;
          &lt;SurfaceArea&gt;
               &lt;UnitMeasurementCd&gt;square foot&lt;UnitMeasurementCd&gt;
               &lt;NumUnits&gt;100&lt;/NumUnits&gt;
          &lt;/SurfaceArea&gt;
     &lt;/PorchInfo&gt;" savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(replacementcost_additionalstructure,
<PorchInfo>
<BreezewayTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_porchtype2)>,Open Breezeways=O|Enclosed Breezeways=E|Screened Breezeways=Screen)></BreezewayTypeCd>
<SurfaceArea>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
<NumUnits><=this.getvariable(dwellinginfo_porch2_squarefootage)></NumUnits>
</SurfaceArea>
</PorchInfo>
)>]]></functionstep>
						</condition>
					</condition>
				</condition>
			</condition>
			<elsecondition>
				<functionstep name="InsuranceSvcRqXML" id="1750496823" prompt="no" errormessage="Error setting InsuranceXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(insurancesvcrqxml, <RqUID><=this.getvariable(rquidvar)>-<=this.formatdate(today, mmss)>-11da-8ad9-<=this.getvariable(applicantid)></RqUID>
<HomePolicyQuoteInqRq>
<RqUID><=this.getvariable(rquidvar)>-<=this.formatdate(today, mmss)>-11da-8ad9-<=this.getvariable(applicantid)></RqUID>
<com.safeco_TransactionType>QuoteRQ</com.safeco_TransactionType>
<TransactionRequestDt><=this.formatdate(today, yyyy-MM-dd)>T<=this.formatdate(today, HH:mm:ss)></TransactionRequestDt>
<TransactionEffectiveDt><=this.formatdate(today, yyyy-MM-dd)></TransactionEffectiveDt>
<CurCd>USD</CurCd>
<Producer>
<ProducerInfo>
<ContractNumber><=this.getvariable(agentid)></ContractNumber>
<ProducerSubCode><=this.getvariable(producername)></ProducerSubCode>
</ProducerInfo>
</Producer>)>]]></functionstep>
				<condition name="Automatic Quoting : RC - Bath" expression="{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 16}
AND
{{&lt;=this.getprofilekeyvalue(fbath)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getprofilekeyvalue(tbath)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getprofilekeyvalue(hbath)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}}" appliesto="">
					<functionstep name="Initialize" id="1277758241" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(fbath, <=this.getprofilekeyvalue(fbath)>)>

<=this.setvariable(tbath, <=this.getprofilekeyvalue(tbath)>)> 

<=this.setvariable(hbath, <=this.getprofilekeyvalue(hbath)>)>]]></functionstep>
					<functionstep name="BathInformation_AQT" id="743088993" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(replacementcost_bathinfo,
<BathroomInfo>
<BathroomTypeCd>Full</BathroomTypeCd>
<NumBathrooms><=this.getvariable(fbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>ThreeQuarter</BathroomTypeCd>
<NumBathrooms><=this.getvariable(tbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>Half</BathroomTypeCd>
<NumBathrooms><=this.getvariable(hbath)></NumBathrooms>
</BathroomInfo> 
)>

<=this.setvariable(dwellinginfo_landunderfoundation,)>

<=this.setvariable(replacementcost_garageinfo, )>]]></functionstep>
				</condition>
				<elsecondition>
					<functionstep name="BathInformation" id="1271696029" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(replacementcost_bathinfo,
<BathroomInfo>
<BathroomTypeCd>Full</BathroomTypeCd>
<NumBathrooms><=this.getvariable(fbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>ThreeQuarter</BathroomTypeCd>
<NumBathrooms><=this.getvariable(tbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>Half</BathroomTypeCd>
<NumBathrooms><=this.getvariable(hbath)></NumBathrooms>
</BathroomInfo> 
)>

<=this.setvariable(dwellinginfo_landunderfoundation,)>

<=this.setvariable(replacementcost_garageinfo, )>]]></functionstep>
				</elsecondition>
			</elsecondition>
		</condition>
	</condition>
</inlinefunction>
<condition name="ADDRESS" expression="{1 EQUAL 1}" appliesto="">
	<condition name="If Address line 2 present" expression="{&lt;=this.getvariable(applicant_addr2)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
		<functionstep name="SetAddressline2xml" id="81259664" prompt="no" errormessage="Error setting AddressXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(addressline2xml, <Addr2><=this.getvariable(applicant_addr2)></Addr2>)>]]></functionstep>
	</condition>
	<functionstep name="SetAddressxml" id="1422296549" prompt="no" errormessage="Error setting AddressXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(addressxml,
<Addr>
<AddrTypeCd>StreetAddress</AddrTypeCd>
<Addr1><=this.getvariable(applicant_address1)></Addr1>
<=this.getvariable(addressline2xml)>
<City><=this.getvariable(applicant_city)></City>
<StateProvCd><=this.getvariable(applicant_statecode)></StateProvCd>
<PostalCode><=this.getvariable(applicant_zip5)>-<=this.getvariable(applicant_zip4)></PostalCode>
<County><=this.getvariable(applicant_county)></County>
</Addr>)>]]></functionstep>
	<condition name="newcondition" expression="{&lt;=this.getvariable(applicant_previousaddress1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
		<functionstep name="SetPreviousAddressxml" id="928667676" prompt="no" errormessage="Error setting AddressXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(previousaddressxml,
<Addr>
<AddrTypeCd>PreviousAddress</AddrTypeCd>
<Addr1><=this.getvariable(applicant_previousaddress1)></Addr1>
<City><=this.getvariable(applicant_previouscity)></City>
<StateProvCd><=this.getvariable(applicant_previousstatecode)></StateProvCd>
<PostalCode><=this.getvariable(applicant_previouszip5)></PostalCode>
<County><=this.getvariable(applicant_previouscounty)></County>
</Addr>)>]]></functionstep>
	</condition>
</condition>
<condition name="PHONE NUMBER" expression="{1 EQUAL 1}" appliesto="">
	<functionstep name="SetHomePhoneXML" id="1434747710" prompt="no" errormessage="Error setting HomePhoneXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homephonexml, <PhoneInfo>
<CommunicationUseCd>Home</CommunicationUseCd>
<PhoneNumber>+1-<=java.callstringmethod(substring, <=this.getvariable(applicant_home_phonenumber)>, 0,3)>-<=java.callstringmethod(substring, <=this.getvariable(applicant_home_phonenumber)>, 3,10)></PhoneNumber>
</PhoneInfo>
)>]]></functionstep>
	<condition name="Work Phone" expression="{&lt;=this.getvariable(applicant_work_phonenumber)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ND}}" appliesto="" id="369053234">
		<functionstep name="SetWorkPhoneXML" id="1862621151" prompt="no" errormessage="Error setting WorkPhoneXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(workphonexml, <PhoneInfo>
<CommunicationUseCd>Business</CommunicationUseCd>
<PhoneNumber>+1-<=java.callstringmethod(substring, <=this.getvariable(applicant_work_phonenumber)>, 0,3)>-<=java.callstringmethod(substring, <=this.getvariable(applicant_work_phonenumber)>, 3,10)></PhoneNumber>
</PhoneInfo>)>]]></functionstep>
	</condition>
</condition>
<condition name="APPLICANT INFO" expression="{1 EQUAL 1}" appliesto="">
	<condition name="Industry If Other" expression="{&lt;=this.getvariable(applicant_industry)&gt; EQUAL Other}
OR
{&lt;=this.getvariable(applicant_occupation)&gt; EQUAL Other}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="AR -CA -CO -CT -GA -ID -IL -IN -KS -KY -LA -MA -MD -MO -MS -NC -ND -NH -NV -OH -OR -PA -TN -UT -VA -WA -WI -">
		<functionstep name="SetAppIndustryOther" id="1675339765" prompt="no" errormessage="Error setting Applicant Industry Info. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(applicant_industry, OTHER)>

<=this.setvariable(applicant_occupation, Other)>


]]></functionstep>
	</condition>
	<condition name="Industry If Other" expression="{&lt;=this.getvariable(applicant_industry)&gt; EQUAL Other}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}}" appliesto="MS -ND -SD -TX -">
		<functionstep name="SetAppIndustryOtherMS" id="6088529" prompt="no" errormessage="Error setting Applicant Industry Info. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(applicant_industry, OTHER:<=this.getvariable(industriesms)>)>

<=this.setvariable(applicant_occupation, OTHER:<=this.getvariable(occpationms)>)>



]]></functionstep>
	</condition>
	<functionstep name="SetApplicantInfoXML" id="380632037" prompt="no" errormessage="Error setting ApplicantInfoXML. Please contac EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(applicantinfoxml, <InsuredOrPrincipal>
<GeneralPartyInfo>
<NameInfo>
<PersonName>
<GivenName><=this.getvariable(applicant_firstname)></GivenName>
<OtherGivenName><=this.getvariable(applicant_middlename)></OtherGivenName>
<Surname><=this.getvariable(applicant_lastname)></Surname>
</PersonName>
<TaxIdentity>
<TaxIdTypeCd>SSN</TaxIdTypeCd>
<TaxId><=this.getvariable(applicant_ssn)></TaxId>
</TaxIdentity>
</NameInfo>

<Communications>
<=this.getvariable(homephonexml)>
<=this.getvariable(workphonexml)>
<EmailInfo>
<EmailAddr><=this.getvariable(applicant_email)></EmailAddr>
</EmailInfo>
</Communications>
<=this.getvariable(addressxml)>
<=this.getvariable(previousaddressxml)>
</GeneralPartyInfo>
<InsuredOrPrincipalInfo>
<InsuredOrPrincipalRoleCd>FNI</InsuredOrPrincipalRoleCd>
<PersonInfo>
<MaritalStatusCd><=this.convertvalue(<=this.getvariable(applicant_maritalstatus)>, <=this.getvariable(mapmaritalstatus)>)></MaritalStatusCd>
<BirthDt><=this.getvariable(applicant_dob)></BirthDt>
<com.safeco_IndustryCd><=this.getvariable(applicant_industry)></com.safeco_IndustryCd>
<com.safeco_OccupationCd><=this.getvariable(applicant_occupation)></com.safeco_OccupationCd>
<LengthTimeCurrentOccupation>
<NumUnits></NumUnits> 
<UnitMeasurementCd>Years</UnitMeasurementCd> 
</LengthTimeCurrentOccupation>
</PersonInfo>
</InsuredOrPrincipalInfo>
</InsuredOrPrincipal>)>]]></functionstep>
</condition>
<condition name="CO-APPLICANT INFO" expression="{&lt;=this.getvariable(applicant_applicantcount)&gt; EQUAL 2}" appliesto="">
	<condition name="Industry If Other" expression="{&lt;=this.getvariable(applicant_coapplicant_industry)&gt; EQUAL Other}
OR
{&lt;=this.getvariable(applicant_coapplicant_occupation)&gt; EQUAL Other}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="AR -CA -CO -CT -GA -ID -IL -IN -KS -LA -MD -MO -MS -NC -ND -NH -NV -OH -OR -PA -SD -TN -UT -VA -WA -WI -">
		<functionstep name="SetCoAppIndustryOther" id="887865439" prompt="no" errormessage="Error setting Co-Applicant Industry Info. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(applicant_coapplicant_industry, OTHER)>

<=this.setvariable(applicant_coapplicant_occupation, Other)>
]]></functionstep>
	</condition>
	<condition name="Industry If Other" expression="{&lt;=this.getvariable(applicant_coapplicant_industry)&gt; EQUAL Other}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}}" appliesto="MS -ND -SD -TX -" id="673098729">
		<functionstep name="SetCoAppIndustryOtherMS" id="798270470" prompt="no" errormessage="Error setting Applicant Industry Info. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(applicant_coapplicant_industry, OTHER)>

<=this.setvariable(applicant_coapplicant_occupation, Other)>

]]></functionstep>
	</condition>
	<functionstep name="SetCoApplicantInfoXML" id="1473990113" prompt="no" errormessage="Error setting CoApplicantInfoXML. Please contac EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coapplicantxml, <InsuredOrPrincipal>                <GeneralPartyInfo>
<NameInfo>
<PersonName>
<GivenName><=this.getvariable(applicant_coapplicant_firstname)></GivenName>
<Surname><=this.getvariable(applicant_coapplicant_lastname)></Surname>
</PersonName>
</NameInfo>
</GeneralPartyInfo>
<InsuredOrPrincipalInfo>
<InsuredOrPrincipalRoleCd>Coinsured</InsuredOrPrincipalRoleCd>
<PersonInfo>
<MaritalStatusCd><=this.convertvalue(<=this.getvariable(applicant_coapplicant_maritalstatus)>, <=this.getvariable(mapcoappmaritalstatus)>)></MaritalStatusCd>
<BirthDt><=this.getvariable(applicant_coapplicant_dob)></BirthDt>
<com.safeco_IndustryCd><=this.getvariable(applicant_coapplicant_industry)></com.safeco_IndustryCd>
<com.safeco_OccupationCd><=this.getvariable(applicant_coapplicant_occupation)></com.safeco_OccupationCd>
<TitleRelationshipCd><=this.convertvalue(<=this.getvariable(applicant_coapplicant_relationship)>, <=this.getvariable(maprelation)>)></TitleRelationshipCd>
</PersonInfo>
</InsuredOrPrincipalInfo>
</InsuredOrPrincipal>
)>

]]></functionstep>
</condition>
<condition name="LOSS INFO" expression="{&lt;=this.getvariable(losscount)&gt; GREATER 0}" appliesto="">
	<loop name="LossLoop" operator="equallesser" start="1" increment="1" count="&lt;=this.getvariable(losscount)&gt;">
		<functionstep name="SetLossXML1" id="1119067905" prompt="no" errormessage="Error setting LossXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossxml1, <Loss>
<TotalPaidAmt>
<Amt><=this.getvariable(loss_lossamount<=this.getvariable(LossLoop)>)></Amt>
</TotalPaidAmt>
<LossCauseCd><=this.convertvalue(<=this.getvariable(loss_description<=this.getvariable(LossLoop)>)>, <=this.getvariable(map_lossdescription)>)></LossCauseCd>
<LossDt><=this.getvariable(loss_dateofincident<=this.getvariable(LossLoop)>)></LossDt>
<LossDesc><=this.getvariable(loss_description<=this.getvariable(LossLoop)>)></LossDesc>
</Loss>
)>

<=this.setvariable(lossxml, <=this.getvariable(lossxml)><=this.getvariable(lossxml1)>)>

<=this.setvariable(lossxml1, <=java.callstringmethod(anonymous, VK_BLANK)>)>
]]></functionstep>
	</loop>
</condition>
<inlinefunction name="ExecutePersPolicy">
	<condition name="PERS POLICY" expression="{1 EQUAL 1}" appliesto="">
		<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="AL -AR -AZ -CA -CO -CT -GA -ID -IL -IN -KS -KY -LA -MA -MD -MN -MS -NC -ND -NH -NV -NY -OK -OR -PA -SD -UT -VA -VT -WA -WI -">
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
AND
{&lt;=this.getvariable(affinitydiscount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="CA -">
				<functionstep name="SetAffinityDiscountXML" id="649816737" prompt="no" errormessage="Error setting Affinity DiscountXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(affinitydiscountxml, <QuoteInfo>
<com.safeco_AffinityGroupCd><=this.getvariable(affinitydiscount)></com.safeco_AffinityGroupCd>
</QuoteInfo>
)>]]></functionstep>
			</condition>
			<condition name="PriorCarrier" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="">
				<condition name="PriorCarrier" expression="{&lt;=this.getvariable(coverage_priorcarrier)&gt; EQUAL Safeco}" appliesto="">
					<condition name="Check MultiPolicy" expression="{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ME}" appliesto="" id="474934848">
						<condition name="State NY" expression="{1 EQUAL 1}" appliesto="" id="905787500">
							<functionstep name="SetMultipolicyNYxml" id="1162235191" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd><=this.getvariable(multipolicyoption)></LOBCd>
<=this.getvariable(policyxml)>
</OtherOrPriorPolicy>)> 




]]></functionstep>
						</condition>
						<elsecondition id="353897124">
							<functionstep name="SetMultipolicy" id="1209213889" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd>AUTO</LOBCd>
<=this.getvariable(policyxml)>
</OtherOrPriorPolicy>)> 




]]></functionstep>
						</elsecondition>
					</condition>
					<condition name="Check MultiPolicy-ME" expression="{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="">
						<functionstep name="SetMultipolicyMExml" id="723182290" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd><=this.getvariable(multipolicyoptionME)></LOBCd>
<=this.getvariable(policyxml)>
</OtherOrPriorPolicy>)> 
]]></functionstep>
					</condition>
					<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="CA -GA -IN -MD -NC -NH -OR -PA -VA -WA -">
						<functionstep name="SetPersPolicyGA" id="1290471985" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<LOBCd>HOME</LOBCd>
<InsurerName>Safeco</InsurerName>
<OriginalInceptionDt><=this.getvariable(inceptiondate)></OriginalInceptionDt>  
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
<LengthTimeWithPreviousInsurer>
<NumUnits>60</NumUnits>                         
<UnitMeasurementCd>Months</UnitMeasurementCd>                     
</LengthTimeWithPreviousInsurer>
<=this.getvariable(policys2)>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>
<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>,  <=this.getvariable(map_yearsatcurrent)>)></NumUnits>
</DurationPeriod>
</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
<=this.getvariable(affinitydiscountxml)>
</PersPolicy>)>]]></functionstep>
					</condition>
					<elseifcondition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}" appliesto="MS -ND -SD -">
						<functionstep name="SetPersPolicyMS" id="1487306762" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<LOBCd>HOME</LOBCd>
<InsurerName>Safeco</InsurerName>
<OriginalInceptionDt><=this.getvariable(inceptiondate)></OriginalInceptionDt>  
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
<LengthTimeWithPreviousInsurer>
<NumUnits>60</NumUnits>                         
<UnitMeasurementCd>Months</UnitMeasurementCd>                     
</LengthTimeWithPreviousInsurer>
<=this.getvariable(policys2)>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>

<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>,  <=this.getvariable(map_yearsatcurrent)>)></NumUnits>
</DurationPeriod>
<DurationPeriod>
<UnitMeasurementCd>month</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>, <=this.getvariable(map_monthsatcurrent)>)></NumUnits>
</DurationPeriod>
</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
</PersPolicy>)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="elseifcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}" appliesto="">
						<condition name="Multipolicy" expression="{{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{1 EQUAL 0}" appliesto="">
							<condition name="State MA" expression="{1 EQUAL 1}" appliesto="" id="1799467841">
								<functionstep name="SetMultipolicyMAxml" id="220713271" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(otherpolicyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd><=this.getvariable(multipolicyoption)></LOBCd>
<=this.getvariable(otherpolicyxml)>
</OtherOrPriorPolicy>)> 




]]></functionstep>
							</condition>
						</condition>
						<functionstep name="SetPersPolicyMA1" id="1862558190" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<LOBCd>HOME</LOBCd>
<InsurerName>Safeco</InsurerName>
<OriginalInceptionDt><=this.getvariable(inceptiondate)></OriginalInceptionDt>  
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
<LengthTimeWithPreviousInsurer>
<NumUnits>60</NumUnits>                         
<UnitMeasurementCd>Months</UnitMeasurementCd>                     
</LengthTimeWithPreviousInsurer>
<=this.getvariable(policys2)>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>
<=this.getvariable(otherpolicyxml)>

<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>,  <=this.getvariable(map_yearsatcurrent)>)></NumUnits>
</DurationPeriod>
<DurationPeriod>
<UnitMeasurementCd>month</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>, <=this.getvariable(map_monthsatcurrent)>)></NumUnits>
</DurationPeriod>
</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
</PersPolicy>)>]]></functionstep>
					</elseifcondition>
					<elsecondition>
						<functionstep name="SetPersPolicyAR" id="409811973" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<LOBCd>HOME</LOBCd>
<InsurerName>Safeco</InsurerName>
<OriginalInceptionDt><=this.getvariable(inceptiondate)></OriginalInceptionDt>  
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
<LengthTimeWithPreviousInsurer>
<NumUnits>60</NumUnits>                         
<UnitMeasurementCd>Months</UnitMeasurementCd>                     
</LengthTimeWithPreviousInsurer>
<=this.getvariable(policys2)>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>
<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>,  <=this.getvariable(map_yearsatcurrent)>)></NumUnits>
</DurationPeriod>
<DurationPeriod>
<UnitMeasurementCd>month</UnitMeasurementCd>                      
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>,<=this.getvariable(map_monthsatcurrent)>)></NumUnits>                         
</DurationPeriod> 
</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
</PersPolicy>)>

]]></functionstep>
					</elsecondition>
				</condition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(coverage_priorcarrier)&gt; NOTEQUAL Safeco}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}}" appliesto="">
					<condition name="Check MultiPolicy" expression="{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}" appliesto="">
						<functionstep name="SetMultipolicyNY1" id="559082153" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd><=this.getvariable(multipolicyoption)></LOBCd>
<=this.getvariable(policyxml)>
</OtherOrPriorPolicy>)> 




]]></functionstep>
					</condition>
					<functionstep name="SetPersPolicyNY1" id="1436941562" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<InsurerName><=this.convertvalue(<=this.getvariable(coverage_priorcarrier)>, <=this.getvariable(mappriorcarrier)>)></InsurerName>
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
<CreditScoreInfo> 
<CSPolicyTypeCd>IBS</CSPolicyTypeCd> 
</CreditScoreInfo>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>
<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.getvariable(applicant_yearsatcurrent)></NumUnits>
</DurationPeriod>
</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
</PersPolicy>)>


]]></functionstep>
				</elseifcondition>
				<elsecondition>
					<condition name="State ND MS" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}}
AND
{&lt;=this.getvariable(umbrellapolicyno)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="SetUmberellaPolicy" id="496658235" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(upolicyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<PolicyNumber><=this.getvariable(umbrellapolicyno)></PolicyNumber>
<InsurerName>Safeco</InsurerName>
<LOBCd>UMBRL</LOBCd>
</OtherOrPriorPolicy>)>]]></functionstep>
					</condition>
					<condition name="Check MultiPolicy" expression="{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ME}" appliesto="" id="550100655">
						<functionstep name="SetMultipolicyNY2" id="843504270" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd><=this.getvariable(multipolicyoption)></LOBCd>
<=this.getvariable(policyxml)>
</OtherOrPriorPolicy>)> 




]]></functionstep>
					</condition>
					<condition name="Check MultiPolicy-ME" expression="{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="">
						<functionstep name="SetMultipolicyME" id="280854636" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd><=this.getvariable(multipolicyoptionME)></LOBCd>
<=this.getvariable(policyxml)>
</OtherOrPriorPolicy>)> 
]]></functionstep>
					</condition>
					<condition name="MultiPolicy" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
AND
{{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}}
AND
{&lt;=this.getvariable(umbrellapolicyno)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="CA -" id="1008361863">
						<functionstep name="SetUmberellaPolicyCA" id="448494640" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(umbrellapolicyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd>UMBRL</LOBCd>
<PolicyNumber><=this.getvariable(umbrellapolicyno)></PolicyNumber>
</OtherOrPriorPolicy>)>]]></functionstep>
					</condition>
					<condition name="Check for No prior insurance" expression="{&lt;=this.getvariable(coverage_priorcarrier)&gt; EQUAL No Prior Insurance}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MS}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ND}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MA}}" appliesto="">
						<functionstep name="SetPersPolicyVA1" id="977906680" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<InsurerName>No Previous Property Insurance</InsurerName>
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>
<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>, <=this.getvariable(map_yearsatcurrent)>)></NumUnits>
</DurationPeriod>
</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
<=this.getvariable(affinitydiscountxml)>
</PersPolicy>)>

]]></functionstep>
					</condition>
					<elseifcondition name="Check for No prior insurance MS" expression="{&lt;=this.getvariable(coverage_priorcarrier)&gt; EQUAL No Prior Insurance}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="MS -ND -">
						<functionstep name="SetPersPolicyMS1" id="475503337" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<InsurerName>No Previous Property Insurance</InsurerName>
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>
<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>, <=this.getvariable(map_yearsatcurrent)>)></NumUnits>
</DurationPeriod>
<DurationPeriod>
<UnitMeasurementCd>month</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>, <=this.getvariable(map_monthsatcurrent)>)></NumUnits>
</DurationPeriod>

</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
</PersPolicy>)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Check for No prior insurance MS" expression="{&lt;=this.getvariable(coverage_priorcarrier)&gt; NOTEQUAL No Prior Insurance}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="MS -ND -">
						<functionstep name="SetPersPolicyMS2" id="386163042" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<InsurerName><=this.convertvalue(<=this.getvariable(coverage_priorcarrier)>, <=this.getvariable(mappriorcarrier)>)></InsurerName>
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
<CreditScoreInfo> 
<CSPolicyTypeCd>IBS</CSPolicyTypeCd> 
</CreditScoreInfo>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>
<=this.getvariable(upolicyxml)>
<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>, <=this.getvariable(map_yearsatcurrent)>)></NumUnits>
</DurationPeriod>
<DurationPeriod>
<UnitMeasurementCd>month</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>, <=this.getvariable(map_monthsatcurrent)>)></NumUnits>
</DurationPeriod>

</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
</PersPolicy>)>]]></functionstep>
					</elseifcondition>
					<elsecondition>
						<functionstep name="SetPersPolicyOR1" id="882097062" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<InsurerName><=this.convertvalue(<=this.getvariable(coverage_priorcarrier)>, <=this.getvariable(mappriorcarrier)>)></InsurerName>
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
<CreditScoreInfo> 
<CSPolicyTypeCd>IBS</CSPolicyTypeCd> 
</CreditScoreInfo>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>
<=this.getvariable(umbrellapolicyxml)>
<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>, <=this.getvariable(map_yearsatcurrent)>)></NumUnits>
</DurationPeriod>
</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
<=this.getvariable(affinitydiscountxml)>
</PersPolicy>)>]]></functionstep>
					</elsecondition>
				</elsecondition>
			</condition>
			<elsecondition>
				<condition name="Check MultiPolicy" expression="{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}" appliesto="" id="1126188370">
					<functionstep name="SetMultipolicyNY21" id="2011604980" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd><=this.getvariable(multipolicyoption)></LOBCd>
<=this.getvariable(policyxml)>
</OtherOrPriorPolicy>)> 




]]></functionstep>
				</condition>
				<functionstep name="SetPersPolicyAL" id="967212865" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<InsurerName><=this.convertvalue(<=this.getvariable(coverage_priorcarrier)>, <=this.getvariable(mappriorcarrier)>)></InsurerName>
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>
<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.convertvalue(<=this.getvariable(applicant_yearsatcurrent)>, <=this.getvariable(map_yearsatcurrent)>)></NumUnits>
</DurationPeriod>
</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
</PersPolicy>)>
]]></functionstep>
			</elsecondition>
		</condition>
		<elsecondition>
			<condition name="Check MultiPolicy" expression="{&lt;=this.getvariable(coverage_multipolicy)&gt; EQUAL Yes}
OR
{&lt;=this.getvariable(coverage_package)&gt; EQUAL Yes}" appliesto="">
				<functionstep name="SetMultipolicyNY212" id="1926153701" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(policyxml,<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd><=this.getvariable(multipolicyoption)></LOBCd>
<=this.getvariable(policyxml)>
</OtherOrPriorPolicy>)> 




]]></functionstep>
			</condition>
			<functionstep name="SetPersPolicy" id="1567813721" prompt="no" errormessage="Error setting PersPolicyXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<CreditScoreInfo>
<CSPolicyTypeCd>IBS</CSPolicyTypeCd>
</CreditScoreInfo>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<InsurerName><=this.convertvalue(<=this.getvariable(coverage_priorcarrier)>, <=this.getvariable(mappriorcarrier)>)></InsurerName>
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
</OtherOrPriorPolicy>
<=this.getvariable(policyxml)>
<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.getvariable(applicant_yearsatcurrent)></NumUnits>
</DurationPeriod>
</LengthTimeCurrentAddr>
</PersApplicationInfo>
<=this.getvariable(lossxml)>
<=this.getvariable(qsinfo)>
</PersPolicy>)>]]></functionstep>
		</elsecondition>
	</condition>
</inlinefunction>
<condition name="ADDITIONAL INTERESTS" expression="{1 EQUAL 1}" appliesto="">
	<condition name="Mortgagee Validations" expression="{1 EQUAL 1}" appliesto="">
		<condition name="Address list1" expression="{&lt;=this.getvariable(applicantaddresslist1)&gt; NOTEQUAL None}" appliesto="">
			<functionstep name="Addresslist1details" id="1829001425" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(list1buffer, <=this.getvariable(applicantaddresslist1)>)>

<=this.setvariable(name1, <=this.splitindexat(<=this.getvariable(list1buffer)>, \^,0)>)>

<=this.setvariable(address1, <=this.splitindexat(<=this.getvariable(list1buffer)>, \^,1)>)>

<=this.setvariable(city1, <=this.splitindexat(<=this.getvariable(list1buffer)>, \^,2)>)>

<=this.setvariable(statecode1, <=this.splitindexat(<=this.getvariable(list1buffer)>, \^,3)>)>

<=this.setvariable(zipcode1, <=this.splitindexat(<=this.getvariable(list1buffer)>, \^,4)>)>]]></functionstep>
		</condition>
		<condition name="Address list2" expression="{&lt;=this.getvariable(applicantaddresslist2)&gt; NOTEQUAL None}" appliesto="" id="874143785">
			<functionstep name="Addresslist2details" id="2045382622" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(list2buffer, <=this.getvariable(applicantaddresslist2)>)>

<=this.setvariable(name2, <=this.splitindexat(<=this.getvariable(list2buffer)>, \^,0)>)>

<=this.setvariable(address2, <=this.splitindexat(<=this.getvariable(list2buffer)>, \^,1)>)>

<=this.setvariable(city2, <=this.splitindexat(<=this.getvariable(list2buffer)>, \^,2)>)>

<=this.setvariable(statecode2, <=this.splitindexat(<=this.getvariable(list2buffer)>, \^,3)>)>

<=this.setvariable(zipcode2, <=this.splitindexat(<=this.getvariable(list2buffer)>, \^,4)>)>]]></functionstep>
		</condition>
		<condition name="Address list3" expression="{&lt;=this.getvariable(applicantaddresslist3)&gt; NOTEQUAL None}" appliesto="" id="827130442">
			<functionstep name="Addresslist3details" id="743694850" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(list3buffer, <=this.getvariable(applicantaddresslist3)>)>

<=this.setvariable(name3, <=this.splitindexat(<=this.getvariable(list3buffer)>, \^,0)>)>

<=this.setvariable(address3, <=this.splitindexat(<=this.getvariable(list3buffer)>, \^,1)>)>

<=this.setvariable(city3, <=this.splitindexat(<=this.getvariable(list3buffer)>, \^,2)>)>

<=this.setvariable(statecode3, <=this.splitindexat(<=this.getvariable(list3buffer)>, \^,3)>)>

<=this.setvariable(zipcode3, <=this.splitindexat(<=this.getvariable(list3buffer)>, \^,4)>)>]]></functionstep>
		</condition>
	</condition>
	<condition name="FirstMortgagee" expression="{&lt;=this.getvariable(dwellinginfo_firstmortgagee)&gt; NOTEQUAL Yes}
AND
{&lt;=this.getvariable(dwellinginfo_secondmortgagee)&gt; NOTEQUAL Yes}
AND
{&lt;=this.getvariable(dwellinginfo_thirdmortgagee)&gt; NOTEQUAL Yes}
AND
{&lt;=this.getvariable(dwellinginfo_equitylineofcredit)&gt; NOTEQUAL Yes}
AND
{&lt;=this.getvariable(dwellinginfo_cosigner)&gt; NOTEQUAL Yes}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="">
		<functionstep name="SetOwnedXML" id="1759730392" prompt="no" errormessage="Error setting MortgageeXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ownedxml, 
<AdditionalInterest>
<AdditionalInterestInfo>
<NatureInterestCd>OWNED</NatureInterestCd></AdditionalInterestInfo>
</AdditionalInterest>
)>
]]></functionstep>
	</condition>
	<condition name="FirstMortgagee" expression="{&lt;=this.getvariable(dwellinginfo_firstmortgagee)&gt; NOTEQUAL Yes}
AND
{&lt;=this.getvariable(dwellinginfo_secondmortgagee)&gt; NOTEQUAL Yes}
AND
{&lt;=this.getvariable(dwellinginfo_thirdmortgagee)&gt; NOTEQUAL Yes}
AND
{&lt;=this.getvariable(dwellinginfo_equitylineofcredit)&gt; NOTEQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}" appliesto="">
		<functionstep name="SetOwnedXML-SD" id="1224133666" prompt="no" errormessage="Error setting MortgageeXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ownedxml, 
<AdditionalInterest>
<AdditionalInterestInfo>
<NatureInterestCd>OWNED</NatureInterestCd>     </AdditionalInterestInfo>
</AdditionalInterest>
)>
]]></functionstep>
	</condition>
	<condition name="FirstMortgagee" expression="{&lt;=this.getvariable(dwellinginfo_firstmortgagee)&gt; EQUAL Yes}" appliesto="">
		<condition name="Check Address" expression="{&lt;=this.getvariable(address1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<functionstep name="SetFirstMortgageeXML1" id="1564526821" prompt="no" errormessage="Error setting MortgageeXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(firstmortxml, <AdditionalInterest>
<AdditionalInterestInfo>
<NatureInterestCd>MORTG</NatureInterestCd>
<InterestRank>1</InterestRank>
<AccountNumberId></AccountNumberId>
</AdditionalInterestInfo>
<GeneralPartyInfo>
<NameInfo>
<CommlName>
<CommercialName><=this.getvariable(name1)></CommercialName>
</CommlName>
</NameInfo>
<Addr>
<Addr1><=this.getvariable(address1)></Addr1>
<Addr2 />
<City><=this.getvariable(city1)></City>
<StateProvCd><=this.getvariable(statecode1)></StateProvCd>
<PostalCode><=this.getvariable(zipcode1)></PostalCode>
</Addr>
</GeneralPartyInfo>
</AdditionalInterest>
)>]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetFirstMortgageeXML" id="418153633" prompt="no" errormessage="Error setting MortgageeXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(firstmortxml, <AdditionalInterest>
<AdditionalInterestInfo>
<NatureInterestCd>MORTSR</NatureInterestCd>
<InterestRank>1</InterestRank>
</AdditionalInterestInfo>
<GeneralPartyInfo>
<NameInfo>
<CommlName>
<CommercialName>1ST MORTGAGEE</CommercialName>
</CommlName>
</NameInfo>
</GeneralPartyInfo>
</AdditionalInterest>
)>
]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="SecondMortgagee" expression="{&lt;=this.getvariable(dwellinginfo_secondmortgagee)&gt; EQUAL Yes}" appliesto="" id="952323051">
		<condition name="Check Address" expression="{&lt;=this.getvariable(address2)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<functionstep name="SetSecondMortgageeXML1" id="83826237" prompt="no" errormessage="Error setting MortgageeXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(secondmortxml, <AdditionalInterest>
<AdditionalInterestInfo>
<NatureInterestCd>MORTG</NatureInterestCd>
<InterestRank>2</InterestRank>
<AccountNumberId></AccountNumberId>
</AdditionalInterestInfo>
<GeneralPartyInfo>
<NameInfo>
<CommlName>
<CommercialName><=this.getvariable(name2)></CommercialName>
</CommlName>
</NameInfo>
<Addr>
<Addr1><=this.getvariable(address2)></Addr1>
<Addr2 />
<City><=this.getvariable(city2)></City>
<StateProvCd><=this.getvariable(statecode2)></StateProvCd>
<PostalCode><=this.getvariable(zipcode2)></PostalCode>
</Addr>
</GeneralPartyInfo>
</AdditionalInterest>
)>]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetSecondMortgageeXML" id="1270701059" prompt="no" errormessage="Error setting MortgageeXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(secondmortxml, <AdditionalInterest>
<AdditionalInterestInfo>
<NatureInterestCd>MORTG</NatureInterestCd>
<InterestRank>2</InterestRank>
</AdditionalInterestInfo>
<GeneralPartyInfo>
<NameInfo>
<CommlName>
<CommercialName>2ND MORTGAGEE</CommercialName>
</CommlName>
</NameInfo>
</GeneralPartyInfo>
</AdditionalInterest>
)>
]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="ThirdMortgagee" expression="{&lt;=this.getvariable(dwellinginfo_thirdmortgagee)&gt; EQUAL Yes}" appliesto="" id="891321192">
		<condition name="Check Address" expression="{&lt;=this.getvariable(address3)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<functionstep name="SetThirdMortgageeXML1" id="1555580516" prompt="no" errormessage="Error setting MortgageeXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(thirdmortxml, <AdditionalInterest>
<AdditionalInterestInfo>
<NatureInterestCd>MORTG</NatureInterestCd>
<InterestRank>3</InterestRank>
<AccountNumberId></AccountNumberId>
</AdditionalInterestInfo>
<GeneralPartyInfo>
<NameInfo>
<CommlName>
<CommercialName><=this.getvariable(name3)></CommercialName>
</CommlName>
</NameInfo>
<Addr>
<Addr1><=this.getvariable(address3)></Addr1>
<Addr2 />
<City><=this.getvariable(city3)></City>
<StateProvCd><=this.getvariable(statecode3)></StateProvCd>
<PostalCode><=this.getvariable(zipcode3)></PostalCode>
</Addr>
</GeneralPartyInfo>
</AdditionalInterest>
)>]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetThirdMortgageeXML" id="729901493" prompt="no" errormessage="Error setting MortgageeXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(thirdmortxml, <AdditionalInterest>
<AdditionalInterestInfo>
<NatureInterestCd>MORTG</NatureInterestCd>
<InterestRank>3</InterestRank>
</AdditionalInterestInfo>
<GeneralPartyInfo>
<NameInfo>
<CommlName>
<CommercialName>3RD MORTGAGEE</CommercialName>
</CommlName>
</NameInfo>
</GeneralPartyInfo>
</AdditionalInterest>
)>
]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="EquityLineOfCredit" expression="{&lt;=this.getvariable(dwellinginfo_equitylineofcredit)&gt; EQUAL Yes}" appliesto="" id="739060598">
		<functionstep name="SetEquityXML" id="2099481026" prompt="no" errormessage="Error setting EquityXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(equityxml, <AdditionalInterest>  <AdditionalInterestInfo>
<NatureInterestCd>com.safeco_HomeEquityLOC</NatureInterestCd>                   </AdditionalInterestInfo>
<GeneralPartyInfo>
<NameInfo>
<CommlName>
<CommercialName>EQUITY</CommercialName>
</CommlName>
</NameInfo>
</GeneralPartyInfo>
</AdditionalInterest>
)>]]></functionstep>
	</condition>
	<condition name="CoSigner" expression="{&lt;=this.getvariable(dwellinginfo_cosigner)&gt; EQUAL Yes}" appliesto="" id="684576077">
		<functionstep name="SetCoSignerXML" id="1306704527" prompt="no" errormessage="Error setting CoSignerXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(cosignerxml, <AdditionalInterest>                 <AdditionalInterestInfo>
<NatureInterestCd>com.safeco_CosignerYN</NatureInterestCd>               </AdditionalInterestInfo>
<GeneralPartyInfo>
<NameInfo>
<CommlName>
<CommercialName>CO-SIGNER</CommercialName>
</CommlName>
</NameInfo>
</GeneralPartyInfo>
</AdditionalInterest>
)>]]></functionstep>
	</condition>
	<condition name="State is VT" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}" appliesto="CT -GA -IN -MD -NC -NH -OR -PA -VA -WA -">
		<loop name="InterestLoop" operator="equallesser" start="1" increment="1" count="&lt;=this.getvariable(dwellinginfo_numberofotherinterests)&gt;">
			<functionstep name="SetAdditionalInterest" id="1042392813" prompt="no" errormessage="Error setting AdditionalInterest. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(addinterestxml, <=this.getvariable(addinterestxml)>
<AdditionalInterest>
<AdditionalInterestInfo>
<NatureInterestCd>OT</NatureInterestCd>
<com.safeco_Description>Other Additional Interest</com.safeco_Description>
<com.safeco_CoverageSection>1</com.safeco_CoverageSection>
</AdditionalInterestInfo>
<GeneralPartyInfo>
<NameInfo>
<CommlName>
<CommercialName>Other Additional Interest</CommercialName>
</CommlName>
</NameInfo>
</GeneralPartyInfo>
</AdditionalInterest>)>]]></functionstep>
		</loop>
	</condition>
	<condition name="CoSigner" expression="{&lt;=this.getvariable(dwellinginfo_cosigner)&gt; NOTEQUAL Yes}
AND
{1 EQUAL 0}" appliesto="">
		<functionstep name="SetCoSignerXMLAsNo" id="1074637514" prompt="no" errormessage="Error setting CoSignerXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(cosignerxml, <AdditionalInterest>                 <AdditionalInterestInfo>
<NatureInterestCd><com.safeco_CosignerYN>N</com.safeco_CosignerYN></NatureInterestCd>               
</AdditionalInterestInfo>
<GeneralPartyInfo>
<NameInfo>
<CommlName>
<CommercialName>CO-SIGNER</CommercialName>
</CommlName>
</NameInfo>
</GeneralPartyInfo>
</AdditionalInterest>
)>]]></functionstep>
	</condition>
</condition>
<condition name="LOCATION" expression="{1 EQUAL 1}" appliesto="">
	<condition name="State MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}" appliesto="">
		<functionstep name="Extractcountycode" id="1933860894" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(firedistcodes, carriers/Safecoxml/Home/missouri/Firedistrictcode.csv)>

<=this.setvariable(buffer, <=this.getexternalresource(<=this.getvariable(firedistcodes)>)>)>

<=this.setvariable(code, <=java.callstringmethod(toLowerCase, <=this.getvariable(buffer)>)>)>
]]></functionstep>
		<condition name="CheckCounty" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.getvariable(code)&gt;, &lt;=java.callstringmethod(toLowerCase, &lt;=this.getvariable(applicant_county)&gt;)&gt;)&gt; NOTEQUAL -1}" appliesto="">
			<functionstep name="SetCounty" id="733902746" prompt="no" errormessage="Error setting county.Plaese contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(county, <=this.splitindexat(<=this.getvariable(code)>, <=java.callstringmethod(toLowerCase, <=this.getvariable(applicant_county)>)>,1)>)>

<=this.setvariable(county, <=this.substringregex(<=this.getvariable(county)>, \", \,)>)>]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetCountyBlank" id="167061247" prompt="no" errormessage="Error setting county.Plaese contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(county, <=java.callstringmethod(anonymous, VK_BLANK)>)>]]></functionstep>
		</elsecondition>
		<functionstep name="SetLocationxmlMO" id="361610835" prompt="no" errormessage="Error setting LocationXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(locationxml, <Location id="001">
<Addr>
<Addr1><=this.getvariable(dwellingaddress1)></Addr1>
<City><=this.getvariable(dwellingcity)></City>
<StateProvCd><=this.getvariable(dwellingstatecode)></StateProvCd>
<PostalCode><=this.getvariable(dwellingzip5)></PostalCode>
</Addr>
<=this.getvariable(ownedxml)>
<=this.getvariable(firstmortxml)>
<=this.getvariable(secondmortxml)>
<=this.getvariable(thirdmortxml)>
<=this.getvariable(equityxml)>
<=this.getvariable(cosignerxml)>
<FireDistrictCd><=this.getvariable(county)></FireDistrictCd>
</Location>)>
]]></functionstep>
	</condition>
	<elsecondition>
		<condition name="State is CO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="CT -GA -IN -KY -MD -NC -NH -OH -OR -PA -SD -TN -VA -WA -">
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="GA -IN -MD -MS -NC -ND -NH -OR -PA -SD -VA -WA -">
				<condition name="If address line2 present" expression="{&lt;=this.getvariable(dwellinginfo_addr2)&gt; NOTEQUAL  &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="Setaddressline2" id="1579761683" prompt="no" errormessage="Error setting LocationXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(altdwellingaddressline2xml, <Addr2><=this.getvariable(dwellinginfo_addr2)></Addr2>)>]]></functionstep>
				</condition>
				<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}" appliesto="MD -NC -">
					<functionstep name="Setfiredist" id="1727192491" prompt="no" errormessage="Error setting LocationXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(firedistxmlNC, <FireDistrict><=this.getvariable(dwellingcity)></FireDistrict>)>]]></functionstep>
				</condition>
			</condition>
			<condition name="Alternate Address Present" expression="{&lt;=this.getvariable(dwellinginfo_address1)&gt; NOTEQUAL  &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
				<functionstep name="setLocationXML-CO" id="1937768577" prompt="no" errormessage="Error setting LocationXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(locationxmlco,<Addr>
<Addr1><=this.getvariable(dwellingaddress1)></Addr1>
<=this.getvariable(altdwellingaddressline2xml)>
<City><=this.getvariable(dwellingcity)></City>
<StateProvCd><=this.getvariable(dwellingstatecode)></StateProvCd>
<PostalCode><=this.getvariable(dwellingzip5)></PostalCode>
</Addr>)>

]]></functionstep>
			</condition>
			<elsecondition>
				<condition name="newcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
					<functionstep name="setLocationXML-TX" id="1000695951" prompt="no" errormessage="Error setting LocationXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(locationxmlco,<=this.getvariable(addressxml)>)>


]]></functionstep>
				</condition>
				<elsecondition>
					<functionstep name="setLocationXML-CO1" id="972796068" prompt="no" errormessage="Error setting LocationXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(locationxmlco, )>

]]></functionstep>
				</elsecondition>
			</elsecondition>
			<functionstep name="SetLocationxml-CO" id="409862777" prompt="no" errormessage="Error setting LocationXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(locationxml, <Location id="001">
<=this.getvariable(locationxmlco)>
<=this.getvariable(firedistxmlNC)>
<=this.getvariable(ownedxml)>
<=this.getvariable(firstmortxml)>
<=this.getvariable(secondmortxml)>
<=this.getvariable(thirdmortxml)>
<=this.getvariable(equityxml)>
<=this.getvariable(cosignerxml)>
<=this.getvariable(addinterestxml)>
</Location>)>]]></functionstep>
			<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
				<condition name="State TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{1 EQUAL 0}" appliesto="">
					<functionstep name="SetLocationxml-CO3" id="1845082109" prompt="no" errormessage="Error setting LocationXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(locationxml, <Location id="001">
<=this.getvariable(locationxmlco)>
<=this.getvariable(locationxmlcop)>
<=this.getvariable(firedistxmlNC)>
<=this.getvariable(ownedxml)>
<=this.getvariable(firstmortxml)>
<=this.getvariable(secondmortxml)>
<=this.getvariable(thirdmortxml)>
<=this.getvariable(equityxml)>
<=this.getvariable(cosignerxml)>
<=this.getvariable(addinterestxml)>
</Location>)>
]]></functionstep>
				</condition>
			</condition>
		</condition>
		<condition name="State NOT CO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AZ}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OH}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL KY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL GA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL PA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NC}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NH}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL VA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MS}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ND}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL SD}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ME}" appliesto="GA -IN -KY -MD -NC -ND -NH -OH -OR -PA -SD -TN -VA -WA -">
			<functionstep name="SetLocationxml" id="1450828394" prompt="no" errormessage="Error setting LocationXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(locationxml, <Location id="001">
<Addr>
<Addr1><=this.getvariable(dwellingaddress1)></Addr1>
<City><=this.getvariable(dwellingcity)></City>
<StateProvCd><=this.getvariable(dwellingstatecode)></StateProvCd>
<PostalCode><=this.getvariable(dwellingzip5)></PostalCode>
</Addr>
<=this.getvariable(ownedxml)>
<=this.getvariable(firstmortxml)>
<=this.getvariable(secondmortxml)>
<=this.getvariable(thirdmortxml)>
<=this.getvariable(equityxml)>
<=this.getvariable(cosignerxml)>
<=this.getvariable(addinterestxml)>
</Location>)>]]></functionstep>
		</condition>
	</elsecondition>
</condition>
<condition name="ENDORSEMENTS" expression="{1 EQUAL 1}" appliesto="">
	<functionstep name="InitialiseEndorsementVariables" id="480577551" prompt="no" errormessage="Error initialising Endorsement Variables. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(identitytheftxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(sppxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(waterbackupxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(lossassessxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(ordinancexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(optxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(ertqkxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(moldxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(coinsxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(businessxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(PersonalInjuryxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(minexml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(buildingaltxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(equipbreakdownxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(ertqkxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(qualitypackagecondo, ]]></functionstep>
	<condition name="Policy Type Is HO3" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
		<condition name="States Not" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL SC}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NE}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OH}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL GA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL PA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NC}" appliesto="AL -CA -CT -GA -MN -NC -PA -SC -TX -">
			<functionstep name="SetEquipmentBreakdownXML" id="2019571244" prompt="no" errormessage="Error setting Equipment Breakdown. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(equipbreakdownxml, <Coverage>
<CoverageCd>EQPBK</CoverageCd> 
<Option>
<OptionCd><=this.getvariable(equipbreakdown)></OptionCd> 
</Option>
</Coverage>)>]]></functionstep>
		</condition>
	</condition>
	<condition name="State IL" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}" appliesto="CT -GA -IN -MD -NC -NH -OH -OR -PA -TN -VA -WA -">
		<condition name="CheckBuildingAdditionalAlteration" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.getvariable(endorsements_buildingaddalt)&gt; EQUAL Yes}" appliesto="">
			<functionstep name="SetBuildingAdditional_IL" id="1040662108" prompt="no" errormessage="Error setting Building Additional Endorsement. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(buildingaltxml, <Coverage>
<CoverageCd>AALMT</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.getvariable(endorsements_buildingaddaltamount)></Amt></FormatCurrencyAmt>
</Limit>
</Coverage>)>

]]></functionstep>
		</condition>
	</condition>
	<condition name="CheckBuildingAdditionalAlteration" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.getvariable(endorsements_buildingaddalt)&gt; EQUAL Yes}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}}" appliesto="">
		<functionstep name="SetCoverageLXMLIL" id="736848883" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coveragelxml,<Coverage>
<CoverageCd>AALMT</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(endorsements_buildingaddaltamount)></FormatInteger>
</Limit>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="CheckBuildingAdditionalAlteration" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.getvariable(endorsements_buildingaddalt)&gt; EQUAL Yes}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}}" appliesto="" id="695447102">
		<condition name="For Texas" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
			<functionstep name="SetCoverageLXMLTX_123" id="1113021408" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coveragelxml,<Coverage>
<CoverageCd>AALMT</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(endorsements_buildingaddaltamount)></FormatInteger>
</Limit>
</Coverage>)>
]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetCoverageLXMLTX" id="1860133509" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coveragelxml,<Coverage>
<CoverageCd>AALMT</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
</Coverage>)>
]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="OptimumCoverage" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUAL 5000}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL VT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AZ}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ID}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NM}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NV}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OK}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OH}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL KY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NC}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NH}" appliesto="IN -NC -NH -OR -WA -">
		<functionstep name="SetOptimumCoverageXML" id="1028210947" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optxml, <Coverage>
<CoverageCd>SOPKG</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>
)>
]]></functionstep>
	</condition>
	<condition name="OptimumCoverage" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}}" appliesto="AL -AZ -CA -CO -GA -ID -IL -IN -KY -LA -MD -MN -MO -NH -OK -OR -PA -UT -VA -VT -WA -WI -" id="936754450">
		<condition name="newcondition" expression="{&lt;=this.getvariable(qualitypackagecondo)&gt; EQUAL Yes}" appliesto="">
			<functionstep name="SetOptimumCoverageXMLAL" id="1495873195" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optxml, <Coverage>
<CoverageCd>SOPKG</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>
)>
]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetOptimumCoverageXMLALNo" id="1747095133" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optxml, )>
]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="OptimumCoverage" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_lossassessment_amount)&gt;,&lt;=this.getvariable(map_lossassessmentamountho6)&gt;)&gt;
 EQUALGREATER 10000}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}" appliesto="MS -">
		<functionstep name="SetOptimumCoverageXMLMS" id="996049579" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optxml, <Coverage>
<CoverageCd>SOPKG</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>
)>
]]></functionstep>
	</condition>
	<condition name="OptimumCoverage" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="TX -" id="71426910">
		<condition name="Loss Assessment Check" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="">
			<condition name="newcondition" expression="{&lt;=this.getvariable(optqualitypackage)&gt; EQUAL optpackage}" appliesto="">
				<functionstep name="SetOptimumCoverageXMLTX" id="1325802086" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optxml, <Coverage>
<CoverageCd>SOPKG</CoverageCd>
<Option>
<OptionCd><=this.getvariable(optpackage)></OptionCd>
</Option>
</Coverage>
)>
]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="SetOptimumCoverageXMLTXNo" id="179517451" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optxml,)>
]]></functionstep>
			</elsecondition>
		</condition>
	</condition>
	<condition name="OptimumCoverage" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}" appliesto="">
		<functionstep name="SetOptimumCoverageXMLMA" id="627817293" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optxml, <Coverage>
<CoverageCd>SOPKG</CoverageCd>
<Option>
<OptionCd><=this.getvariable(optqualitypackage)></OptionCd>
</Option>
</Coverage>
)>

]]></functionstep>
	</condition>
	<condition name="CARE-1876" expression="{1 EQUAL 1}" appliesto="">
		<condition name="OptimumCoverage" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
AND
{&lt;=this.getvariable(optqualitypackage)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1059671325">
			<functionstep name="SetOptimumCoverageXML-PA" id="2019511840" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(optxml, <Coverage>
<CoverageCd>SOPKG</CoverageCd>
<Option>
<OptionCd><=this.getvariable(optqualitypackage)></OptionCd>
</Option>
</Coverage>)>

]]></functionstep>
		</condition>
	</condition>
	<condition name="Business on Premises" expression="{&lt;=this.getvariable(dwellinginfo_businessonpremises)&gt; EQUAL Yes}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}}" appliesto="AL -NM -WY -" id="1343016686">
		<functionstep name="SetBusinessXML_NM" id="1645847149" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(businessxml, <Coverage>
<CoverageCd>BUS</CoverageCd>
<Option>
<OptionCd><=this.convertvalue(<=this.getvariable(endorsements_businessclass)>, <=this.getvariable(mapbusinessclass)>)></OptionCd>
</Option>
</Coverage>
)>
]]></functionstep>
	</condition>
	<condition name="Business on Premises" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MS -ND -SD -">
		<functionstep name="SetBusinessXML_MS" id="612075998" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(businessxml,<com.safeco_BusinessOnPremisesCategory><=this.convertvalue(<=this.getvariable(endorsements_businessclass)>, <=this.getvariable(mapbusinessclass)>)></com.safeco_BusinessOnPremisesCategory>)>
]]></functionstep>
	</condition>
	<condition name="Identity Theft" expression="{&lt;=this.getvariable(endorsements_identitytheft)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO4}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO6}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
		<functionstep name="SetIdentityTheftXMLTX" id="2084057325" prompt="no" errormessage="Error setting IdentityTheftXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(identitytheftxml, <Coverage>
<CoverageCd>FRAUD</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>
)>]]></functionstep>
	</condition>
	<condition name="Identity Theft" expression="{&lt;=this.getvariable(endorsements_identitytheft)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}" appliesto="" id="397976795">
		<functionstep name="SetIdentityTheftXML" id="573777189" prompt="no" errormessage="Error setting IdentityTheftXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(identitytheftxml, <Coverage>
<CoverageCd>FRAUD</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>
)>]]></functionstep>
	</condition>
	<condition name="SPP" expression="{&lt;=this.getvariable(endorsements_scheduledpersonalproperty)&gt; EQUAL Yes}" appliesto="">
		<condition name="Guns not" expression="{&lt;=this.getvariable(endorsements_gunscount)&gt; NOTEQUAL 0}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL KS}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL UT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ID}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL LA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NM}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NV}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OK}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WI}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NE}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OH}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL KY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL GA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL PA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NC}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NH}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL VA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ME}" appliesto="AR -CA -CO -CT -GA -IL -IN -KS -KY -LA -MD -NC -NH -OK -OR -PA -TX -UT -VA -WA -WI -">
			<functionstep name="SetGunsXML" id="1390864673" prompt="no" errormessage="Error setting GunsXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(gunsxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>GU</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_guns_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(gunsdesc)></com.safeco_SPPDescription>
</PropertySchedule>)>]]></functionstep>
		</condition>
		<condition name="Guns" expression="{{&lt;=this.getvariable(endorsements_gunscount)&gt; NOTEQUAL 0}
OR
{&lt;=this.getvariable(endorsements_coinscount)&gt; NOTEQUAL 0}}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="AR -CA -CO -CT -GA -ID -IL -IN -KY -LA -MD -MO -NC -NH -NM -OK -OR -PA -TX -UT -VA -WA -WI -" id="1255011319">
			<condition name="Check Guns Amount" expression="{&lt;=this.getvariable(endorsements_spp_guns_amount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
				<functionstep name="SetGunsAmount" id="1919291814" prompt="no" errormessage="Error setting Guns Amount. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_spp_guns_amount, 0)>]]></functionstep>
			</condition>
			<condition name="Check Coins Amount" expression="{&lt;=this.getvariable(endorsements_spp_coins_amount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="212903251">
				<functionstep name="SetCoinsAmount" id="460172718" prompt="no" errormessage="Error setting Guns Amount. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_spp_coins_amount, 0)>]]></functionstep>
			</condition>
			<condition name="State Not TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}" appliesto="">
				<condition name="Coins" expression="{&lt;=this.getvariable(endorsements_coinscount)&gt; EQUAL 0}" appliesto="">
					<functionstep name="SetDescGuns" id="1470538601" prompt="no" errormessage="Error setting Guns description.Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(gunsdesc, Guns)>
]]></functionstep>
				</condition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(endorsements_gunscount)&gt; EQUAL 0}" appliesto="">
					<functionstep name="SetDescCoins" id="2076966392" prompt="no" errormessage="Error setting Guns description.Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(gunsdesc, Coins)>
]]></functionstep>
				</elseifcondition>
				<elsecondition>
					<functionstep name="SetDescGunsCoins" id="707101606" prompt="no" errormessage="Error setting Guns and Coins description.Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(gunsdesc, Guns and Coins)>
]]></functionstep>
				</elsecondition>
			</condition>
			<functionstep name="SetGunsXMLTX" id="1520147830" prompt="no" errormessage="Error setting GunsXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(gunsxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>GU</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.addinteger(<=this.getvariable(endorsements_spp_guns_amount)>, <=this.getvariable(endorsements_spp_coins_amount)>)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(gunsdesc)></com.safeco_SPPDescription>
</PropertySchedule>)>]]></functionstep>
		</condition>
		<condition name="Guns &amp; Coin" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}" appliesto="KS -">
			<condition name="Check Guns Amount" expression="{&lt;=this.getvariable(endorsements_spp_guns_amount)&gt; NOTEQUAL 0}
AND
{&lt;=this.getvariable(endorsements_spp_guns_amount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
				<functionstep name="SetGundescKS" id="1397394227" prompt="no" errormessage="Error setting Guns Description. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(gunsdesc, Guns)>
]]></functionstep>
				<functionstep name="SetGunsXMLKS" id="1359872631" prompt="no" errormessage="Error setting GunsXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(gunsxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>GU</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_guns_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(gunsdesc)></com.safeco_SPPDescription>
</PropertySchedule>)>

]]></functionstep>
			</condition>
			<condition name="Check Coins Amount" expression="{&lt;=this.getvariable(endorsements_spp_coins_amount)&gt; NOTEQUAL 0}
AND
{&lt;=this.getvariable(endorsements_spp_coins_amount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
				<functionstep name="SetCoinsdescKS" id="476948028" prompt="no" errormessage="Error setting Coins Description. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coindesc, Coins)>
]]></functionstep>
				<functionstep name="SetCoinsXMLKS" id="207710262" prompt="no" errormessage="Error setting GunsXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coinsxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>CN</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_coins_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(coindesc)></com.safeco_SPPDescription>
</PropertySchedule>)>
]]></functionstep>
			</condition>
		</condition>
		<condition name="Jewelry" expression="{&lt;=this.getvariable(endorsements_jewelrycount)&gt; NOTEQUAL 0}" appliesto="">
			<condition name="State TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
				<functionstep name="SetJewelryXMLTX" id="1881795799" prompt="no" errormessage="Error setting JewelryXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(jewelryxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>VJ1</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_jewelry_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(jewelrydesc)></com.safeco_SPPDescription>
</PropertySchedule>)>]]></functionstep>
			</condition>
			<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
				<functionstep name="SetJewelryXMLCO" id="672286193" prompt="no" errormessage="Error setting JewelryXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(jewelryxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>VJ1</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_jewelry_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(jewelrydesc)></com.safeco_SPPDescription>
</PropertySchedule>)>]]></functionstep>
			</elseifcondition>
			<elsecondition>
				<functionstep name="SetJewelryXML" id="948996507" prompt="no" errormessage="Error setting JewelryXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(jewelryxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>JL</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_jewelry_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(jewelrydesc)></com.safeco_SPPDescription>
</PropertySchedule>)>]]></functionstep>
			</elsecondition>
		</condition>
		<condition name="Furs &amp; Music not IL" expression="{&lt;=this.getvariable(endorsements_musiccount)&gt; NOTEQUAL 0}
OR
{&lt;=this.getvariable(endorsements_furscount)&gt; NOTEQUAL 0}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}" appliesto="">
			<condition name="Check Furs Amount" expression="{&lt;=this.getvariable(endorsements_spp_furs_amount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
				<functionstep name="SetFursAmount" id="1600746665" prompt="no" errormessage="Error setting Furs Amount. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_spp_furs_amount, 0)>]]></functionstep>
			</condition>
			<condition name="Check Music Amount" expression="{&lt;=this.getvariable(endorsements_spp_music_amount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1910184941">
				<functionstep name="SetMusicAmount" id="274352131" prompt="no" errormessage="Error setting Music Amount. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_spp_music_amount, 0)>]]></functionstep>
			</condition>
			<functionstep name="SetFursXML" id="213159683" prompt="no" errormessage="Error setting FursXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(fursxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>FR</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.addinteger(<=this.getvariable(endorsements_spp_furs_amount)>, <=this.getvariable(endorsements_spp_music_amount)>)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(fursdesc)></com.safeco_SPPDescription>
</PropertySchedule>)>]]></functionstep>
		</condition>
		<condition name="Furs &amp; Music IL" expression="{&lt;=this.getvariable(endorsements_musiccount)&gt; NOTEQUAL 0}
OR
{&lt;=this.getvariable(endorsements_furscount)&gt; NOTEQUAL 0}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="" id="662270170">
			<condition name="Check Furs Amount" expression="{&lt;=this.getvariable(endorsements_spp_furs_amount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1491378196">
				<functionstep name="SetFursAmount1" id="1587486252" prompt="no" errormessage="Error setting Furs Amount. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_spp_furs_amount, 0)>
]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="SetFursXML1" id="174826337" prompt="no" errormessage="Error setting FursXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(fursxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>FR</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_furs_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(fursdesc)></com.safeco_SPPDescription>
</PropertySchedule>)>
]]></functionstep>
			</elsecondition>
			<condition name="Check Music Amount" expression="{&lt;=this.getvariable(endorsements_spp_music_amount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1000218671">
				<functionstep name="SetMusicAmount1" id="1583579333" prompt="no" errormessage="Error setting Music Amount. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements_spp_music_amount, 0)>
]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="SetMusicXML1" id="2085259645" prompt="no" errormessage="Error setting FursXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(musicxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>MB</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_music_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription>Musical Instruments</com.safeco_SPPDescription>
</PropertySchedule>)>
]]></functionstep>
			</elsecondition>
		</condition>
		<condition name="Silverware" expression="{&lt;=this.getvariable(endorsements_silverwarecount)&gt; NOTEQUAL 0}" appliesto="">
			<functionstep name="SetSilverwareXML" id="1171958842" prompt="no" errormessage="Error setting SilverwareXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(silverwarexml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>SV</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_silverware_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(silverdesc)></com.safeco_SPPDescription>
</PropertySchedule>)>]]></functionstep>
		</condition>
		<condition name="FineArts" expression="{&lt;=this.getvariable(endorsements_fineartscount)&gt; NOTEQUAL 0}" appliesto="">
			<condition name="CheckBreakage" expression="{&lt;=this.getvariable(endorsements_spp_finearts_breakage)&gt; EQUAL Yes}" appliesto="">
				<functionstep name="SetFineArtsBreakageXML" id="1427264358" prompt="no" errormessage="Error setting FineArtsBreakageXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(fineartsxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>com.safeco_FINEAB</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_finearts_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(finedesc)></com.safeco_SPPDescription>
</PropertySchedule>)>]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="SetFineArtsXML" id="441325250" prompt="no" errormessage="Error setting FineArtsXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(fineartsxml, <PropertySchedule>
<IsSummaryInd>1</IsSummaryInd>
<PropertyClassCd>FINEA</PropertyClassCd>
<Coverage>
<CoverageCd>SPP</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
<Limit>
<FormatInteger><=this.getvariable(endorsements_spp_finearts_amount)></FormatInteger>
</Limit>
</Coverage>
<com.safeco_SPPDescription><=this.getvariable(finedesc)></com.safeco_SPPDescription>
</PropertySchedule>)>]]></functionstep>
			</elsecondition>
		</condition>
		<functionstep name="SetSPPXML" id="1085274637" prompt="no" errormessage="Error setting SPPXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(sppxml, <=this.getvariable(gunsxml)>
<=this.getvariable(jewelryxml)>
<=this.getvariable(fursxml)>
<=this.getvariable(silverwarexml)>
<=this.getvariable(fineartsxml)>
<=this.getvariable(coinsxml)>
<=this.getvariable(musicxml)>)>]]></functionstep>
	</condition>
	<condition name="WaterBackup" expression="{&lt;=this.getvariable(endorsements_waterbackup)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL LA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NC}" appliesto="">
		<condition name="State is MD" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}" appliesto="">
			<functionstep name="SetWaterBackupXML-MD" id="1142338327" prompt="no" errormessage="Error setting WaterBackupXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatInteger>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_waterbackup_amount)>, <=this.getvariable(map_waterbackupamount)>)></Amt>
</FormatInteger>
</Limit>
</Coverage>)>]]></functionstep>
		</condition>
		<condition name="STATE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MA -">
			<functionstep name="SetWaterBackupXML-MA" id="2131016805" prompt="no" errormessage="Error setting WaterBackupXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_waterbackup_amount)>, <=this.getvariable(map_waterbackupamount)>)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>)>]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetWaterBackupXML" id="892655235" prompt="no" errormessage="Error setting WaterBackupXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_waterbackup_amount)>, <=this.getvariable(map_waterbackupamount)>)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>)>]]></functionstep>
		</elsecondition>
		<condition name="PolicyType-HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="MA -MD -MS -ND -NH -OR -SD -VA -WA -">
			<functionstep name="SetWaterBackupXML-MI" id="2113381404" prompt="no" errormessage="Error setting WaterBackupXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt>
<=this.convertvalue(<=this.getvariable(endorsements_waterbackup_amount)>, <=this.getvariable(map_waterbackupamountHO4)>)>
</Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>)>]]></functionstep>
		</condition>
		<condition name="PolicyType-HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}" appliesto="" id="341148433">
			<functionstep name="SetWaterBackupXML-NM" id="1575307685" prompt="no" errormessage="Error setting WaterBackupXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(endorsements_waterbackup_amount)>, <=this.getvariable(map_waterbackupamount)>)></FormatInteger>
</Limit>
</Coverage>)>

]]></functionstep>
		</condition>
		<condition name="PolicyType-HO4" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}}
OR
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}}}" appliesto="">
			<functionstep name="SetWaterBackupXML-GA" id="512738919" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(endorsements_waterbackup_amount)>, <=this.getvariable(map_waterbackupamount)>)></FormatInteger>
</Limit>

</Coverage>)>


]]></functionstep>
		</condition>
		<condition name="PolicyType-HO4" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}}}" appliesto="">
			<functionstep name="SetWaterBackupXML-CT" id="69522724" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(endorsements_waterbackup_amount)>, <=this.getvariable(map_waterbackupamountHO4)>)></FormatInteger>
</Limit>
</Coverage>)>


]]></functionstep>
		</condition>
		<condition name="PolicyType-HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="MS -ND -" id="1477800275">
			<functionstep name="SetWaterBackupXML-VT" id="1032178027" prompt="no" errormessage="Error setting WaterBackupXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt>
<=this.convertvalue(<=this.getvariable(endorsements_waterbackup_amount)>, <=this.getvariable(map_waterbackupamountHO4)>)>
</Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>)>]]></functionstep>
		</condition>
		<condition name="State KY" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="">
			<functionstep name="SetWaterBackupXML-KY" id="902824306" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(endorsements_waterbackup_amount)>, <=this.getvariable(map_waterbackupamountHO4)>)></FormatInteger>
</Limit>
</Coverage>)>
]]></functionstep>
		</condition>
	</condition>
	<condition name="WaterBackup" expression="{&lt;=this.getvariable(endorsements_waterbackup)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(waterfromsump)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO4}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO6}" appliesto="" id="1065390204">
		<functionstep name="SetWaterBackupXMLTX" id="2009084950" prompt="no" errormessage="Error setting WaterBackupXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt>
<=this.getvariable(waterfromsump)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="WaterBackup" expression="{&lt;=this.getvariable(endorsements_waterbackup)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="" id="1256619821">
		<functionstep name="SetWaterBackupXMLNC" id="76564397" prompt="no" errormessage="Error setting WaterBackupXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterbackupxml, <Coverage>
<CoverageCd>SEWER</CoverageCd>
<Limit>
<FormatInteger>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_waterbackup_amount)>, <=this.getvariable(map_waterbackupamount)>)></Amt>
</FormatInteger>
</Limit>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="Loss Assessment" expression="{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUAL 0}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
		<functionstep name="SetLossassessmentAmount" id="257204384" prompt="no" errormessage="Error setting Lossassessment amount. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt>5000</Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>
]]></functionstep>
	</condition>
	<condition name="Loss Assessment" expression="{{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUAL 0}
OR
{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}}
AND
{&lt;=this.getvariable(qualityplus)&gt; EQUAL Yes}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
		<functionstep name="SetLossassessmentQuality" id="623761368" prompt="no" errormessage="Error setting Lossassessment amount. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt>3000</Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>
]]></functionstep>
	</condition>
	<condition name="Loss Assessment" expression="{&lt;=this.getvariable(endorsements_lossassessment)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}" appliesto="">
		<condition name="Policy HO3-HO5" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}" appliesto="">
			<condition name="State CA" expression="{&lt;=this.getvariable(policy)&gt; EQUAL Quality Crest Home}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
				<functionstep name="SetLossXMLHO3CA" id="1541695036" prompt="no" errormessage="Error setting LossAssessmentXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_lossassessment_amount)>, <=this.getvariable(map_lossassessmentamountho7)>)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>
]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="SetLossXMLHO3" id="1000548169" prompt="no" errormessage="Error setting LossAssessmentXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_lossassessment_amount)>, <=this.getvariable(map_lossassessmentamountho3)>)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>]]></functionstep>
			</elsecondition>
		</condition>
		<elseifcondition name="Policy-HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="">
			<functionstep name="SetLossXMLHO4" id="1396968449" prompt="no" errormessage="Error setting LossAssessmentXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_lossassessment_amount)>, <=this.getvariable(map_lossassessmentamountho4)>)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>]]></functionstep>
		</elseifcondition>
		<elsecondition>
			<functionstep name="SetLossXML" id="1352781698" prompt="no" errormessage="Error setting LossAssessmentXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_lossassessment_amount)>, <=this.getvariable(map_lossassessmentamountho6)>)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="Loss Assessment" expression="{&lt;=this.getvariable(endorsements_lossassessment)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="1240150471">
		<condition name="Policy HO3-HO5" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}" appliesto="" id="535352302">
			<functionstep name="SetLossXMLHO3TX" id="2028567204" prompt="no" errormessage="Error setting LossAssessmentXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_lossassessment_amount)>, <=this.getvariable(map_lossassessmentamountho3)>)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>]]></functionstep>
		</condition>
		<condition name="Policy HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="" id="605749719">
			<functionstep name="SetLossXMLHO6TX" id="1212986273" prompt="no" errormessage="Error setting LossAssessmentXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_lossassessment_amount)>, <=this.getvariable(map_lossassessmentamountho6)>)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>]]></functionstep>
		</condition>
	</condition>
	<condition name="Loss Assessment" expression="{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUAL 5000}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(optqualitypackage)&gt; EQUAL No}" appliesto="" id="31651915">
		<functionstep name="SetLossassessmentAmountTX1" id="715939352" prompt="no" errormessage="Error setting Lossassessment amount. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt>10000</Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>
]]></functionstep>
	</condition>
	<condition name="Loss Assessment" expression="{&lt;=this.getvariable(endorsements_lossassessment)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUALLESSER 10000}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(qualitypackagecondo)&gt; EQUAL No}" appliesto="" id="185776902">
		<functionstep name="SetLossassessmentAmountWhenOptimumNo" id="61251477" prompt="no" errormessage="Error setting Lossassessment amount. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt>11000</Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>
]]></functionstep>
	</condition>
	<condition name="Loss Assessment" expression="{{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUAL 0}
OR
{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(endorsements_lossassessment_amount)&gt; EQUALLESSER 10000}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(qualitypackagecondo)&gt; EQUAL Yes}" appliesto="" id="633761877">
		<functionstep name="SetLossassessmentAmountWhenOptimumNo1" id="1082805900" prompt="no" errormessage="Error setting Lossassessment amount. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(lossassessxml, <Coverage>
<CoverageCd>LAC</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt>10000</Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>
)>
]]></functionstep>
	</condition>
	<condition name="Ordinance or Law" expression="{{&lt;=this.getvariable(endorsements_ordinanceorlaw)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO4}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO6}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}}
OR
{{&lt;=this.getvariable(endorsements_ordinanceorlaw)&gt; EQUAL Yes}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}}}
OR
{{&lt;=this.getvariable(coverage_dwelling)&gt; EQUALLESSER 500000}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
AND
{&lt;=this.getvariable(endorsements_ordinanceorlaw)&gt; EQUAL Yes}}" appliesto="">
		<functionstep name="SetOrdinanceXML" id="180909122" prompt="no" errormessage="Error setting OrdinanceXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ordinancexml, <Coverage>
<CoverageCd>BOLAW</CoverageCd>
<Limit>
<FormatPct><=this.convertvalue(<=this.getvariable(endorsements_ordinanceorlaw_percent)>, <=this.getvariable(map_ordinanceorlawpercent)>)></FormatPct>
</Limit>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="Ordinance or Law" expression="{&lt;=this.getvariable(endorsements_ordinanceorlaw)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO4}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
		<condition name="Policy Type Not HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO6}" appliesto="">
			<functionstep name="SetOrdinanceXML-HO4" id="7910096" prompt="no" errormessage="Error setting OrdinanceXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ordinancexml, <Coverage>
<CoverageCd>BOLAW</CoverageCd>
<Limit>
<FormatPct><=this.convertvalue(<=this.getvariable(endorsements_ordinanceorlaw_percent)>, <=this.getvariable(map_ordinanceorlawpercent)>)></FormatPct>
</Limit>
</Coverage>)>]]></functionstep>
		</condition>
		<condition name="Policy Type HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="" id="1762855735">
			<functionstep name="SetOrdinanceXMLHO6" id="1482369070" prompt="no" errormessage="Error setting OrdinanceXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ordinancexml, <Coverage>
<CoverageCd>BOLAW</CoverageCd>
<Limit>
<FormatPct><=this.convertvalue(<=this.getvariable(endorsements_ordinanceorlaw_percent)>, <=this.getvariable(map_ordinanceorlawpercentHO6)>)></FormatPct>
</Limit>
</Coverage>)>]]></functionstep>
		</condition>
	</condition>
	<condition name="State-WV" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}
AND
{&lt;=this.getvariable(endorsements_minesubsidence_wv)&gt; EQUAL Yes}" appliesto="">
		<functionstep name="SetMineSubsidence" id="221892128" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(minexml, <Coverage>
<CoverageCd>MIN</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="State-KY" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
AND
{&lt;=this.getvariable(endorsements_minesubsidence_ky)&gt; EQUAL Yes}}
AND
{&lt;=java.callstringmethod(matches, &lt;=this.getvariable(applicant_county)&gt;,  Bell|Boyd|Breathitt|Butler|Carter|Christian|Clay|Daviess|Edmonson|Elliot|Floyd|Greenup|Hancock|Harlan|Henderson|Hopkins|Jackson|Johnson|Knott|Knox|Laurel|Lawrence|Lee|Letcher|Leslie|McCreary|McLean|Martin|Morgan|Muhlenberg|Ohio|Owsley|Perry|Union|Webster|Whitley|Wolfe)&gt; EQUAL true}" appliesto="" id="1087644215">
		<functionstep name="SetMineSubsidenceKY" id="422493001" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(minexml, <Coverage>
<CoverageCd>MIN</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="State-IN" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
AND
{&lt;=this.getvariable(endorsements_minesubsidence_in)&gt; EQUAL Yes}}
AND
{&lt;=java.callstringmethod(matches, &lt;=this.getvariable(applicant_county)&gt;,Clay|Crawford|Daviess|Dubois|Fountain|Gibson|Greene|Knox|Lawrence|Martin|Monroe|Montgomery|Orange|Owen|Parke|Perry|Pike|Posey|Putnam|Spencer|Sullivan|Vanderburgh|Vermillion|Vigo|Warren|Warrick|)&gt; EQUAL true}" appliesto="" id="609280792">
		<functionstep name="SetMineSubsidenceIN" id="102015379" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(minexml, <Coverage>
<CoverageCd>MIN</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="State-IN" expression="{{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=this.getvariable(sewerend)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}}
OR
{{&lt;=this.getvariable(sewerend)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}}" appliesto="" id="2020531722">
		<functionstep name="SetSewerEndorsement" id="1681788593" prompt="no" errormessage="Error setting Sewer Endorsement XML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(sewerxml, <Coverage>
<CoverageCd>SWRLI</CoverageCd>
<Option>
<OptionCd><=this.getvariable(sewerend)></OptionCd>
</Option>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="SCC-12359" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}" appliesto="">
		<functionstep name="setserviceline" id="148736933" prompt="no" errormessage="Error setting Service Line XML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(servicexml, <Coverage>
<CoverageCd>SWRLI</CoverageCd>
<Option>
<OptionCd><=this.getvariable(serviceline)></OptionCd>
</Option>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="Check flag" expression="{&lt;=this.getvariable(flag)&gt; EQUAL 1}" appliesto="">
		<functionstep name="SetOrdinanceXMLTX" id="1069251386" prompt="no" errormessage="Error setting OrdinanceXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ordinancexml, <Coverage>
<CoverageCd>BOLAW</CoverageCd>
<Limit>
<FormatPct><=this.getvariable(endorsements_ordinanceorlaw_percent)></FormatPct>
</Limit>
</Coverage>)>]]></functionstep>
	</condition>
	<condition name="Increased mold" expression="{&lt;=this.getvariable(endorsements_increasedmold)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO4}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO6}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="1055959010">
		<functionstep name="SetIncreasedMoldXML" id="368811422" prompt="no" errormessage="Error setting OrdinanceXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(moldxml, <Coverage>
<CoverageCd>MOLD</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_increasedmold_propertydamage)>, <=this.getvariable(map_moldlimitdamage)>)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>)>

]]></functionstep>
	</condition>
	<condition name="Increased mold" expression="{&lt;=this.getvariable(endorsements_increasedmold)&gt; EQUAL Yes}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}}" appliesto="GA -NH -" id="1579433421">
		<functionstep name="SetIncreasedMoldXMLGA" id="780002933" prompt="no" errormessage="Error setting OrdinanceXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(moldxml, <Coverage>
<CoverageCd>MOLD</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.convertvalue(<=this.getvariable(endorsements_increasedmold_propertydamage)>, <=this.getvariable(map_moldlimitdamage)>)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>)>]]></functionstep>
	</condition>
	<condition name="Check Increased Mold" expression="{&lt;=this.getvariable(abc)&gt; EQUAL 1}" appliesto="" id="1775384840">
		<functionstep name="SetIncreasedMoldXMLTX" id="104427915" prompt="no" errormessage="Error setting OrdinanceXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(moldxml, <Coverage>
<CoverageCd>MOLD</CoverageCd>
<Limit>
<FormatPct><=this.getvariable(endorsements_increasedmold_propertydamage)></FormatPct>
</Limit>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="State-MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}}" appliesto="">
		<condition name="EarthQuake" expression="{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL Yes}" appliesto="">
			<functionstep name="SetEarthquakeDed" id="189898873" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ertqkxml, <Coverage>
<CoverageCd>ERQK</CoverageCd>
<Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(endorsements_earthquake_deductible)>, <=this.getvariable(map_earthquakedeductible)>)></FormatPct>
<DeductibleAppliesToCd>EQK</DeductibleAppliesToCd>
</Deductible>
</Coverage>)>


]]></functionstep>
		</condition>
	</condition>
	<condition name="State IL" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="">
		<condition name="MineSubsidence" expression="{&lt;=this.getvariable(endorsements_minesubsidence_il)&gt; EQUAL Yes}" appliesto="">
			<functionstep name="SetMineDedMT" id="960426801" prompt="no" errormessage="Error setting Earthquake deductible. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(minexml, <Coverage>
<CoverageCd>MIN</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>

]]></functionstep>
		</condition>
	</condition>
	<condition name="State CA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
		<condition name="Check EarthQuake" expression="{&lt;=this.getvariable(earthquake)&gt; EQUAL Yes}" appliesto="" id="284677098">
			<functionstep name="SetEarthquake" id="132782065" prompt="no" errormessage="Error setting gated community.Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(earthxml, <QuestionAnswer>                         
<QuestionCd>HOME06</QuestionCd>            
<YesNoCd>YES</YesNoCd>                     
</QuestionAnswer>)> 
]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetEarthquake1" id="488311327" prompt="no" errormessage="Error setting gated community.Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(earthxml, <QuestionAnswer>                         
<QuestionCd>HOME06</QuestionCd>            
<YesNoCd>NO</YesNoCd>                     
</QuestionAnswer>)> 
]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="State" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}
OR
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
AND
{&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt; GREATER 1960}}" appliesto="AR -CO -ID -IL -IN -KS -KY -LA -MO -NH -NV -OR -SC -UT -VA -WA -">
		<condition name="EarthQuake" expression="{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL Yes}" appliesto="">
			<functionstep name="SetEarthquakeDedMT" id="1046022336" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ertqkxml, <Coverage>
<CoverageCd>ERQK</CoverageCd>
<Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(endorsements_earthquake_deductible)>, <=this.getvariable(map_earthquakedeductible)>)></FormatPct>
<DeductibleAppliesToCd>EQK</DeductibleAppliesToCd>
</Deductible>
</Coverage>)>



]]></functionstep>
		</condition>
	</condition>
	<condition name="SCC-9289" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}}" appliesto="">
		<condition name="EarthQuake" expression="{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL Yes}" appliesto="" id="511082859">
			<functionstep name="SetEarthquakeDedTX" id="1948850897" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ertqkxml, <Coverage>
<CoverageCd>ERQK</CoverageCd>
<Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(endorsements_earthquake_deductible)>, <=this.getvariable(map_earthquakedeductible)>)></FormatPct>
</Deductible>
</Coverage>)>



]]></functionstep>
		</condition>
	</condition>
	<condition name="StateTX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(dwellinginfo_construction)&gt; EQUAL Brick Veneer}
AND
{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL No}
AND
{1 EQUAL 0}" appliesto="">
		<functionstep name="SetEarthquakeDedTX1" id="1644938630" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ertqkxml, <Coverage>
<CoverageCd>ERQK</CoverageCd>
<Deductible>
<FormatPct>15</FormatPct>
</Deductible>
</Coverage>)>



]]></functionstep>
	</condition>
	<condition name="SCC-9289-OK" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}}
AND
{&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_construction)&gt;, &lt;=this.getvariable(map_construction)&gt;)&gt; NOTEQUAL MY}
AND
{&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_construction)&gt;, &lt;=this.getvariable(map_construction)&gt;)&gt; NOTEQUAL B}" appliesto="">
		<condition name="EarthQuake" expression="{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL Yes}" appliesto="" id="1034801055">
			<functionstep name="SetEarthquakeDedOK" id="391965327" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ertqkxml, <Coverage>
<CoverageCd>ERQK</CoverageCd>
<Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(endorsements_earthquake_deductible)>, <=this.getvariable(map_earthquakedeductible)>)></FormatPct>
</Deductible>
</Coverage>)>



]]></functionstep>
		</condition>
	</condition>
	<condition name="Increased Jewelry" expression="{&lt;=this.getvariable(endorsements_increasedjewelryfurs)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NE}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IN}" appliesto="">
		<condition name="State NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
			<functionstep name="SetIncreasedJewelryXMLNC" id="1293074310" prompt="no" errormessage="Error setting IncreasedJewelryXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(increasedjewelryxml, <Coverage>
<CoverageCd>UNJWF</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(endorsements_increasedjewelryfursamount)>, 2500=3000|3000=3000|4000=4000|5000=5000)></FormatInteger>
</Limit>
</Coverage>
)>]]></functionstep>
		</condition>
		<elseifcondition name="State is CA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
			<functionstep name="SetIncreasedJewelryXMLCA" id="2117306486" prompt="no" errormessage="Error setting IncreasedJewelryXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(increasedjewelryxml, <Coverage>
<CoverageCd>UNJWF</CoverageCd>
<Limit>
<FormatInteger>10000</FormatInteger>
</Limit>
</Coverage>)>
]]></functionstep>
		</elseifcondition>
		<elsecondition>
			<functionstep name="SetIncreasedJewelryXML" id="2100138009" prompt="no" errormessage="Error setting IncreasedJewelryXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(increasedjewelryxml, <Coverage>
<CoverageCd>UNJWF</CoverageCd>
<Limit>
<FormatInteger>5000</FormatInteger>
</Limit>
</Coverage>
)>]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="Increased Jewelry-TX" expression="{&lt;=this.getvariable(endorsements_increasedjewelryfurs)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="439397207">
		<condition name="HO4-HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="">
			<functionstep name="SetIncreasedJewelryXML-TX" id="1657293947" prompt="no" errormessage="Error setting IncreasedJewelryXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(increasedjewelryxml, <Coverage>
<CoverageCd>UNJWF</CoverageCd>
<Limit>
<FormatInteger>5000</FormatInteger>
</Limit>
</Coverage>
)>]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetIncreasedJewelryXML-TX1" id="488082463" prompt="no" errormessage="Error setting IncreasedJewelryXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(increasedjewelryxml, <Coverage>
<CoverageCd>UNJWF</CoverageCd>
<Limit>
<FormatInteger>5000</FormatInteger>
</Limit>
</Coverage>
)>]]></functionstep>
		</elsecondition>
		<condition name="Business Pursuits" expression="{&lt;=this.getvariable(endorsements_businesspursuits)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}}" appliesto="">
			<functionstep name="SetBusinessXML-TX" id="314549053" prompt="no" errormessage="Error setting Business Pursuits XML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(businessxml, <Coverage>
<CoverageCd>BUS</CoverageCd>
<Option>
<OptionCd><=this.convertvalue(<=this.getvariable(endorsements_businessclass)>, <=this.getvariable(mapbusinessclass)>)></OptionCd>
</Option>
</Coverage>
)>]]></functionstep>
		</condition>
	</condition>
	<condition name="Increased Jewelry-NE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO3}
AND
{&lt;=this.getvariable(endorsements_increasedjewelryfurs)&gt; EQUAL Yes}" appliesto="">
		<functionstep name="SetIncreasedJewelryXML-NE" id="1344527908" prompt="no" errormessage="Error setting IncreasedJewelryXML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(increasedjewelryxml, <Coverage>
<CoverageCd>UNJWF</CoverageCd>
<Limit>
<FormatInteger>5000</FormatInteger>
</Limit>
</Coverage>
)>
]]></functionstep>
	</condition>
	<condition name="ReplacementCostDwelling - Yes" expression="{&lt;=this.getvariable(endorsements_replacementcostdwelling)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=this.getvariable(qualityplus)&gt; EQUAL Yes}" appliesto="">
		<functionstep name="SetReplacementCostDwellingTX" id="1590276321" prompt="no" errormessage="Error setting replacement cost dwelling. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(replcostdwel, <=this.convertvalue(<=global.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=50)>)>]]></functionstep>
	</condition>
	<condition name="ReplacementCostDwelling - Yes" expression="{&lt;=this.getvariable(endorsements_replacementcostdwelling)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
		<functionstep name="SetReplacementCostDwelling" id="275494408" prompt="no" errormessage="Error setting replacement cost dwelling. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(extendeddwellingxml, <Coverage>
<CoverageCd>com.safeco_EDC</CoverageCd>
<Limit>
<FormatPct><=this.getvariable(replcostdwel)></FormatPct>
</Limit>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="ReplacementCostDwelling - Yes" expression="{&lt;=this.getvariable(endorsements_replacementcostdwelling)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=java.callstringmethod(matches, &lt;=this.getvariable(rating_statecode)&gt;,  IL|MN|NY|UT|AZ)&gt; EQUAL true}
AND
{&lt;=java.callstringmethod(matches, &lt;=this.getvariable(packagenew)&gt;,A|C)&gt; EQUAL true}" appliesto="">
		<functionstep name="SetReplacementCostNew" id="282671004" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(replcostdwel, <=this.convertvalue(<=global.getvariable(endorsements_replacementcostdwellingpercentage)>,25=25|50=50|100=100)>)>


<=this.setvariable(extendeddwellingxml, <Coverage>
<CoverageCd>com.safeco_EDC</CoverageCd>
<Limit>
<FormatPct><=this.getvariable(replcostdwel)></FormatPct>
</Limit>
</Coverage>)>]]></functionstep>
	</condition>
	<condition name="ReplacementCostDwelling - Yes" expression="{&lt;=this.getvariable(endorsements_replacementcostdwelling)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="" id="1790962284">
		<functionstep name="SetReplacementCostDwelling-MA" id="1906665342" prompt="no" errormessage="Error setting replacement cost dwelling. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(extendeddwellingxml, <Coverage>
<CoverageCd>com.safeco_EDC</CoverageCd>
<Limit>
<FormatPct><=this.getvariable(replcostdwel)></FormatPct>
</Limit>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="REPLACEMENT COST" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MA -">
		<condition name="newcondition" expression="{{&lt;=this.getvariable(endorsements_replacementcostdwelling)&gt; EQUAL No}
OR
{&lt;=this.getvariable(endorsements_replacementcostdwelling)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}}" appliesto="">
			<functionstep name="SetReplacementCostDwellingMA" id="1517001702" prompt="no" errormessage="Error setting replacement cost dwelling. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(extendeddwellingxml, <Coverage>
<CoverageCd>com.safeco_EDC</CoverageCd>
<Limit>
<FormatPct>0</FormatPct>
</Limit>
</Coverage>)>
]]></functionstep>
		</condition>
	</condition>
	<condition name="State-TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
		<condition name="Personal Injury" expression="{&lt;=this.getvariable(endorsements_personalinjury)&gt; EQUAL Yes}" appliesto="">
			<functionstep name="SetPersonalInjury" id="1280088973" prompt="no" errormessage="Error setting personal injury. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(PersonalInjuryxml, <Coverage>
<CoverageCd>PIHOM</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>
]]></functionstep>
		</condition>
		<condition name="ReplacementCostContent - Yes" expression="{&lt;=this.getvariable(endorsements_replacementcostcontent)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="" id="697319235">
			<functionstep name="SetReplacementCostContent" id="1267037102" prompt="no" errormessage="Error setting replacement cost dwelling. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(fullvaluexml, <Coverage>
<CoverageCd>FVREP</CoverageCd>
<Option>
<OptionCd>Y</OptionCd>
</Option>
</Coverage>)>]]></functionstep>
		</condition>
	</condition>
	<condition name="State-ID" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}" appliesto="" id="730898438">
		<condition name="Personal Injury" expression="{&lt;=this.getvariable(endorsements_personalinjury)&gt; EQUAL Yes}" appliesto="" id="138178442">
			<functionstep name="SetPersonalInjury-ID" id="48044226" prompt="no" errormessage="Error setting personal injury. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(PersonalInjuryxml, <Coverage>
<CoverageCd>PIHOM</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>
]]></functionstep>
		</condition>
	</condition>
	<condition name="Colorado Personal Injury Endorsement" expression="{&lt;=this.getvariable(endorsements_personalinjury)&gt; EQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}" appliesto="">
		<functionstep name="SetPersonalInjury_CO" id="888855385" prompt="no" errormessage="Error setting personal injury. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(PersonalInjuryxml, <Coverage>
<CoverageCd>PIHOM</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>
]]></functionstep>
	</condition>
	<condition name="newcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
AND
{&lt;=this.getvariable(endorsements_sinkholecollapse_tn)&gt; EQUAL Yes}" appliesto="">
		<functionstep name="SinkHole" id="696381150" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(sinkxml,<Coverage>
<CoverageCd>SINK</CoverageCd>
<Limit>
<FormatCurrencyAmt>
<Amt><=this.getvariable(endorsements_sinkholecollapseamount_tn)></Amt>
</FormatCurrencyAmt>
</Limit>
</Coverage>)>]]></functionstep>
	</condition>
	<condition name="State EQUALS IL-NC" expression="{1 EQUAL 1}" appliesto="">
		<condition name="Personal Injury" expression="{&lt;=this.getvariable(endorsements_personalinjury)&gt; EQUAL Yes}" appliesto="" id="784354635">
			<functionstep name="SetPersonalInjury_IL" id="950749231" prompt="no" errormessage="Error setting personal injury. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(PersonalInjuryxml, <Coverage>
<CoverageCd>PIHOM</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>
]]></functionstep>
		</condition>
	</condition>
	<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="AL -AR -AZ -CO -GA -ID -IL -IN -KS -KY -LA -MD -MN -MO -NC -ND -NE -NH -NM -NV -NY -OK -OR -PA -UT -VA -VT -WA -WI -" id="1161085081">
		<condition name="ReplacementCostContent - Yes" expression="{&lt;=this.getvariable(endorsements_replacementcostcontent)&gt; EQUAL Yes}" appliesto="">
			<functionstep name="SetReplacementCostContentAZ" id="116295547" prompt="no" errormessage="Error setting replacement cost dwelling. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(fullvaluexml, <Coverage>
<CoverageCd>FVREP</CoverageCd> 
<Option>
<OptionCd>YES</OptionCd> 
</Option>
</Coverage>)>

]]></functionstep>
		</condition>
		<elsecondition>
			<condition name="newcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL LA}" appliesto="">
				<functionstep name="SetReplacementCostContentAZ1" id="23405425" prompt="no" errormessage="Error setting replacement cost dwelling. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(fullvaluexml, <Coverage>
<CoverageCd>FVREP</CoverageCd> 
<Option>
<OptionCd>No</OptionCd> 
</Option>
</Coverage>)>

]]></functionstep>
			</condition>
		</elsecondition>
	</condition>
	<condition name="PolicyType - HO3" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}}" appliesto="" id="2145758477">
		<functionstep name="SetEndorsementsHO3AL" id="1573262556" prompt="no" errormessage="Error setting Endorsements. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements, <=this.getvariable(identitytheftxml)>
<=this.getvariable(waterbackupxml)>
<=this.getvariable(lossassessxml)>
<=this.getvariable(ordinancexml)>
<=this.getvariable(increasedjewelryxml)>
<=this.getvariable(optxml)>
<=this.getvariable(ertqkxml)>
<=this.getvariable(moldxml)>
<=this.getvariable(businessxml)>
<=this.getvariable(PersonalInjuryxml)>
<=this.getvariable(extendeddwellingxml)>
<=this.getvariable(equipbreakdownxml)>)>
]]></functionstep>
	</condition>
	<condition name="Policytype - HO3" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
		<condition name="newcondition" expression="{&lt;=this.getvariable(endorsements_replacementcostdwelling)&gt; EQUAL Yes}" appliesto="">
			<functionstep name="SetEndorsementsTX" id="292644814" prompt="no" errormessage="Error setting Endorsements. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements, <=this.getvariable(identitytheftxml)>
<=this.getvariable(waterbackupxml)>
<=this.getvariable(lossassessxml)>
<=this.getvariable(ordinancexml)>
<=this.getvariable(increasedjewelryxml)>
<=this.getvariable(optxml)>
<=this.getvariable(ertqkxml)>
<=this.getvariable(moldxml)>
<=this.getvariable(businessxml)>
<=this.getvariable(PersonalInjuryxml)>
<=this.getvariable(extendeddwellingxml)>)>
]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetEndorsementsRC" id="333927562" prompt="no" errormessage="Error setting Endorsements. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements, <=this.getvariable(identitytheftxml)>
<=this.getvariable(waterbackupxml)>
<=this.getvariable(lossassessxml)>
<=this.getvariable(ordinancexml)>
<=this.getvariable(increasedjewelryxml)>
<=this.getvariable(optxml)>
<=this.getvariable(ertqkxml)>
<=this.getvariable(moldxml)>
<=this.getvariable(businessxml)>
<=this.getvariable(PersonalInjuryxml)>)>
]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="PolicyType - HO3" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AZ}" appliesto="">
		<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="IN -MD -NH -PA -VA -">
			<functionstep name="SetEndorsementsHO3IN" id="1064987802" prompt="no" errormessage="Error setting Endorsements. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements, <=this.getvariable(identitytheftxml)>
<=this.getvariable(waterbackupxml)>
<=this.getvariable(lossassessxml)>
<=this.getvariable(ordinancexml)>
<=this.getvariable(increasedjewelryxml)>
<=this.getvariable(optxml)>
<=this.getvariable(ertqkxml)>
<=this.getvariable(moldxml)>
<=this.getvariable(businessxml)>
<=this.getvariable(PersonalInjuryxml)>
<=this.getvariable(extendeddwellingxml)>
<=this.getvariable(minexml)>
<=this.getvariable(earthxml)>
<=this.getvariable(equipbreakdownxml)>
<=this.getvariable(fullvaluexml)>)>
]]></functionstep>
		</condition>
		<condition name="State is NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
			<condition name="Check Policy EQUALS QCH" expression="{&lt;=this.getvariable(policync)&gt; EQUAL Quality Crest Home}" appliesto="">
				<functionstep name="SetEndorsementsHO3_NC" id="186269350" prompt="no" errormessage="Error setting Endorsements. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements, <=this.getvariable(identitytheftxml)>
<=this.getvariable(waterbackupxml)>
<=this.getvariable(lossassessxml)>
<=this.getvariable(ordinancexml)>
<=this.getvariable(increasedjewelryxml)>
<=this.getvariable(optxml)>
<=this.getvariable(ertqkxml)>
<=this.getvariable(moldxml)>
<=this.getvariable(businessxml)>
<=this.getvariable(PersonalInjuryxml)>
<=this.getvariable(minexml)>
<=this.getvariable(earthxml)>
<=this.getvariable(equipbreakdownxml)>
<=this.getvariable(fullvaluexml)>)>

]]></functionstep>
			</condition>
			<condition name="Check Policy NOTEQUALS QCH" expression="{&lt;=this.getvariable(policync)&gt; NOTEQUAL Quality Crest Home}" appliesto="">
				<functionstep name="SetEndorsementsHO3_NC1" id="1915910658" prompt="no" errormessage="Error setting Endorsements. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements, <=this.getvariable(identitytheftxml)>
<=this.getvariable(waterbackupxml)>
<=this.getvariable(lossassessxml)>
<=this.getvariable(ordinancexml)>
<=this.getvariable(increasedjewelryxml)>
<=this.getvariable(optxml)>
<=this.getvariable(ertqkxml)>
<=this.getvariable(moldxml)>
<=this.getvariable(businessxml)>
<=this.getvariable(PersonalInjuryxml)>
<=this.getvariable(extendeddwellingxml)>
<=this.getvariable(minexml)>
<=this.getvariable(earthxml)>
<=this.getvariable(equipbreakdownxml)>
<=this.getvariable(fullvaluexml)>)>

]]></functionstep>
			</condition>
		</condition>
		<elsecondition>
			<functionstep name="SetEndorsementsHO3" id="1014724997" prompt="no" errormessage="Error setting Endorsements. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements, <=this.getvariable(identitytheftxml)>
<=this.getvariable(waterbackupxml)>
<=this.getvariable(lossassessxml)>
<=this.getvariable(ordinancexml)>
<=this.getvariable(increasedjewelryxml)>
<=this.getvariable(optxml)>
<=this.getvariable(ertqkxml)>
<=this.getvariable(moldxml)>
<=this.getvariable(businessxml)>
<=this.getvariable(PersonalInjuryxml)>
<=this.getvariable(extendeddwellingxml)>
<=this.getvariable(minexml)>
<=this.getvariable(earthxml)>
<=this.getvariable(equipbreakdownxml)>
<=this.getvariable(sewerxml)>
<=this.getvariable(servicexml)>
)>
]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="Policytype - Not HO3" expression="{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO3}" appliesto="">
		<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}" appliesto="IN -LA -MD -NC -NE -NH -PA -UT -VA -WY -">
			<functionstep name="SetEndorsementsIN" id="728703157" prompt="no" errormessage="Error setting Endorsements. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements, <=this.getvariable(identitytheftxml)>
<=this.getvariable(waterbackupxml)>
<=this.getvariable(lossassessxml)>
<=this.getvariable(ordinancexml)>
<=this.getvariable(increasedjewelryxml)>
<=this.getvariable(optxml)>
<=this.getvariable(ertqkxml)>
<=this.getvariable(moldxml)>
<=this.getvariable(businessxml)>
<=this.getvariable(PersonalInjuryxml)>
<=this.getvariable(minexml)>
<=this.getvariable(buildingaltxml)>
<=this.getvariable(fullvaluexml)>)>
]]></functionstep>
		</condition>
		<elseifcondition name="STATE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MA -">
			<functionstep name="SetEndorsements-MA" id="164828438" prompt="no" errormessage="Error setting endorsements. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements, <=this.getvariable(identitytheftxml)>
<=this.getvariable(waterbackupxml)>
<=this.getvariable(lossassessxml)>
<=this.getvariable(ordinancexml)>
<=this.getvariable(increasedjewelryxml)>
<=this.getvariable(optxml)>
<=this.getvariable(ertqkxml)>
<=this.getvariable(moldxml)>
<=this.getvariable(businessxml)>
<=this.getvariable(PersonalInjuryxml)>
<=this.getvariable(extendeddwellingxml)>
<=this.getvariable(minexml)>
<=this.getvariable(buildingaltxml)>)>

]]></functionstep>
		</elseifcondition>
		<elsecondition>
			<functionstep name="SetEndorsements" id="1609568303" prompt="no" errormessage="Error setting Endorsements. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsements, <=this.getvariable(identitytheftxml)>
<=this.getvariable(waterbackupxml)>
<=this.getvariable(lossassessxml)>
<=this.getvariable(ordinancexml)>
<=this.getvariable(increasedjewelryxml)>
<=this.getvariable(optxml)>
<=this.getvariable(ertqkxml)>
<=this.getvariable(moldxml)>
<=this.getvariable(businessxml)>
<=this.getvariable(PersonalInjuryxml)>
<=this.getvariable(minexml)>
<=this.getvariable(buildingaltxml)>
<=this.getvariable(servicexml)>)>
]]></functionstep>
		</elsecondition>
	</condition>
	<condition name="SCC-10999" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}" appliesto="">
		<condition name="Sinkhole" expression="{&lt;=this.getvariable(endorsements_sinkholecollapse_pa)&gt; EQUAL Yes}" appliesto="">
			<functionstep name="Setsinkholecoverage" id="411062700" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(sinkholexml,<Coverage>
<CoverageCd>SINK2</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>]]></functionstep>
		</condition>
	</condition>
</condition>
<inlinefunction name="SetDwellingInfoXML">
	<condition name="DWELLING INFO" expression="{1 EQUAL 1}" appliesto="">
		<condition name="WithinCityLimits" expression="{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL Yes}" appliesto="">
			<condition name="State is VA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="">
				<condition name="Protection Class 9 OR 10" expression="{&lt;=this.getvariable(dwellinginfo_protectionclass)&gt; EQUAL 9}
OR
{&lt;=this.getvariable(dwellinginfo_protectionclass)&gt; EQUAL 10}" appliesto="">
					<functionstep name="SetWithinCityLimitPC" id="1698793361" prompt="no" errormessage="Error setting within city limits variable. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(withincitylimit, <AreaTypeSurroundingsCd>SU</AreaTypeSurroundingsCd>)>]]></functionstep>
				</condition>
				<elsecondition>
					<functionstep name="SetWithinCityLimitPC1" id="1391935955" prompt="no" errormessage="Error setting within city limits variable. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(withincitylimit, <AreaTypeSurroundingsCd>IN</AreaTypeSurroundingsCd>)>]]></functionstep>
				</elsecondition>
			</condition>
			<elsecondition>
				<functionstep name="SetWithinCityLimits" id="1987021738" prompt="no" errormessage="Error setting within city limits variable. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(withincitylimit, <AreaTypeSurroundingsCd>IN</AreaTypeSurroundingsCd>)>]]></functionstep>
			</elsecondition>
		</condition>
		<elsecondition>
			<functionstep name="SetWithinCityLimitsToNo" id="1124924499" prompt="no" errormessage="Error setting within city limits variable. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(withincitylimit, <AreaTypeSurroundingsCd>OUT</AreaTypeSurroundingsCd>)>]]></functionstep>
		</elsecondition>
		<condition name="Single Flow" expression="{&lt;=this.getvariable(PostLoop)&gt; EQUAL 0}" appliesto="">
			<condition name="Check Updates" expression="{1 EQUAL 1}" appliesto="">
				<condition name="State MN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="">
					<condition name="Check Plumbing Update" expression="{&lt;=this.getvariable(dwellinginfo_plumbingupdate)&gt; EQUAL PARTIAL UPDATE}" appliesto="">
						<functionstep name="SetPlumbingUpdateMN" id="1425926072" prompt="no" errormessage="Error setting Plumbing Updates. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updatexml, <=this.getvariable(updatexml)>
<PlumbingImprovementCd>P</PlumbingImprovementCd>
<PlumbingImprovementYear><=this.getvariable(dwellinginfo_plumbingupdateyear)></PlumbingImprovementYear>)>

]]></functionstep>
					</condition>
					<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(dwellinginfo_plumbingupdate)&gt; EQUAL COMPLETE UPDATE}" appliesto="">
						<functionstep name="SetPlumbingUpdateMN1" id="4357824" prompt="no" errormessage="Error setting Plumbing Updates. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updatexml, <=this.getvariable(updatexml)>
<PlumbingImprovementCd>C</PlumbingImprovementCd>
<PlumbingImprovementYear><=this.getvariable(dwellinginfo_plumbingupdateyear)></PlumbingImprovementYear>)>


]]></functionstep>
					</elseifcondition>
					<condition name="SCC-AZ" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}" appliesto="">
						<condition name="Check Wiring Update" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; EQUAL PARTIAL UPDATE}" appliesto="">
							<functionstep name="SetWiringUpdateMN" id="1194041789" prompt="no" errormessage="Error setting WireUpdate. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updatexml, <=this.getvariable(updatexml)>
<WiringImprovementCd>P</WiringImprovementCd>
<WiringImprovementYear><=this.getvariable(dwellinginfo_electricalupdateyear)></WiringImprovementYear>)>
]]></functionstep>
						</condition>
						<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; EQUAL COMPLETE UPDATE}" appliesto="">
							<functionstep name="SetWiringUpdateMN1" id="655398144" prompt="no" errormessage="Error setting WireUpdate. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updatexml, <=this.getvariable(updatexml)>
<WiringImprovementCd>C</WiringImprovementCd>
<WiringImprovementYear><=this.getvariable(dwellinginfo_electricalupdateyear)></WiringImprovementYear>)>
]]></functionstep>
						</elseifcondition>
						<condition name="Check Roofing Update" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt; EQUAL PARTIAL UPDATE}
AND
{1 EQUAL 0}" appliesto="" id="1979036203">
							<functionstep name="SetRoofingUpdateMN" id="1294134367" prompt="no" errormessage="Error setting WireUpdate. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updatexml, <=this.getvariable(updatexml)>
<RoofingImprovementCd>P</RoofingImprovementCd>
<RoofingImprovementYear><=this.getvariable(dwellinginfo_roofingupdateyear)></RoofingImprovementYear>)>)>
]]></functionstep>
						</condition>
						<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt; EQUAL COMPLETE UPDATE}" appliesto="" id="865671440">
							<functionstep name="SetRoofingUpdateMN1" id="1206064596" prompt="no" errormessage="Error setting WireUpdate. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updatexml, <=this.getvariable(updatexml)>
<RoofingImprovementCd>C</RoofingImprovementCd>
<RoofingImprovementYear><=this.getvariable(dwellinginfo_roofingupdateyear)></RoofingImprovementYear>)>)>
]]></functionstep>
						</elseifcondition>
					</condition>
					<condition name="Check Roofing Update" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt; EQUAL PARTIAL UPDATE}" appliesto="">
						<functionstep name="SetRoofingUpdateAZ" id="1723695683" prompt="no" errormessage="Error setting RoofUpdate. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updatexml, <=this.getvariable(updatexml)>
<RoofingImprovementCd>P</RoofingImprovementCd>
<RoofingImprovementYear><=this.getvariable(dwellinginfo_roofingupdateyear)></RoofingImprovementYear>)>)>
]]></functionstep>
					</condition>
					<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt; EQUAL COMPLETE UPDATE}" appliesto="">
						<functionstep name="SetRoofingUpdateAZ1" id="323568347" prompt="no" errormessage="Error setting RoofUpdate. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updatexml, <=this.getvariable(updatexml)>
<RoofingImprovementCd>C</RoofingImprovementCd>
<RoofingImprovementYear><=this.getvariable(dwellinginfo_roofingupdateyear)></RoofingImprovementYear>)>)>

]]></functionstep>
					</elseifcondition>
				</condition>
				<elsecondition>
					<condition name="Check Roofing Update" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt; NOTEQUAL NOT UPDATED}" appliesto="">
						<functionstep name="SetRoofingUpdate" id="453776411" prompt="no" errormessage="Error setting RoofUpdate. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updatexml, <RoofingImprovementCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roofingupdate)>, <=this.getvariable(maproof)>)></RoofingImprovementCd>
<RoofingImprovementYear><=this.getvariable(dwellinginfo_roofingupdateyear)></RoofingImprovementYear>)>]]></functionstep>
					</condition>
					<condition name="Check Wiring Update" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MS}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ND}}" appliesto="" id="2067247531">
						<functionstep name="SetWiringUpdate" id="378901332" prompt="no" errormessage="Error setting WireUpdate. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updatexml, <=this.getvariable(updatexml)>
<WiringImprovementCd>P</WiringImprovementCd>
<WiringImprovementYear><=this.getvariable(dwellinginfo_electricalupdateyear)></WiringImprovementYear>)>]]></functionstep>
					</condition>
				</elsecondition>
			</condition>
		</condition>
		<condition name="State is TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
			<condition name="PolicyType-HO3-HO5-TX" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="1023439023">
				<functionstep name="SetDeductibleTX" id="391395769" prompt="no" errormessage="Error setting Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
			</condition>
			<condition name="PolicyType-HO3-HO5-TX" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(endorsements_windhailexclusion_tx)&gt; NOTEQUAL Yes}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="346188308">
				<functionstep name="SetWindDeductible1" id="308111204" prompt="no" errormessage="Error setting WindDeductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxml, <Deductible>
<FormatInteger>1</FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
			</condition>
			<condition name="PolicyType-HO6-TX" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="1355916921">
				<functionstep name="SetDeductibleTX-HO6" id="1326489787" prompt="no" errormessage="Error setting Deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductibleHO4)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
			</condition>
			<condition name="Check For Hail Resistive Roof Credit" expression="{&lt;=this.getvariable(hailcredittx)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(hailcredittx)&gt; NOTEQUAL None}" appliesto="">
				<functionstep name="SetHailCredit_TX" id="1311965814" prompt="no" errormessage="Error setting Hail Credit. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(hailcreditxml,<Coverage>
<CoverageCd>ROOF</CoverageCd>
<Option>
<OptionCd>com.safeco_HailCrClassCd</OptionCd>
<OptionValue><=this.getvariable(hailcredittx)></OptionValue>
</Option>
</Coverage>)>]]></functionstep>
			</condition>
			<condition name="Check For Water Seepage" expression="{&lt;=this.getvariable(waterseepage)&gt; EQUAL Yes}" appliesto="">
				<functionstep name="SetWaterSeepageXML" id="1297591450" prompt="no" errormessage="Error setting water seepage xml. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterseepagexml,<Coverage>
<CoverageCd>com.safeco_SEEPG</CoverageCd>
<Option>
<OptionCd>YES</OptionCd>
</Option>
</Coverage>)>
]]></functionstep>
			</condition>
		</condition>
		<condition name="State-AL" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}}
AND
{&lt;=this.getvariable(endorsements_windhailexclusion_al)&gt; EQUAL Yes}" appliesto="MS -">
			<functionstep name="SetWindExclusion" id="742724384" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(exclusionxml, 
<Coverage>
<CoverageCd>WINDX</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>]]></functionstep>
		</condition>
		<condition name="State-TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(endorsements_windhailexclusion_tx)&gt; EQUAL Yes}" appliesto="">
			<functionstep name="SetWindExclusion_TX" id="798057369" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(exclusionxml, 
<Coverage>
<CoverageCd>WINDX</CoverageCd>
<Option>
<OptionCd>Yes</OptionCd>
</Option>
</Coverage>)>]]></functionstep>
		</condition>
		<condition name="Single Flow" expression="{&lt;=this.getvariable(PostLoop)&gt; EQUAL 0}" appliesto="">
			<condition name="State-MN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}" appliesto="">
				<condition name="PolicyType-HO3" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}" appliesto="">
					<condition name="newcondition" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; EQUAL Partial Update}" appliesto="">
						<functionstep name="SetUpdate" id="1557864841" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(updateml,)>]]></functionstep>
					</condition>
				</condition>
			</condition>
		</condition>
		<condition name="State" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}}" appliesto="MS -NC -" id="1140143612">
			<functionstep name="SetWindDeductibleNC" id="1970576480" prompt="no" errormessage="Error setting WindDeductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxmlnc, <Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatPct>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
		</condition>
		<condition name="WIND DEDUCTIBLE" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL None}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="MA -">
			<condition name="CHECK DEDUCTIBLE VALUE" expression="{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 1}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 2}
OR
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL 5}" appliesto="">
				<functionstep name="SetWindDeductibleMA" id="1108446254" prompt="no" errormessage="Error setting wind deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxml, <Deductible>
<FormatPct><=this.getvariable(coverage_winddeductible)></FormatPct>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>

]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="SetWindDeductibleMA2" id="605611677" prompt="no" errormessage="Error setting wind deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxml, <Deductible>
<FormatCurrencyAmt>
<Amt><=this.getvariable(coverage_winddeductible)></Amt>
</FormatCurrencyAmt>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>

]]></functionstep>
			</elsecondition>
		</condition>
		<condition name="PolicyType-HO3" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NE}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ME}" appliesto="MS -">
			<functionstep name="SetDeductible" id="1079914409" prompt="no" errormessage="Error setting Deductible. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
		</condition>
		<condition name="Check State Equals CT" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
AND
{&lt;=this.getvariable(consumerportallive)&gt; EQUAL true}" appliesto="">
			<functionstep name="MapWindDeductible_CT" id="1281501415" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1%=1|2%=2|3%=2|4%=5|5%=5)>]]></functionstep>
		</condition>
		<condition name="PolicyType-HO3 not" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ID}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL PA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NC}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MS}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ND}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL SD}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ME}" appliesto="AR -CA -ID -MS -NC -PA -" id="343151046">
			<functionstep name="SetWindDeductible" id="805577814" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
		</condition>
		<condition name="newcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{&lt;=this.getvariable(coverage_deductible)&gt; EQUAL 2000}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<functionstep name="SetWindDeductible-ND" id="238904103" prompt="no" errormessage="Error setting WindDeductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible,1000)>]]></functionstep>
		</condition>
		<condition name="PolicyTypeHO3" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}

AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}" appliesto="" id="1108623218">
			<functionstep name="SetWindDeductibleND" id="563704401" prompt="no" errormessage="Error setting WindDeductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductiblend)>)></FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
		</condition>
		<condition name="Policy Type HO3 ND Or MS" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(hailresistive)&gt; EQUAL Yes}

AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}}" appliesto="SD -">
			<functionstep name="SetHailResistiveRoofXML" id="100673815" prompt="no" errormessage="Error setting HailResistiveRoofXML. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(resistivexml,<Coverage>
<CoverageCd>ROOF</CoverageCd>
<Option>
<OptionCd><=this.convertvalue(<=this.getvariable(hailresistive)>, <=this.getvariable(map_hail)>)></OptionCd>
</Option>
</Coverage>)>]]></functionstep>
		</condition>
		<condition name="PolicyTypeHO3" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}

AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}" appliesto="">
			<functionstep name="SetWindDeductibleSD" id="1884334410" prompt="no" errormessage="Error setting WindDeductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxml, <Deductible>
<FormatInteger><=this.getvariable(coverage_winddeductible)></FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
		</condition>
		<condition name="PolicyType-HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="">
			<condition name="State is IA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}" appliesto="">
				<functionstep name="SetDeductibleIA" id="156587404" prompt="no" errormessage="Error setting Deductible. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>
]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="SetDeductibleMI" id="457610251" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductibleHO4)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>
]]></functionstep>
			</elsecondition>
		</condition>
		<condition name="PolicyType-HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="">
			<functionstep name="SetDeductibleKY-HO6" id="1672402065" prompt="no" errormessage="Error setting Deductible. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductibleHO4)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
		</condition>
		<condition name="AllPerilDeductible-NE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}" appliesto="">
			<condition name="Check Wind Deductible" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}
AND
{&lt;=this.getvariable(coverage_winddeductible)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
				<functionstep name="SetWindDeductible_NE" id="1775227486" prompt="no" errormessage="Error setting Wind Deductible. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxml, <Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatPct>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>
]]></functionstep>
			</condition>
			<condition name="PolicyType-HO3/HO5-NE" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}" appliesto="">
				<functionstep name="PolicyType-HO3/HO5-NE" id="651768621" prompt="no" errormessage="Error setting Deductible. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>


]]></functionstep>
			</condition>
			<condition name="PolicyType-HO6-NE" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="">
				<functionstep name="PolicyType-HO6" id="1111286450" prompt="no" errormessage="Error setting Deductible. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductibleHO6)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>

]]></functionstep>
			</condition>
		</condition>
		<condition name="ALL PERILS DEDUCITBLE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="">
			<condition name="POLICY IS H03/HO5" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}" appliesto="">
				<functionstep name="SetDeductibleHO3-MA" id="2144383971" prompt="no" errormessage="Error setting deductible. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>


]]></functionstep>
			</condition>
			<condition name="POLICY IS H04" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="">
				<functionstep name="SetDeductibleHO4-MA" id="362729444" prompt="no" errormessage="Error setting deductible. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductibleHO4)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>


]]></functionstep>
			</condition>
			<condition name="POLICY IS H06" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="" id="1445155336">
				<functionstep name="SetDeductibleHO6-MA" id="337173405" prompt="no" errormessage="Error setting deductible. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductibleHO6)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>


]]></functionstep>
			</condition>
		</condition>
		<condition name="PROTECTION CLASS" expression="{&lt;=this.getvariable(dwellinginfo_protectionclass)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<functionstep name="Initialize PC xml" id="1734416139" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(protectionclassxml,)>]]></functionstep>
			<functionstep name="Set Protection class xml" id="1090634865" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(protectionclassxml,<FireProtectionClassCd><=this.convertvalue(<=this.getvariable(dwellinginfo_protectionclass)>,<=this.getvariable(mapprotectionclass)>)></FireProtectionClassCd>)>]]></functionstep>
		</condition>
		<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="AL -AR -AZ -CA -CO -CT -GA -IA -ID -IL -IN -KS -KY -LA -MD -MI -MN -MO -MS -NC -ND -NE -NH -NM -NV -OK -OR -PA -SC -SD -UT -VA -VT -WA -WI -WV -WY -" id="194863146">
			<condition name="STATE-NOTEQUAL-OH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OH}" appliesto="">
				<functionstep name="Set Personal Property XML" id="1375953315" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(splppxml,
<Coverage>
<CoverageCd>SPPP</CoverageCd>
<Option>
<OptionCd><=this.getvariable(splpp)></OptionCd>
</Option>
</Coverage>)>]]></functionstep>
			</condition>
			<condition name="STATE-OH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}" appliesto="">
				<functionstep name="Set Personal Property XML-OH" id="1936227754" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(splppxml,
<Coverage>
<CoverageCd>SPPP</CoverageCd>
<Option>
<OptionCd><=this.getvariable(specialpersonalproperty)></OptionCd>
</Option>
</Coverage>)>]]></functionstep>
			</condition>
			<condition name="Single Flow" expression="{&lt;=this.getvariable(PostLoop)&gt; EQUAL 0}" appliesto="">
				<condition name="State is" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="AL -AR -AZ -CA -CO -GA -IN -KS -KY -MA -MN -MS -NC -ND -NH -NM -NV -OK -OR -PA -SD -UT -VA -VT -WA -">
					<condition name="Dogs Present" expression="{&lt;=this.getvariable(dwellinginfo_dogonpremises)&gt; EQUAL Yes}" appliesto="" id="1608305958">
						<functionstep name="SetDogsAL" id="598392598" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dogxml, <AnimalExposureInfo>
<BiteHistoryInd><=this.getvariable(dogbite)></BiteHistoryInd>
<DogTypeCd>Other</DogTypeCd>
</AnimalExposureInfo>)>
]]></functionstep>
					</condition>
				</condition>
			</condition>
			<condition name="State KS" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="CA -MS -ND -SD -">
				<condition name="CheckBurglar" expression="{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetProtectiveXML" id="344497468" prompt="no" errormessage="Error setting Protective Devices. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(pxml, <ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>)>


]]></functionstep>
				</condition>
				<elsecondition>
					<functionstep name="SetProtectiveXMLCA" id="1002297544" prompt="no" errormessage="Error setting Protective Devices. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(pxml, <ProtectionDeviceBurglarCd>NO</ProtectionDeviceBurglarCd>)>


]]></functionstep>
				</elsecondition>
				<condition name="CheckSprinkler" expression="{&lt;=this.getvariable(endorsements_sprinkler)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetSprinklerXML" id="1053113269" prompt="no" errormessage="Error setting Protective Devices. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(spxml, <ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>)>
]]></functionstep>
				</condition>
				<elsecondition>
					<functionstep name="SetSprinklerXMLCA" id="88222654" prompt="no" errormessage="Error setting Protective Devices. Please contact EZLyx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(spxml, <ProtectionDeviceSprinklerCd>NO</ProtectionDeviceSprinklerCd>)>

]]></functionstep>
				</elsecondition>
			</condition>
			<condition name="SCC-12042" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
				<condition name="ProtectiveDeviceFire" expression="{&lt;=this.getvariable(endorsements_fire)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(endorsements_smokebaseprotectiondevice)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetFireDevicexml" id="1914596960" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(firexml, <ProtectionDeviceFireCd><=this.convertvalue(<=this.getvariable(endorsements_fire)>, <=this.getvariable(map_fire)>)></ProtectionDeviceFireCd>)>

]]></functionstep>
				</condition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(endorsements_smokebaseprotectiondevice)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(endorsements_fire)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetFireDevicexml1" id="1440589635" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(firexml, <ProtectionDeviceFireCd><=this.convertvalue(<=this.getvariable(endorsements_fire)>, <=this.getvariable(map_fire)>)></ProtectionDeviceFireCd>)>

]]></functionstep>
				</elseifcondition>
				<elsecondition>
					<condition name="SmokeDetector" expression="{&lt;=this.getvariable(endorsements_smokebaseprotectiondevice)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(endorsements_fire)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="SetFireDevicexml2" id="196318729" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(firexml, <ProtectionDeviceFireCd>DE</ProtectionDeviceFireCd>)>

]]></functionstep>
					</condition>
				</elsecondition>
			</condition>
			<condition name="PolicyType-HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}" appliesto="AR -GA -IN -KS -OR -WA -">
				<condition name="GatedCommunity" expression="{&lt;=this.getvariable(coverage_gatedcommunity)&gt; EQUAL Yes}" appliesto="">
					<functionstep name="SetGatedCommunity" id="653108544" prompt="no" errormessage="Error setting gated community.Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(gatedxml, <QuestionAnswer>                         
<QuestionCd>GENRL32</QuestionCd>            
<YesNoCd>YES</YesNoCd>                     
</QuestionAnswer>)> 
]]></functionstep>
				</condition>
				<condition name="MannedSecurity" expression="{&lt;=this.getvariable(endorsements_mannedsecurity)&gt; EQUAL Yes}" appliesto="" id="498136408">
					<functionstep name="SetMannedSecurity" id="1634012313" prompt="no" errormessage="Error setting gated community.Please contact Ezlynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(mannedxml, <QuestionAnswer>                        
<QuestionCd>GENRL08</QuestionCd>               
<YesNoCd>YES</YesNoCd>                     
</QuestionAnswer>)>
]]></functionstep>
				</condition>
			</condition>
			<condition name="PolicyType-HO3" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="">
				<condition name="CheckWellsFargo" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}" appliesto="" id="2093999444">
					<condition name="Checkwells" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="">
						<functionstep name="SetDwellXML1" id="1323892627" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>)>]]></functionstep>
					</condition>
					<elsecondition id="512071924">
						<condition name="State OK" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}" appliesto="">
							<functionstep name="SetDwellXML2_OK" id="1908859746" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<=this.getvariable(windxml)>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
						</condition>
						<elsecondition>
							<functionstep name="SetDwellXML2" id="468494161" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<=this.getvariable(dedxml)>
</Coverage>)>]]></functionstep>
						</elsecondition>
					</elsecondition>
				</condition>
				<condition name="CheckWellsFargo" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="" id="561593466">
					<condition name="Checkwells" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="">
						<functionstep name="SetDwellXMLNE1" id="1899206332" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<=this.getvariable(windxml)>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
					</condition>
					<elsecondition id="631142066">
						<functionstep name="SetDwellXMLNE2" id="661319410" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,)>]]></functionstep>
					</elsecondition>
				</condition>
			</condition>
			<condition name="PolicyType-HO3" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="" id="159178913">
				<condition name="State" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}}
AND
{&lt;=this.getvariable(coverage_Foundations)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="SD -">
					<functionstep name="SetFoundationType-SD" id="68512447" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(foundationxml,<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>)>]]></functionstep>
				</condition>
				<condition name="State is IA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}" appliesto="">
					<condition name="CheckWellsFargo" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="">
						<functionstep name="SetDwellXMLIA" id="946056169" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>)>]]></functionstep>
					</condition>
					<elsecondition>
						<functionstep name="SetDwellXML" id="826589214" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Deductible>
<FormatInteger>1</FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>)>]]></functionstep>
					</elsecondition>
					<functionstep name="SetDwellingInfoHO3" id="1869617528" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<BathroomInfo>
<BathroomTypeCd>Full</BathroomTypeCd>
<NumBathrooms><=this.getvariable(fbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>ThreeQuarter</BathroomTypeCd>
<NumBathrooms><=this.getvariable(tbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>Half</BathroomTypeCd>
<NumBathrooms><=this.getvariable(hbath)></NumBathrooms>
</BathroomInfo>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
</Dwell>)>]]></functionstep>
				</condition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="AZ -CT -GA -IN -KY -MD -MN -MO -MS -ND -NH -NM -OK -OR -SD -UT -VA -VT -WA -">
					<condition name="Within City Limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}" appliesto="">
						<functionstep name="setCityLim" id="425244566" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(wicityxml,<WithinCityYN>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_withincitylimits)>, <=this.getvariable(map_citylim)>)></YesNoCd>
</WithinCityYN>)>]]></functionstep>
					</condition>
					<functionstep name="SetDwellingInfoHO3AL1" id="1239619457" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.roundup(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>


<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>



<=this.getvariable(wicityxml)>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>

<=this.getvariable(protectionclassxml)>

</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
<=this.getvariable(sinkxml)>
</Dwell>
)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State EQUAL NE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}" appliesto="">
					<functionstep name="SetDwellingInfoHO3NE" id="342457440" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>


<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>

<=this.getvariable(protectionclassxml)>

</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}" appliesto="" id="1497331414">
					<functionstep name="SetDwellingInfoHO3MT" id="94836559" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<InspectionInfo>
<InspectionCd>com.safeco_AgentOut</InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>


</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>

<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}" appliesto="VT -" id="1732176029">
					<functionstep name="SetDwellingInfoHO3VT" id="629247595" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<InspectionInfo>
<InspectionCd>com.safeco_AgentOut</InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatPct>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>

</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>

<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}" appliesto="KS -">
					<functionstep name="SetDwellingInfoHO3KS1" id="63404345" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>

<=this.getvariable(protectionclassxml)>

</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}" appliesto="">
					<functionstep name="SetDwellingInfoHO3MO1" id="122114727" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>


<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>

<FireProtectionClassCd><=this.convertvalue(<=this.getvariable(dwellinginfo_protectionclass)>,<=this.getvariable(mapprotectionclass)>)></FireProtectionClassCd>

</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State AR" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}" appliesto="">
					<condition name="CheckWellsFargo" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="" id="104780995">
						<functionstep name="SetDwellXMLAR" id="269029685" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<=this.getvariable(winddedxml)>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
					</condition>
					<elsecondition id="1049547616">
						<functionstep name="SetDwellXMLAR1" id="864778019" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Deductible>
<FormatInteger>1</FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>)>]]></functionstep>
					</elsecondition>
					<functionstep name="SetDwellingInfoHO3AR" id="12474750195126" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<AreaTypeSurroundingsCd>IN</AreaTypeSurroundingsCd>
<HousekeepingConditionCd>GD</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<FireProtectionClassCd><=this.convertvalue(<=this.getvariable(dwellinginfo_protectionclass)>,<=this.getvariable(mapprotectionclass)>)></FireProtectionClassCd>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State CO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}" appliesto="">
					<functionstep name="SetDwellingInfoHO3CO" id="32889669" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<FireProtectionClassCd><=this.convertvalue(<=this.getvariable(dwellinginfo_protectionclass)>,<=this.getvariable(mapprotectionclass)>)></FireProtectionClassCd>


</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State IL" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="">
					<functionstep name="SetDwellingInfoHO3IL" id="218288415" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatPct>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<FireProtectionClassCd><=this.convertvalue(<=this.getvariable(dwellinginfo_protectionclass)>,<=this.getvariable(mapprotectionclass)>)></FireProtectionClassCd>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(businessxmltx)>
</Dwell>
)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State LA,WV" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WV}" appliesto="" id="1969170786">
					<functionstep name="SetDwellingInfoHO3LA" id="608320058" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<InspectionInfo>
<InspectionCd>com.safeco_AgentOut</InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_yearbuilt)>-01-01</PurchaseDt>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<FireProtectionClassCd><=this.convertvalue(<=this.getvariable(dwellinginfo_protectionclass)>,<=this.getvariable(mapprotectionclass)>)></FireProtectionClassCd>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(businessxmltx)>
</Dwell>
)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State EQUALS MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="">
					<functionstep name="SetDwellingInfoHO3MI" id="1939370333" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">

<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<InspectionInfo>
<InspectionCd>com.safeco_AgentOut</InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<FireProtectionClassCd><=this.convertvalue(<=this.getvariable(dwellinginfo_protectionclass)>,<=this.getvariable(mapprotectionclass)>)></FireProtectionClassCd>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(businessxmltx)>
</Dwell>
)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State CA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
					<condition name="CheckWellsFargo" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="" id="1991452742">
						<functionstep name="SetDwellXMLCA" id="421024160" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
					</condition>
					<elsecondition>
						<functionstep name="SetDwellXMLCA2" id="1794695409" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
					</elsecondition>
					<functionstep name="SetDwellingInfoHO3CA" id="1855193440" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>

<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<AreaTypeSurroundingsCd>IN</AreaTypeSurroundingsCd>
<HousekeepingConditionCd>GD</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.2)>, \., 0)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(earthquakexml)>

<=this.getvariable(waterbackupxml)>

<=this.getvariable(ertqkxml)>

<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>

<=this.getvariable(pxml)>

<=this.getvariable(spxml)>
<=this.getvariable(protectionclassxml)>

</BldgProtection>

<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State AL" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}" appliesto="" id="16953651">
					<functionstep name="SetDwellingInfoHO3AL" id="1461428979" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatPct>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>

<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<FireProtectionClassCd><=this.convertvalue(<=this.getvariable(dwellinginfo_protectionclass)>,<=this.getvariable(mapprotectionclass)>)></FireProtectionClassCd>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="STate ID" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}" appliesto="">
					<functionstep name="DwellingInfoID" id="781976685" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<FireProtectionClassCd><=this.convertvalue(<=this.getvariable(dwellinginfo_protectionclass)>,<=this.getvariable(mapprotectionclass)>)></FireProtectionClassCd>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(businessxmltx)>
</Dwell>
)>


]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SC}" appliesto="SC -">
					<functionstep name="SetDwellingInfoHO3ID" id="1748412298" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(businessxmltx)>
</Dwell>
)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}" appliesto="PA -" id="696285532">
					<condition name="CheckWellsFargo" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="" id="956301751">
						<functionstep name="SetDwellXMLPA" id="115194458" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
					</condition>
					<elsecondition id="143537023">
						<functionstep name="SetDwellXMLPA1" id="2071974153" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<=this.getvariable(dedxml)>
</Coverage>)>

]]></functionstep>
					</elsecondition>
					<functionstep name="SetDwellingInfoHO3PA" id="1928443388" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(businessxmltx)>
<=this.getvariable(dogxml)>
<=this.getvariable(sinkholexml)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="NC -">
					<condition name="Quality Crest Home" expression="{&lt;=this.getvariable(policync)&gt; EQUAL Quality Crest Home}" appliesto="">
						<condition name="CheckWellsFargo" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="" id="1825702535">
							<functionstep name="SetDwellXMLNC" id="2140859074" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<CoverageCd>com.safeco_EDC</CoverageCd>
<Limit>                             
<FormatPct>50</FormatPct>                        
</Limit>
<=this.getvariable(windxmlnc)>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
						</condition>
						<elsecondition>
							<functionstep name="SetDwellXMLNC2" id="669382704" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Deductible>
<FormatInteger>1</FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
						</elsecondition>
						<condition name="newcondition" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
							<functionstep name="SetDwellingInfoHO3_NC" id="1414410873" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.2)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger>10000</FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
<=this.getvariable(firexml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>)>]]></functionstep>
						</condition>
						<elsecondition>
							<functionstep name="SetDwellingInfoHO3_NC1" id="555452630" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger>10000</FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
<=this.getvariable(firexml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>)>]]></functionstep>
						</elsecondition>
					</condition>
					<elsecondition>
						<condition name="CheckWellsFargo" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="" id="1325993209">
							<functionstep name="SetDwellXMLNC3" id="970697133" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<=this.getvariable(windxmlnc)>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
						</condition>
						<elsecondition id="1408039208">
							<functionstep name="SetDwellXMLNC4" id="1142461686" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<=this.getvariable(dedxml)>
</Coverage>)>

]]></functionstep>
						</elsecondition>
						<condition name="newcondition" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
							<condition name="DwellingUse" expression="{&lt;=this.getvariable(dwellinginfo_dwellinguse)&gt; EQUAL Secondary}" appliesto="">
								<functionstep name="SetDwellingInfoHO3NC" id="480418443" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.2)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>

<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(firexml)>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
							</condition>
							<elsecondition>
								<functionstep name="SetDwellingInfoHO3NCs" id="518296012" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.2)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(firexml)>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
							</elsecondition>
						</condition>
						<elsecondition>
							<functionstep name="SetDwellingInfoHO3NC1" id="984852298" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(firexml)>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
						</elsecondition>
					</elsecondition>
				</elseifcondition>
				<elseifcondition name="State ND" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}" appliesto="">
					<condition name="CheckWellsFargo" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="" id="113294139">
						<functionstep name="SetDwellXMLND" id="1940100511" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductiblend)>)></FormatPct>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
					</condition>
					<elsecondition id="150926125">
						<functionstep name="SetDwellXMLND1" id="837575942" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Deductible>
<FormatPct>1</FormatPct>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
					</elsecondition>
					<functionstep name="SetDwellinfInfoND" id="685660694" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<=this.getvariable(resistivexml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>


<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>

<=this.getvariable(protectionclassxml)>

</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State MS" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}" appliesto="">
					<condition name="CheckWellsFargo" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="" id="572001780">
						<functionstep name="SetDwellXMLMS" id="470165959" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<Deductible>
<=this.getvariable(windxml)>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
					</condition>
					<elsecondition id="1689938923">
						<functionstep name="SetDwellXMLMS1" id="1310568019" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,)>]]></functionstep>
					</elsecondition>
					<condition name="Check Wind Deductible" expression="{&lt;=this.getvariable(coveragewinddeductible)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="SetWindDeductibleXML" id="1374222610" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxml,<FormatInteger><=this.getvariable(coveragewinddeductible)></FormatInteger>)>]]></functionstep>
					</condition>
					<functionstep name="SetDwellingMS" id="837309670" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<=this.getvariable(resistivexml)>

<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<Deductible>
<=this.getvariable(windxml)>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>


<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>

<=this.getvariable(protectionclassxml)>

</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}" appliesto="SD -">
					<functionstep name="SetDwellingSD" id="1563225069" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<=this.getvariable(resistivexml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<=this.getvariable(foundationxml)>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>


<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>

<=this.getvariable(protectionclassxml)>

</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="STATE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}" appliesto="MA -">
					<functionstep name="SetDwellingMA" id="2132734911" prompt="no" errormessage="Error setting dwelling info. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<=this.getvariable(resistivexml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<=this.getvariable(foundationxml)>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>


<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>

</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>

<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>

<=this.getvariable(protectionclassxml)>

</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="STATE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="ME -" id="593839526">
					<functionstep name="SetDwellingME" id="506917606" prompt="no" errormessage="Error setting dwelling info. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<com.safeco_PackageSelection><=this.getvariable(packagenew)></com.safeco_PackageSelection>
<=this.getvariable(exclusionxml)>
<=this.getvariable(fullvaluexml)>
<=this.getvariable(splppxml)>
<=this.getvariable(resistivexml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstoriesME)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<=this.getvariable(foundationxml)>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(dwellxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<InspectionInfo>
<InspectionCd><=this.getvariable(maintenance)></InspectionCd>
</InspectionInfo>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>
<=this.getvariable(busxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elsecondition>
					<functionstep name="SetDwellingInfoHO3MD" id="1365407270" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<Deductible>
<FormatPct><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatPct>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>

<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<=this.getvariable(replacementcost_bathinfo)>
<=this.getvariable(replacementcost_garageinfo)>
<=this.getvariable(replacementcost_kitcheninfo)>
<=this.getvariable(replacementcost_additionalstructure)>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(businessxmltx)>
</Dwell>
)>
]]></functionstep>
				</elsecondition>
			</condition>
			<condition name="PolicyType-HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="">
				<condition name="State AR" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}" appliesto="">
					<functionstep name="SetDwellingInfoHO4AR" id="1662690655" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<AreaTypeSurroundingsCd><=this.convertvalue(<=this.getvariable(dwellinginfo_withincitylimits)>, <=this.getvariable(mapcity)>)></AreaTypeSurroundingsCd>
<HousekeepingConditionCd>GD</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellOccupancy>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>

]]></functionstep>
				</condition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
					<functionstep name="SetDwellingInfoHO4CA" id="27529441" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<AreaTypeSurroundingsCd>IN</AreaTypeSurroundingsCd>
<HousekeepingConditionCd>GD</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellOccupancy>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>

<=this.getvariable(pxml)>


<=this.getvariable(spxml)>

<=this.getvariable(waterbackupxml)>

<=this.getvariable(ertqkxml)>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}" appliesto="">
					<functionstep name="SetDwellingInfoHO4MO" id="1019221196" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellOccupancy>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>

<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>


<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>

<FireProtectionClassCd><=this.convertvalue(<=this.getvariable(dwellinginfo_protectionclass)>,<=this.getvariable(mapprotectionclass)>)></FireProtectionClassCd>
</BldgProtection>


<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State KY" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="" id="1922311325">
					<functionstep name="SetDwellingInfoHO4KY" id="1876251217" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<AreaTypeSurroundingsCd>IN</AreaTypeSurroundingsCd>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellOccupancy>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO4)>)></ResidenceTypeCd>
</DwellOccupancy>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}" appliesto="MS -ND -" id="1857099702">
					<functionstep name="SetDwellingInfoHO4MS" id="1901230156" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellOccupancy>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO4)>)></ResidenceTypeCd>
</DwellOccupancy>

<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>
<=this.getvariable(busxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="STATE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MA -">
					<functionstep name="SetDwellingInfoHO4-MA" id="1136978099" prompt="no" errormessage="Error setting dwelling xml. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellOccupancy>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO4)>)></ResidenceTypeCd>
</DwellOccupancy>

<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>
<=this.getvariable(busxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
					<functionstep name="SetDwellingInfoHO4NC" id="1077170474" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellOccupancy>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>

<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>


<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<=this.getvariable(firexml)>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>
]]></functionstep>
				</elseifcondition>
				<elsecondition>
					<functionstep name="SetDwellingInfoHO4" id="455809792" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellOccupancy>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>

<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>


<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>
]]></functionstep>
				</elsecondition>
			</condition>
			<condition name="PolicyType-HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="">
				<condition name="newcondition" expression="{&lt;=this.getvariable(coverage_dwelling)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(coverage_dwelling)&gt; GREATER 0}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ME}" appliesto="">
					<functionstep name="SetCoverageLXMLAllStates" id="349903441" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coveragelxml,<Coverage>
<CoverageCd>AALMT</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
</Coverage>)>]]></functionstep>
				</condition>
				<condition name="State AR" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}" appliesto="">
					<functionstep name="SetDwellingInfoHO6AR" id="821228986" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<=this.getvariable(exclusionxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<AreaTypeSurroundingsCd><=this.convertvalue(<=this.getvariable(dwellinginfo_withincitylimits)>, <=this.getvariable(mapcity)>)></AreaTypeSurroundingsCd>
<HousekeepingConditionCd>GD</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<=this.getvariable(coveragelxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO6)>)></ResidenceTypeCd>
</DwellOccupancy>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>
]]></functionstep>
				</condition>
				<elseifcondition name="newelseifcondition" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}" appliesto="">
					<functionstep name="SetDwellingInfoHO6MN" id="1259926470" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<=this.getvariable(exclusionxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<=this.getvariable(coveragelxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO6)>)></ResidenceTypeCd>
</DwellOccupancy>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<=this.getvariable(gatedxml)>
<=this.getvariable(mannedxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="State CA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
					<functionstep name="SetDwellingInfoHO3CACrest1" id="324693664" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<=this.getvariable(exclusionxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
</Construction>
<AreaTypeSurroundingsCd>IN</AreaTypeSurroundingsCd>
<HousekeepingConditionCd>GD</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)>
</Coverage>
<=this.getvariable(splppxml)>
<=this.getvariable(coveragelxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>

<=this.getvariable(ertqkxml)>

<=this.getvariable(waterbackupxml)>

<DwellInspectionValuation>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO6)>)></ResidenceTypeCd>
</DwellOccupancy>
<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<=this.getvariable(pxml)>
<=this.getvariable(spxml)>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>


]]></functionstep>
				</elseifcondition>
				<elsecondition>
					<condition name="State NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
						<functionstep name="SetDwellingInfoHO6NC" id="1440790858" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<=this.getvariable(exclusionxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<=this.getvariable(coveragelxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO6)>)></ResidenceTypeCd>
</DwellOccupancy>

<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<=this.getvariable(gatedxml)>
<=this.getvariable(mannedxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(firexml)>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>]]></functionstep>
					</condition>
					<condition name="State is AZ" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}" appliesto="">
						<functionstep name="SetDwellingInfoHO6AZ" id="1296023768" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<=this.getvariable(exclusionxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<=this.getvariable(coveragelxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO6)>)></ResidenceTypeCd>
</DwellOccupancy>

<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<=this.getvariable(gatedxml)>
<=this.getvariable(mannedxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>]]></functionstep>
					</condition>
					<condition name="State-OR" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}" appliesto="">
						<functionstep name="SetDwellingInfoHO6OR" id="2080281521" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<=this.getvariable(exclusionxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>

</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<=this.getvariable(coveragelxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO6)>)></ResidenceTypeCd>
</DwellOccupancy>

<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<=this.getvariable(gatedxml)>
<=this.getvariable(mannedxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>]]></functionstep>
					</condition>
					<elseifcondition name="STATE" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MA -">
						<functionstep name="SetDwellingInfoHO6-MA" id="204221037" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<=this.getvariable(exclusionxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<=this.getvariable(coveragelxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO6)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_heatingtype)>)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltypeHO6)>)></HeatingUnitCd>
</HeatingUnitInfo>


<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<=this.getvariable(gatedxml)>
<=this.getvariable(mannedxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>
]]></functionstep>
					</elseifcondition>
					<elsecondition>
						<functionstep name="SetDwellingInfoHO6" id="320106937" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<=this.getvariable(exclusionxml)>
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<=this.getvariable(splppxml)>
<=this.getvariable(coveragelxml)>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO6)>)></ResidenceTypeCd>
</DwellOccupancy>

<QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase,<=this.getvariable(dwellinginfo_businessonpremises)>)></YesNoCd>
</QuestionAnswer>

<=this.getvariable(busxml)>

<=this.getvariable(gatedxml)>
<=this.getvariable(mannedxml)>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(firexml)>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
</Dwell>
)>]]></functionstep>
					</elsecondition>
				</elsecondition>
			</condition>
		</condition>
		<condition name="State-TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="" id="1342446572">
			<condition name="Single Flow" expression="{&lt;=this.getvariable(PostLoop)&gt; EQUAL 0}" appliesto="">
				<condition name="Dogs Present" expression="{&lt;=this.getvariable(dwellinginfo_dogonpremises)&gt; EQUAL Yes}" appliesto="">
					<functionstep name="SetDogs" id="1969929945" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dogxml, <AnimalExposureInfo>
<BiteHistoryInd><=this.getvariable(dogbite)></BiteHistoryInd>
<DogTypeCd>Other</DogTypeCd>
</AnimalExposureInfo>)>
]]></functionstep>
				</condition>
				<condition name="Business Present" expression="{&lt;=this.getvariable(dwellinginfo_businessonpremises)&gt; EQUAL Yes}" appliesto="" id="2080760308">
					<functionstep name="SetBusiness" id="349823511" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(businessxmltx, <QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>YES</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd>YES</YesNoCd>
</QuestionAnswer>
<NumEmployeesFullTimeResidence><=this.getvariable(dwellinginfo_fulltimedomemps)>
</NumEmployeesFullTimeResidence>)>
]]></functionstep>
				</condition>
				<elsecondition>
					<functionstep name="SetBusiness1" id="1899593231" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(businessxmltx, <QuestionAnswer>
<QuestionCd>GENRL20</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>)>
]]></functionstep>
				</elsecondition>
			</condition>
			<condition name="WellsFargo" expression="{&lt;=this.getprofilekeyvalue(wellsfargo)&gt; NOTEQUAL Yes}" appliesto="">
				<functionstep name="SetDwellXMLTX" id="402072949" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<=this.getvariable(windxml)>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="SetDwellXMLTX1" id="655172520" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellxml,<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Deductible>
<FormatInteger>1</FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>
<=this.getvariable(dedxml)>
</Coverage>)>
]]></functionstep>
			</elsecondition>
			<condition name="Other Structure" expression="{&lt;=this.getvariable(coverage_otherstructures)&gt; LESSER &lt;=this.splitindexat(&lt;=this.multiplyfloat(&lt;=this.getvariable(coverage_dwelling)&gt;, 0.1)&gt;, \., 0)&gt;}" appliesto="">
				<functionstep name="SetOtherStructure-10%OfDwellingAmount" id="2014310898" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_otherstructures, <=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)>)>]]></functionstep>
			</condition>
			<condition name="newcondition" expression="{&lt;=this.getvariable(optqualitypackage)&gt; EQUAL qualityplus}" appliesto="">
				<functionstep name="seteqpbrk" id="1274277096" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(eqpbrkxml,<Coverage>
<CoverageCd>EQPBK</CoverageCd>
<Option>      
<OptionCd><=this.getvariable(equipbreakdown)></OptionCd>
</Option>
</Coverage>)>]]></functionstep>
			</condition>
			<condition name="PolicyType-HO3" expression="{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO5}}" appliesto="" id="36702243">
				<condition name="Foundation" expression="{&lt;=this.getvariable(waterdamage)&gt; NOTEQUAL None}" appliesto="">
					<functionstep name="SetWaterFoundation" id="1693433133" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterfoundation,<Coverage>
<CoverageCd>WD</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(waterdamage)></FormatInteger>                           
</Limit>
</Coverage>)>]]></functionstep>
				</condition>
				<functionstep name="SetDwellingInfoHO3TX" id="1818013120" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(hailcreditxml)>
<=this.getvariable(waterseepagexml)>
<=this.getvariable(dwellxml)>
<=this.getvariable(exclusionxml)>
<Coverage>
<CoverageCd>com.safeco_QSPLUS</CoverageCd>
<Option>
<OptionCd><=this.getvariable(qualityplus)></OptionCd>
</Option>
</Coverage>
<=this.getvariable(eqpbrkxml)>


<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_otherstructures)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<BathroomInfo>
<BathroomTypeCd>Full</BathroomTypeCd>
<NumBathrooms><=this.getvariable(fbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>ThreeQuarter</BathroomTypeCd>
<NumBathrooms><=this.getvariable(tbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>Half</BathroomTypeCd>
<NumBathrooms><=this.getvariable(hbath)></NumBathrooms>
</BathroomInfo>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
<=this.getvariable(waterfoundation)>
<PurchaseDt><=this.getvariable(dwellinginfo_purchasedate)></PurchaseDt>
</Dwell>)>]]></functionstep>
			</condition>
			<condition name="PolicyType-HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="" id="1103313468">
				<functionstep name="SetDwellingInfoHO4TX" id="15523317" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.getvariable(dwellinginfo_numberofstories)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(hailcreditxml)>
<=this.getvariable(waterseepagexml)>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliabilityHO6)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellOccupancy>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarmho4)>)></ProtectionDeviceBurglarCd>
<com.safeco_AlarmAndSecurity>
<BurglarAlarmDate><=this.getvariable(alarmdate)></BurglarAlarmDate>
<BurglarAlarmAgent>Agent</BurglarAlarmAgent>
<ItemDefinition>
<Manufacturer>Manufacturer</Manufacturer>
</ItemDefinition>
</com.safeco_AlarmAndSecurity>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
<=this.getvariable(exclusionxml)>
</Dwell>
)>
]]></functionstep>
			</condition>
			<condition name="PolicyType-HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="" id="1454254417">
				<functionstep name="SetDwellingInfoHO6TX" id="1353797879" prompt="no" errormessage="Error setting Dwelling Information. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
</Construction>
<=this.getvariable(withincitylimit)>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<=this.getvariable(hailcreditxml)>
<=this.getvariable(waterseepagexml)>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
</Limit>
<=this.getvariable(dedxml)></Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliabilityHO6)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<=this.getvariable(coveragelxml)>
<=this.getvariable(fullvaluexml)>


<DwellInspectionValuation>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structureHO6)>)></ResidenceTypeCd>
</DwellOccupancy>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd>NO</YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarmho4)>)></ProtectionDeviceBurglarCd>
<com.safeco_AlarmAndSecurity>
<BurglarAlarmDate><=this.getvariable(alarmdate)></BurglarAlarmDate>
<BurglarAlarmAgent>Agent</BurglarAlarmAgent>
<ItemDefinition>
<Manufacturer>Manufacturer</Manufacturer>
</ItemDefinition>
</com.safeco_AlarmAndSecurity>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
<=this.getvariable(protectionclassxml)>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
<=this.getvariable(exclusionxml)>
</Dwell>)>]]></functionstep>
			</condition>
		</condition>
	</condition>
</inlinefunction>
<condition name="Test Account" expression="{&lt;=this.getprofilekeyvalue(environment)&gt; EQUAL UAT}" appliesto="">
	<functionstep name="SetTestURL" id="314746709" prompt="no" errormessage="Error setting Test URL. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(url, https://safesite.qa.safeco.com/personal/TacRC/partner/postingreceiver.aspx)>]]></functionstep>
</condition>
<elsecondition>
	<functionstep name="SetAgencyURL" id="2103077587" prompt="no" errormessage="Error setting Agent URL. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(url, https://safesite.safeco.com/personal/partner/postingreceiver.aspx)>]]></functionstep>
</elsecondition>
<functionstep name="Milestone1" id="883652904" prompt="no" errormessage="Error in setting milestone. Please contact EZLynx support for futher assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setmilestone()>]]></functionstep>
<inlinefunction name="PostingXML">
	<condition name="All States" expression="{1 EQUAL 1}" appliesto="">
		<condition name="SET XML DATA" expression="{1 EQUAL 1}" appliesto="">
			<functionstep name="SetXML" id="1206492950" prompt="no" errormessage="Error setting XMLData. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(xml, <ACORD>
<=this.getvariable(signrqxml)>

<InsuranceSvcRq>

<=this.getvariable(insurancesvcrqxml)>
<=this.getvariable(perspolicyxml)>
<=this.getvariable(applicantinfoxml)>
<=this.getvariable(coapplicantxml)>
<=this.getvariable(locationxml)>



<HomeLineBusiness>


<=this.getvariable(dwellinginfoxml)>



<QuestionAnswer>
<QuestionCd>GENRL06</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase, <=this.getvariable(dwellinginfo_propertyinscancelledlapsed)>)></YesNoCd>
</QuestionAnswer>
<=this.getvariable(sppxml)>
</HomeLineBusiness>
</HomePolicyQuoteInqRq>
</InsuranceSvcRq>
</ACORD>)>]]></functionstep>
			<functionstep name="Replace&amp;with&amp;amp" id="11448757" prompt="no" errormessage="Error formatting XML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(xml, <=java.callstringmethod(replaceAll, <=this.getvariable(xml)>, &, &amp;)>)>

]]></functionstep>
		</condition>
		<httpstep name="PostXML" id="2592144672915866">
			<script protocol="http" method="POST" timeout="0" clientauthentication="no" contenttype="text/xml" form="" httperrorstreamcapture="allow">
				<url><![CDATA[<=this.getvariable(url)>]]></url>
				<parameter type="" name="xml" value="&lt;=this.getvariable(xml)&gt;" maxlength="">
				</parameter>
			</script>
			<result errormessage="Unable to initiate Personal Lines quoting on carrier web site. Please check your carrier's site to make sure it is available. Please contact EZLynx support for further assistance." onerror="">
				<verify />
				<forms />
				<frames />
			</result>
		</httpstep>
		<functionstep name="Anonymoustep1" id="1252836184" prompt="no" errormessage="Error setting anonymoustep. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(anonymousstep, PostXML)>




]]></functionstep>
	</condition>
</inlinefunction>
<functionstep name="Milestone2" id="277225113" prompt="no" errormessage="Error in setting milestone. Please contact EZLynx support for futher assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setmilestone()>]]></functionstep>
<functionstep name="Settxdata" id="439119013" prompt="no" errormessage="Error setting quote details. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(companynum, <=this.substringregex(<=prevhttpstep.getoutputtextbuffer()>,<CompanysQuoteNumber>,\<\/CompanysQuoteNumber\>)>)>

<=this.setvariable(clientid, <=this.substringregex(<=prevhttpstep.getoutputtextbuffer()>,<com.safeco_CompanyClientID>,\<\/com.safeco_CompanyClientID\>)>)>

<=this.setvariable(qsinfo,<QuoteInfo>
<CompanysQuoteNumber><=this.getvariable(companynum)></CompanysQuoteNumber>
<com.safeco_CompanyClientID><=this.getvariable(clientid)></com.safeco_CompanyClientID>
</QuoteInfo>)>

<=this.settxdata(qsinfo<=this.getprofilekeyvalue(__APPLICANTID)><=this.getvariable(applicant_firstname)><=this.getvariable(applicant_lastname)><=this.getvariable(applicant_dob)>, <=this.getvariable(qsinfo)>)>]]></functionstep>
<condition name="PostXML Rating issue" expression="{&lt;=java.callstringmethod(indexOf, &lt;=PostXML.getoutputtextbuffer()&gt;,An error has occurred on the web server)&gt; NOTEQUAL -1}" appliesto="">
	<abortstep message="Carrier Error:An error has occurred on the web server. Please retry your request later or call us at 1-888-458-2246 for immediate assistance. We apologize for any inconvenience." name="Abort on Rating issues" id="549161394" savetest="false" savetestvalues="false" />
</condition>
<condition name="PostXML Rating issue1" expression="{&lt;=java.callstringmethod(indexOf, &lt;=PostXML.getoutputtextbuffer()&gt;,Not able to process request)&gt; NOTEQUAL -1}" appliesto="">
	<abortstep message="Carrier Error:Not able to process request. Please retry your request later or call us at 1-888-458-2246 for immediate assistance. We apologize for any inconvenience." name="abort on rating issue1" id="1966300422" savetest="false" savetestvalues="false" />
</condition>
<condition name="PostXML Rating issue2" expression="{&lt;=java.callstringmethod(indexOf, &lt;=PostXML.getoutputtextbuffer()&gt;,Internal Server Error)&gt; NOTEQUAL -1}" appliesto="" id="493345558">
	<abortstep message="Carrier Error:The server encountered an internal error or misconfiguration and was unable to complete your request. Please retry your request later or call us at 1-888-458-2246 for immediate assistance. We apologize for any inconvenience." name="abort on rating issue2" id="405678838" savetest="false" savetestvalues="false" />
</condition>
<condition name="Error Message Extraction" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL Success}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL SuccessWithChanges}" appliesto="">
	<loop name="ErrorLoop" operator="equallesser" start="1" increment="1" count="20" id="2058584900">
		<functionstep name="ExtractErrorMessage1" id="637498402" prompt="no" errormessage="Error extracting error message. Please contact EZLynx Support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ERROR,<=this.splitindexat(<=PostXML.getoutputtextbuffer()>,DataInvalid, <=this.getvariable(ErrorLoop)>)>)>

<=this.setvariable(ERROR, <=this.substringregex(<=this.splitindexat(<=this.getvariable(ERROR)>,ExtendedStatusDesc\>, 1)>, Error message: \", \")>)>

<=this.setvariable(ERROR, <=this.striphtmltags(<=this.getvariable(ERROR)>)>)>

<=this.setvariable(ERROR, <=java.callstringmethod(trim,<=this.getvariable(ERROR)>)>)>
]]></functionstep>
		<condition name="ERRORMESSAGE" expression="{&lt;=this.getvariable(ERROR)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="537384392">
			<functionstep name="SetErrorMessage" id="8522668" prompt="no" errormessage="Error setting error message. Please contact EZLynx Support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.appendvariable(ERRORMSG,<=this.getvariable(ERROR)> \<br/\>)>
]]></functionstep>
		</condition>
		<elsecondition id="1314362339">
			<functionstep name="BreakErrorLoop" id="268723137" prompt="no" errormessage="Error breaking ErrorLoop. Please contact EZLynx Support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ErrorLoop,21)>]]></functionstep>
		</elsecondition>
	</loop>
	<condition name="ERRORMESSAGE" expression="{&lt;=this.getvariable(ERRORMSG)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1155719937">
		<abortstep message="Carrier Error : &lt;=this.getvariable(ERRORMSG)&gt;" name="CarrierError021" id="793881412" savetest="false" savetestvalues="false" />
	</condition>
	<condition name="Error" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL Error}" appliesto="" id="1471417909">
		<condition name="WindHailExclusion" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; &lt;=this.substringregex(&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, Error message\: \&quot;, \&quot;)&gt; EQUAL This activity is incomplete and has not yet been rated. A minimum of 2% Windstorm or Hail deductible is mandatory in this territory.}
OR
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
AND
{{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; &lt;=this.substringregex(&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, Error message\: \&quot;, \&quot;)&gt; EQUAL This activity is incomplete and has not yet been rated. The Wind/Hail Deductible is not allowed with the Wind Exclusion}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; &lt;=this.substringregex(&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, Error message\: \&quot;, \&quot;)&gt; EQUAL This activity is incomplete and has not yet been rated. A minimum of 1% Windstorm or Hail deductible is mandatory in this territory.}}}" appliesto="">
			<condition name="WindHailExclusion" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; &lt;=this.substringregex(&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, Error message\: \&quot;, \&quot;)&gt; EQUAL This activity is incomplete and has not yet been rated. A minimum of 2% Windstorm or Hail deductible is mandatory in this territory.}" appliesto="">
				<condition name="If Consumer Portal Live is false" expression="{&lt;=this.getvariable(consumerportallive)&gt; EQUAL false}" appliesto="">
					<functionstep name="PromptWindExclusion" id="702552007" prompt="yes" errormessage="Error prompting WindDeductibleValues. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.promptselect(coverage_winddeductible, 2%|3%|4%|5%|Abort, A minimum of 2% Windstorm or Hail deductible is mandatory in this territory.Please select the required wind deductible:)>]]></functionstep>
				</condition>
				<condition name="If Consumer Portal Live is true" expression="{&lt;=this.getvariable(consumerportallive)&gt; EQUAL true}" appliesto="">
					<functionstep name="setWindExclusionforCPLive" id="1324249853" prompt="no" errormessage="Error setting WindDeductibleValues. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible, 2%)>]]></functionstep>
				</condition>
				<condition name="WindHailExlusionAbort" expression="{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL Abort}" appliesto="">
					<abortstep message="Carrier Error : &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; &lt;=this.substringregex(&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, Error message\: \&quot;, \&quot;)&gt;" name="CarrierWindExclusionError" id="778622626" savetest="false" savetestvalues="false" />
				</condition>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}" appliesto="AL -">
				<condition name="Winddeductibleblank" expression="{&lt;=this.getvariable(coverage_winddeductible)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; &lt;=this.substringregex(&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, Error message\: \&quot;, \&quot;)&gt; EQUAL This activity is incomplete and has not yet been rated. A minimum of 1% Windstorm or Hail deductible is mandatory in this territory.}" appliesto="">
					<functionstep name="SetWinddeductible" id="1748766118" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_winddeductible,1%)>]]></functionstep>
				</condition>
				<functionstep name="SetWinddeductiblemapping" id="1404485160" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_WindDeductible, 100=1|250=1|500=1|1000=1|1%=1|2%=2|3%=5|4%=5|5%=5)>]]></functionstep>
			</condition>
			<functionstep name="ExtractPolicyNumber" id="1757587756" prompt="no" errormessage="Error setting PolicyNumber. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(companysquotenumber, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/QuoteInfo/CompanysQuoteNumber,<=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
			<functionstep name="SetPolicyNumberWind" id="343278554" prompt="no" errormessage="Error setting WIndHail. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(companysquotenumber, <CompanysQuoteNumber><=this.getvariable(companysquotenumber)></CompanysQuoteNumber>)>]]></functionstep>
			<functionstep name="SetPersPolicyWindExclusion" id="1347421470" prompt="no" errormessage="Error setting WindHailExclusion. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(perspolicyxml, <PersPolicy>
<OtherOrPriorPolicy>
<PolicyCd>Prior</PolicyCd>
<InsurerName><=this.convertvalue(<=this.getvariable(coverage_priorcarrier)>, <=this.getvariable(mappriorcarrier)>)></InsurerName>
<ContractTerm>
<ExpirationDt><=this.getvariable(coverage_expiration)></ExpirationDt>
</ContractTerm>
</OtherOrPriorPolicy>
<OtherOrPriorPolicy>
<PolicyCd>Other</PolicyCd>
<InsurerName>Safeco</InsurerName>
<LOBCd>AUTO</LOBCd>
<=this.getvariable(policyxml)>
</OtherOrPriorPolicy>
<ContractTerm>
<EffectiveDt><=this.getvariable(coverage_effective)></EffectiveDt>
</ContractTerm>
<PersApplicationInfo>
<LengthTimeCurrentAddr>
<DurationPeriod>
<UnitMeasurementCd>year</UnitMeasurementCd>
<NumUnits><=this.getvariable(applicant_yearsatcurrent)></NumUnits>
</DurationPeriod>
</LengthTimeCurrentAddr>
</PersApplicationInfo>
<QuoteInfo><=this.getvariable(companysquotenumber)></QuoteInfo>

</PersPolicy>)>]]></functionstep>
			<condition name="State Not" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AL}" appliesto="AL -">
				<functionstep name="SetWindDeductibleExclusion" id="708629140" prompt="no" errormessage="Error setting Wind deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>

<=this.setvariable(dedxml, <Deductible>
<FormatInteger>2</FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="SetWindDeductibleExclusion_AL" id="1013860968" prompt="no" errormessage="Error setting Wind deductible. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(windxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_winddeductible)>, <=this.getvariable(map_WindDeductible)>)></FormatInteger>
<DeductibleAppliesToCd>WindHail</DeductibleAppliesToCd>
</Deductible>)>

<=this.setvariable(dedxml, <Deductible>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_deductible)>, <=this.getvariable(map_deductible)>)></FormatInteger>
<DeductibleAppliesToCd>AllPeril</DeductibleAppliesToCd>
</Deductible>)>]]></functionstep>
			</elsecondition>
			<condition name="Foundation" expression="{&lt;=this.getvariable(waterdamage)&gt; NOTEQUAL None}" appliesto="">
				<functionstep name="SetWaterFoundation1" id="300396730" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(waterfoundation,<Coverage>
<CoverageCd>WD</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(waterdamage)></FormatInteger>                           
</Limit>
</Coverage>)>
]]></functionstep>
			</condition>
			<functionstep name="SetDwellingWindExclusionTX" id="1210122473" prompt="no" errormessage="Error setting WIndHail. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(dwellinginfoxml, <Dwell LocationRef="001">
<PolicyTypeCd><=this.convertvalue(<=this.getvariable(coverage_policytype)>, <=this.getvariable(map_policy)>)></PolicyTypeCd>
<Construction>
<YearBuilt><=this.getvariable(dwellinginfo_yearbuilt)></YearBuilt>
<ConstructionCd><=this.convertvalue(<=this.getvariable(dwellinginfo_construction)>, <=this.getvariable(map_construction)>)></ConstructionCd>
<TerritoryCd></TerritoryCd>
<NumStories><=this.convertvalue(<=this.getvariable(dwellinginfo_numberofstories)>, <=this.getvariable(mapnumberofstories)>)></NumStories>
<RoofingMaterial>
<RoofMaterialCd><=this.convertvalue(<=this.getvariable(dwellinginfo_roof)>, <=this.getvariable(map_roof)>)></RoofMaterialCd>
</RoofingMaterial>
<FoundationCd><=this.getvariable(coverage_Foundations)></FoundationCd>
</Construction>
<AreaTypeSurroundingsCd>IN</AreaTypeSurroundingsCd>
<HousekeepingConditionCd>E</HousekeepingConditionCd>
<Coverage>
<CoverageCd>DWELL</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_dwelling)></FormatInteger>
</Limit>
<=this.getvariable(windxml)>
<=this.getvariable(dedxml)>
</Coverage>
<Coverage>
<CoverageCd>com.safeco_QSPLUS</CoverageCd>
<Option>
<OptionCd><=this.getvariable(qualityplus)></OptionCd>
</Option>
</Coverage>

<Coverage>
<CoverageCd>OS</CoverageCd>
<Limit>
<FormatInteger><=this.splitindexat(<=this.multiplyfloat(<=this.getvariable(coverage_dwelling)>, 0.1)>, \., 0)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PP</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_personalproperty)></FormatInteger>
<LimitAppliesToCd>Contents</LimitAppliesToCd>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>PL</CoverageCd>
<Limit>
<FormatInteger><=this.convertvalue(<=this.getvariable(coverage_personalliability)>, <=this.getvariable(map_personalliability)>)></FormatInteger>
</Limit>
</Coverage>
<Coverage>
<CoverageCd>MEDPM</CoverageCd>
<Limit>
<FormatInteger><=this.getvariable(coverage_medicalpayments)></FormatInteger>
</Limit>
</Coverage>
<DwellInspectionValuation>
<TotalArea>
<NumUnits><=this.getvariable(dwellinginfo_squarefootage)></NumUnits>
<UnitMeasurementCd>square foot</UnitMeasurementCd>
</TotalArea>
<NumFamilies><=this.convertvalue(<=this.getvariable(dwellinginfo_dwelling)>, <=this.getvariable(map_dwelling)>)></NumFamilies>
<BathroomInfo>
<BathroomTypeCd>Full</BathroomTypeCd>
<NumBathrooms><=this.getvariable(fbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>ThreeQuarter</BathroomTypeCd>
<NumBathrooms><=this.getvariable(tbath)></NumBathrooms>
</BathroomInfo>
<BathroomInfo>
<BathroomTypeCd>Half</BathroomTypeCd>
<NumBathrooms><=this.getvariable(hbath)></NumBathrooms>
</BathroomInfo>
<ExteriorWallMaterialInfo>
<ExteriorWallMaterialCd><=this.getvariable(exteriorwalls)></ExteriorWallMaterialCd>
</ExteriorWallMaterialInfo>
<DwellStyleCd><=this.getvariable(constructionstyle)></DwellStyleCd>
</DwellInspectionValuation>
<DwellOccupancy>
<OccupancyTypeCd>OWNER</OccupancyTypeCd>
<DwellUseCd><=this.convertvalue(<=this.getvariable(dwellinginfo_dwellinguse)>, <=this.getvariable(map_useage)>)></DwellUseCd>
<ResidenceTypeCd><=this.convertvalue(<=this.getvariable(dwellinginfo_structure)>, <=this.getvariable(map_structure)>)></ResidenceTypeCd>
</DwellOccupancy>
<HeatingUnitInfo>
<FuelTypeCd><=this.getvariable(dwellinginfo_heatingtype)></FuelTypeCd>
<HeatingUnitCd><=this.convertvalue(<=this.getvariable(dwellinginfo_heatingtype)>, <=this.getvariable(map_fueltype)>)></HeatingUnitCd>
</HeatingUnitInfo>
<QuestionAnswer>
<QuestionCd>GENRL15</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpool)>, <=this.getvariable(map_swimmingpool)>)></YesNoCd>
</QuestionAnswer>
<QuestionAnswer>
<QuestionCd>GENRL16</QuestionCd>
<YesNoCd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpoolfenced)>, <=this.getvariable(map_swimmingpoolfenced)>)></YesNoCd>
</QuestionAnswer>

<QuestionAnswer>
<QuestionCd>com.safeco_BusinessIncidental</QuestionCd>
<YesNoCd><=this.getvariable(business)></YesNoCd>
</QuestionAnswer>
<BldgProtection>
<DistanceToFireStation>
<NumUnits><=this.getvariable(dwellinginfo_distancetofirestation)></NumUnits>
</DistanceToFireStation>
<DistanceToHydrant>
<NumUnits><=this.convertvalue(<=this.getvariable(dwellinginfo_distancetofirehydrant)>, <=this.getvariable(mapdistancetofirehydrant)>)></NumUnits>
</DistanceToHydrant>
<ProtectionDeviceBurglarCd><=this.convertvalue(<=this.getvariable(endorsements_burglarbaseprotectiondevice)>, <=this.getvariable(map_burglaralarm)>)></ProtectionDeviceBurglarCd>
<ProtectionDeviceSprinklerCd><=this.convertvalue(<=this.getvariable(endorsements_sprinkler)>, <=this.getvariable(map_sprinkler)>)></ProtectionDeviceSprinklerCd>
</BldgProtection>
<BldgImprovements>
<=this.getvariable(updatexml)>
</BldgImprovements>
<=this.getvariable(endorsements)>
<SwimmingPool>
<AboveGroundInd><=this.convertvalue(<=this.getvariable(dwellinginfo_swimmingpooltype)>, <=this.getvariable(mapswimmingpooltype)>)></AboveGroundInd>
</SwimmingPool>
<=this.getvariable(dogxml)>
<=this.getvariable(businessxmltx)>
<=this.getvariable(exclusionxml)>
<=this.getvariable(waterfoundation)>
</Dwell>)>]]></functionstep>
			<functionstep name="SetXMLWindExclusion" id="1329610081" prompt="no" errormessage="Error setting XMLData. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(xml, <ACORD>
<=this.getvariable(signrqxml)>

<InsuranceSvcRq>

<=this.getvariable(insurancesvcrqxml)>
<=this.getvariable(perspolicyxml)>
<=this.getvariable(applicantinfoxml)>
<=this.getvariable(coapplicantxml)>
<=this.getvariable(locationxml)>



<HomeLineBusiness>

<=this.getvariable(dwellinginfoxml)>


<QuestionAnswer>
<QuestionCd>GENRL06</QuestionCd>
<YesNoCd><=java.callstringmethod(toUpperCase, <=this.getvariable(dwellinginfo_propertyinscancelledlapsed)>)></YesNoCd>
</QuestionAnswer>
<=this.getvariable(sppxml)>
</HomeLineBusiness>
</HomePolicyQuoteInqRq>
</InsuranceSvcRq>
</ACORD>)>
]]></functionstep>
			<functionstep name="Replace&amp;with&amp;ampWindHail" id="760535773" prompt="no" errormessage="Error setting XML. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(xml, <=java.callstringmethod(replaceAll, <=this.getvariable(xml)>, &, &amp;)>)>]]></functionstep>
			<httpstep name="PostXMLWindExclusion" id="517086849">
				<script protocol="http" method="POST" timeout="0" clientauthentication="no" contenttype="text/xml" form="" id="1661929654">
					<url id="1712534689"><![CDATA[<=this.getvariable(url)>]]></url>
					<parameter type="" name="xml" value="&lt;=this.getvariable(xml)&gt;" maxlength="" id="544955394">
					</parameter>
				</script>
				<result errormessage="Unable to initiate Personal Lines quoting on carrier web site. Please check your carrier's site to make sure it is available. Please contact EZLynx support for further assistance." onerror="" id="114581910">
					<verify id="1211746135" />
					<forms id="2007537784" />
					<frames id="1778169241" />
				</result>
			</httpstep>
			<functionstep name="Anonymousstep" id="1493710218" prompt="no" errormessage="Error setting anonymoustep. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(anonymousstep, PostXMLWindExclusion)>]]></functionstep>
		</condition>
		<elseifcondition name="Check If Error Message is Blank" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; &lt;=this.substringregex(&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, Error message\: \&quot;, \&quot;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<abortstep message="Carrier Error : &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; &lt;=this.substringregex(&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, Error message\: \&quot;, \&quot;)&gt;" name="CarrierError" id="1027663433" savetest="false" savetestvalues="false" />
		</elseifcondition>
		<elseifcondition name="Check for ChoicePoint Error" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgErrorCd, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; EQUAL GeneralFailure}" appliesto="">
			<abortstep message="Carrier Error : &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgErrorCd, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt;: &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/RemarkText, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt;" name="CarrierError02" id="1357800695" savetest="false" savetestvalues="false" />
		</elseifcondition>
		<elsecondition>
			<abortstep message="Carrier Error : &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; &lt;=this.substringregex(&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus[2]/ExtendedStatusDesc, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, Error message\: \&quot;, \&quot;)&gt;" name="CarrierError01" id="1809936073" savetest="false" savetestvalues="false" />
		</elsecondition>
	</condition>
	<elseifcondition name="Check Error" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/Status/StatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
		<abortstep message="Carrier Error : &lt;=this.extractxpathvaluefrombuffer(/ACORD/Status/StatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt;" name="CarrierError1" id="1556692587" savetest="false" savetestvalues="false" />
	</elseifcondition>
	<elseifcondition name="System Error" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusCd, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; EQUAL Rejected}" appliesto="">
		<condition name="Check System Error" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<abortstep message="Carrier Error : An error has occurred on the carrier site while processing your quote.Please contact EZLynx support for further assistance." name="SystemError_01" id="734883317" savetest="false" savetestvalues="false" />
		</condition>
		<condition name="Check System Error" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; EQUAL For Underwriting reasons, we are unable to offer you a quote at this time. A quote may be available through Safeco's Quote &amp; Issue system.}" appliesto="" id="1489313646">
			<abortstep message="Carrier Error : &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=prevhttpstep.getoutputtextbuffer()&gt;)&gt;. &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; For more information, you may contact Safeco Underwriting at 1-877-566-6001. (318)." name="SystemError_02" id="1852783019" savetest="false" savetestvalues="false" />
		</condition>
		<condition name="CRI-28319" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=prevhttpstep.getoutputtextbuffer()&gt;)&gt;, Exposure to Catastrophic Losses at the Location)&gt; NOTEQUAL -1}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
			<abortstep message="Carrier Error : Exposure to Catastrophic Losses at the Location." name="CatastrophicLossTX" id="998569686" savetest="false" savetestvalues="false" />
		</condition>
		<condition name="newcondition" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt;,A Safeco real time rate has not been returned for this particular risk)&gt; NOTEQUAL -1}" appliesto="">
			<abortstep message="Carrier Error : Safeco is unable to quote this risk at this time. Please contact your Safeco Representative for any further questions." name="SystemError12" id="764165296" savetest="false" savetestvalues="false" />
		</condition>
		<abortstep message="Carrier Error : &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=prevhttpstep.getoutputtextbuffer()&gt;)&gt;. &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt;" name="SystemError" id="1324260218" savetest="false" savetestvalues="false" />
	</elseifcondition>
	<elsecondition>
		<abortstep message="Carrier Error : Error processing quote. Please contact EZLynx support for further assistance." name="CarrierError2" id="1560003063" savetest="false" savetestvalues="false" />
	</elsecondition>
	<condition name="Check Catastrophic Losses" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusCd, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; EQUAL Rejected}" appliesto="">
		<abortstep message="Carrier Error : &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt;. &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt;" name="CatastrophicLoss" id="573264019" savetest="false" savetestvalues="false" />
	</condition>
	<condition name="Check Catastrophic Losses" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusCd, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; EQUAL Error}" appliesto="">
		<abortstep message="Carrier Error : An error has occurred on the carrier site while processing your quote.Please contact EZLynx support for further assistance." name="SystemError_03" id="1954742435" savetest="false" savetestvalues="false" />
	</condition>
</condition>
<condition name="Successful Post" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusCd, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; EQUAL Success}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusCd, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; EQUAL SuccessWithChanges}" appliesto="">
	<functionstep name="ExtractPremium" id="1784388896" prompt="no" errormessage="Error extracting premium. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premium, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PolicySummaryInfo/FullTermAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(link, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/  com.safeco_AutoLogonURL, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(lineofbusiness_rt, Home)>

<=this.setvariable(creditscore_rt, Yes)>

<=this.setvariable(homepremium_rt, <=this.getvariable(premium)>)>

<=this.setvariable(payplanmsg_rt, Yes)>

<=this.setvariable(buffer,<=anonymous.getoutputtextbuffer()>)>

<=this.setvariable(quickaccessurl, <=java.callstringmethod(replaceAll, <=this.getvariable(link)>, &, &amp;)>)>

<=this.setvariable(hometotalpremium_rt, <=this.getvariable(homepremium_rt)>)>

<=this.setvariable(premium_ss, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PolicySummaryInfo/FullTermAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
	<condition name="Check SecondShelf Premuim" expression="{&lt;=this.getvariable(premium_ss)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 0}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 1}}" appliesto="">
		<functionstep name="SetAlternateQuoteInd-Safeco" id="1677352449" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(alternatequotepresent,Yes)>
<=this.setvariable(alternatequotedetailspresent,Yes)>

]]></functionstep>
		<condition name="CheckAlternateQuoteDisabled" expression="{&lt;=this.getprofilekeyvalue(alternatequotedisable)&gt; EQUAL Yes}
OR
{&lt;=this.getprofilekeyvalue(alternatequotedisable)&gt; EQUAL yes}" appliesto="">
			<functionstep name="SetAltQuoteNo" id="1227933862" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(alternatequotepresent,No)>]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="SetAlterquotePresent" id="1891425343" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(altindicator,_SS)>
<=this.setvariable(secondshelfpremium,Yes)>


]]></functionstep>
		</elsecondition>
		<condition name="SecondShelfDetails" expression="{&lt;=this.getvariable(premium_ss)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(alternatequotepresent)&gt; NOTEQUAL No}
AND
{{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 0}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 1}}" appliesto="">
			<functionstep name="ExtractSecondShelfDetails" id="1919957188" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(link_ss, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/com.safeco_AutoLogonURL, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(homepremium_rt_ss, <=this.getvariable(premium_ss)>)>

<=this.setvariable(hometotalpremium_rt_ss, <=this.getvariable(premium_ss)>)>

<=this.setvariable(quickaccessurl_SS, <=java.callstringmethod(replaceAll, <=this.getvariable(link_ss)>, &, &amp;)>)>
]]></functionstep>
		</condition>
		<condition name="Check If PIF present" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}}
AND
{&lt;=java.callstringmethod(indexOf, &lt;=anonymous.getoutputtextbuffer()&gt;,com.safeco_QuoteRq_PremiumTotalPIF)&gt; NOTEQUAL -1}" appliesto="CA -" id="808478406">
			<functionstep name="ExtractPIFPremiumSS" id="2060085988" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumPIF_ss,<=this.substringregex(<=this.splitindexat(<=anonymous.getoutputtextbuffer()>,com.safeco_QuoteRq_PremiumTotalPIF,3)>,\>,\<)>)>]]></functionstep>
			<condition name="Premium condition" expression="{&lt;=func.premiumRegexCheckHome(&lt;=this.getvariable(premiumPIF_ss)&gt;)&gt; EQUAL true}" appliesto="" id="1183096101">
				<functionstep name="ResetPremiumSS" id="397080513" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premium_ss,<=this.getvariable(premiumPIF_ss)>)>
<=this.setvariable(homepremium_rt_ss, <=this.getvariable(premium_ss)>)>]]></functionstep>
			</condition>
		</condition>
		<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MS -ND -" id="1721276804">
			<functionstep name="ExtractPremiumMS_SS" id="1157789301" prompt="no" errormessage="Error extracting premium. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[

<=this.setvariable(link_ss, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs[2]/com.safeco_CompanyURL, <=anonymous.getoutputtextbuffer()>)>)>



<=this.setvariable(quickaccessurl_SS, <=java.callstringmethod(replaceAll, <=this.getvariable(link_ss)>, &, &amp;)>)>

]]></functionstep>
		</condition>
		<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/MsgStatus/QuoteTitle,&lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<functionstep name="ALTMSG" id="1903876504" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount_SS)>

<=this.setvariable(ratingattribute<=this.getvariable(ratingcount_SS)>_SS, Alternate)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/MsgStatus/QuoteTitle, <=PostXML.getoutputtextbuffer()>)>)>

]]></functionstep>
		</condition>
		<elsecondition>
			<functionstep name="ALTMSG1" id="801607379" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount_SS)>

<=this.setvariable(ratingattribute<=this.getvariable(ratingcount_SS)>_SS, Alternate)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>, Alternate Quote)>

]]></functionstep>
		</elsecondition>
		<functionstep name="SetIssuingCompanySS" id="1637278426" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(issuingcompany_ss, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/InsurerName, <=anonymous.getoutputtextbuffer()>)>)>


<=this.setvariable(quotemessage_rt_SS, Issuing Company = <=this.getvariable(issuingcompany_ss)>)>

<=this.plusone(ratingcount_SS)>

<=this.setvariable(ratingattribute<=this.getvariable(ratingcount_SS)>, Issuing Company)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>_SS, <=this.getvariable(issuingcompany_ss)>)>
]]></functionstep>
		<condition name="Premium condition" expression="{1 EQUAL 1}" appliesto="" id="1150451688">
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL FL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="AL -AR -AZ -CO -GA -ID -IL -IN -KS -KY -LA -MD -MN -MO -MS -NC -NE -NH -NM -NV -NY -OK -OR -PA -UT -VA -VT -WA -" id="1019658181">
				<functionstep name="ExtractPaymentPlans_SS" id="623314095" prompt="no" errormessage="Error extracting Payment Plans. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(monthlydownpayss1, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[2]/DepositAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlydownpayss2, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[3]/DepositAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>


<=this.setvariable(monthlydescss1, 4 Pay)>

<=this.setvariable(monthlydescss2, Monthly Pay)>

<=this.setvariable(monthlyinstallss1, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[2]/InstallmentInfo/InstallmentAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlyinstallss2, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[3]/InstallmentInfo/InstallmentAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(montlytotalpremiumss,<=this.splitindexat(<=anonymous.getoutputtextbuffer()>,InsuranceSvcRs,3)>)>

<=this.setvariable(montlytotalpremiumss,<=this.splitindexat(<=this.getvariable(montlytotalpremiumss)>,com.safeco_QuoteRq_PremiumTotal,1)>)>

<=this.setvariable(montlytotalpremiumss,<=this.substringregex(<=this.getvariable(montlytotalpremiumss)>,\>,\<)>)>

<=this.setvariable(monthlytotal_rt2_SS,<=this.getvariable(montlytotalpremiumss)>)>

<=this.plusone(eftcount_SS)>

<=this.setvariable(eftdesc_rt1_SS,Monthly Pay)>

<=this.setvariable(efttotal_rt1_SS,<=this.getvariable(montlytotalpremiumss)>)>

<=this.setvariable(eftdownpay_rt1_SS,<=this.getvariable(monthlydownpayss2)>)>

<=this.setvariable(eftinstallpay_rt1_SS,<=this.getvariable(monthlyinstallss2)>)>

<=this.setvariable(monthlytotalpremiumss1, )>
<=this.setvariable(monthlytotalpremiumss2, )>]]></functionstep>
				<condition name="PayPlan" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WI}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AZ}" appliesto="" id="707470732">
					<loop name="MonthlyLoop" operator="equallesser" start="1" increment="1" count="2" id="868147131">
						<condition name="Check" expression="{&lt;=this.getvariable(monthlydownpayss&lt;=this.getvariable(MonthlyLoop)&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="260996829">
							<functionstep name="SetPaymentPlan_SS" id="1533295849" prompt="no" errormessage="Error extracting Payment Plans. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(monthlycount_SS)>

<=this.setvariable(monthlydownpay_rt<=this.getvariable(monthlycount_SS)>_SS, <=this.getvariable(monthlydownpayss<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlydesc_rt<=this.getvariable(monthlycount_SS)>_SS, <=this.getvariable(monthlydescss<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlyinstallpay_rt<=this.getvariable(monthlycount_SS)>_SS, <=this.getvariable(monthlyinstallss<=this.getvariable(MonthlyLoop)>)>)>
]]></functionstep>
						</condition>
					</loop>
				</condition>
			</condition>
			<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MS -SD -" id="699967657">
				<functionstep name="ExtractPaymentPlansMS_SS" id="1918362978" prompt="no" errormessage="Error extracting Payment Plans. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(monthlydownpayss1, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[2]/DepositAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlydownpayss2, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[3]/DepositAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlydownpayss3, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[11]/DepositAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>


<=this.setvariable(monthlydescss1, 4 Pay)>

<=this.setvariable(monthlydescss2, Monthly Pay)>

<=this.setvariable(monthlydescss3, 2 Pay)>

<=this.setvariable(monthlyinstallss1, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[2]/InstallmentInfo/InstallmentAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlyinstallss2, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[4]/InstallmentInfo/InstallmentAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlyinstallss3, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[11]/InstallmentInfo/InstallmentAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(montlytotalpremiumss,<=this.splitindexat(<=anonymous.getoutputtextbuffer()>,InsuranceSvcRs,3)>)>

<=this.setvariable(montlytotalpremiumss,<=this.splitindexat(<=this.getvariable(montlytotalpremiumss)>,com.safeco_QuoteRq_PremiumTotal,1)>)>

<=this.setvariable(montlytotalpremiumss,<=this.substringregex(<=this.getvariable(montlytotalpremiumss)>,\>,\<)>)>

<=this.setvariable(monthlytotal_rt2_SS,<=this.getvariable(montlytotalpremiumss)>)>

<=this.plusone(eftcount_SS)>

<=this.setvariable(eftdesc_rt1_SS,Monthly Pay)>

<=this.setvariable(efttotal_rt1_SS,<=this.getvariable(montlytotalpremiumss)>)>

<=this.setvariable(eftdownpay_rt1_SS,<=this.getvariable(monthlydownpayss2)>)>

<=this.setvariable(eftinstallpay_rt1_SS,<=this.getvariable(monthlyinstallss2)>)>]]></functionstep>
				<condition name="PayPlan" expression="{1 EQUAL 1}" appliesto="" id="199799296">
					<loop name="MonthlyLoop" operator="equallesser" start="1" increment="1" count="3" id="90047090">
						<condition name="Check" expression="{&lt;=this.getvariable(monthlydownpayss&lt;=this.getvariable(MonthlyLoop)&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="600123177">
							<functionstep name="SetPaymentPlanMS_SS" id="798471360" prompt="no" errormessage="Error extracting Payment Plans. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(monthlycount_SS)>

<=this.setvariable(monthlydownpay_rt<=this.getvariable(monthlycount_SS)>_SS, <=this.getvariable(monthlydownpayss<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlydesc_rt<=this.getvariable(monthlycount_SS)>_SS, <=this.getvariable(monthlydescss<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlyinstallpay_rt<=this.getvariable(monthlycount_SS)>_SS, <=this.getvariable(monthlyinstallss<=this.getvariable(MonthlyLoop)>)>)>
]]></functionstep>
						</condition>
					</loop>
				</condition>
			</condition>
			<condition name="Pay Plans" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}" appliesto="" id="1594982752">
				<loop name="MonthlyLoop" operator="equallesser" start="1" increment="1" count="6" id="1775670197">
					<functionstep name="SetMonthlyTotalPremiumaa_New_SS" id="534713123" prompt="no" errormessage="Error setting EFT total premium. Please contact EZLynx support team for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(monthlydescriptionss<=this.getvariable(MonthlyLoop)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[<=this.getvariable(MonthlyLoop)>]/Description, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlydescss<=this.getvariable(MonthlyLoop)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[<=this.getvariable(MonthlyLoop)>]/NumPayments, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlydownpayss<=this.getvariable(MonthlyLoop)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[<=this.getvariable(MonthlyLoop)>]/DepositAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlyinstallss<=this.getvariable(MonthlyLoop)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[<=this.getvariable(MonthlyLoop)>]/InstallmentInfo/InstallmentAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(montlytotalpremiumss,<=this.splitindexat(<=anonymous.getoutputtextbuffer()>,InsuranceSvcRs,3)>)>

<=this.setvariable(montlytotalpremiumss,<=this.splitindexat(<=this.getvariable(montlytotalpremiumss)>,com.safeco_QuoteRq_PremiumTotal,1)>)>

<=this.setvariable(montlytotalpremiumss,<=this.substringregex(<=this.getvariable(montlytotalpremiumss)>,\>,\<)>)>
]]></functionstep>
					<condition name="Check" expression="{&lt;=this.getvariable(monthlydownpayss&lt;=this.getvariable(MonthlyLoop)&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(monthlydescriptionss&lt;=this.getvariable(MonthlyLoop)&gt;)&gt; EQUAL Monthly By Mail}" appliesto="" id="2081899478">
						<functionstep name="SetPaymentPlan_new_SS" id="828229201" prompt="no" errormessage="Error extracting Payment Plans. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(monthlycount_SS)>

<=this.setvariable(monthlydownpay_rt<=this.getvariable(monthlycount_SS)>_SS, <=this.getvariable(monthlydownpayss<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlydesc_rt<=this.getvariable(monthlycount_SS)>_SS, <=this.getvariable(monthlydescss<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlyinstallpay_rt<=this.getvariable(monthlycount_SS)>_SS, <=this.getvariable(monthlyinstallss<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlytotal_rt<=this.getvariable(monthlycount_SS)>_SS,<=this.getvariable(hometotalpremium_rt_ss)>)>

]]></functionstep>
					</condition>
				</loop>
			</condition>
			<condition name="Rating Messages" expression="{1 EQUAL 1}" appliesto="" id="39232580">
				<functionstep name="Rating1_SS" id="1301929045" prompt="no" errormessage="Error extracting rating message. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount_SS)>

<=this.setvariable(ratingmessagess1, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus/ExtendedStatusCD/ExtendedStatusDesc, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>_SS, <=this.getvariable(ratingmessagess1)>)>

<=this.setvariable(paymentplantype1, Total Premium)>]]></functionstep>
			</condition>
			<condition name="State CA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
AND
{&lt;=this.getvariable(endorsements_earthquake_deductible)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="771461035">
				<functionstep name="EQRatingMsg_SS" id="1781411714" prompt="no" errormessage="Error extracting rating message. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, Earth Quake endorsement is not offered as an endorsement to this home quote.)>]]></functionstep>
			</condition>
			<condition name="Rating" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}}
AND
{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,Review  NOTEQUAL -1}" appliesto="" id="1624772022">
				<functionstep name="RatingMsgND_SS" id="970948069" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount_SS)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>_SS, Review Safecos Essential\, New Quality Plus and Optimum Packages for included coverage.)>]]></functionstep>
			</condition>
			<condition name="RatingMsg" expression="{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL Yes}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}}" appliesto="" id="1675367291">
				<condition name="newcondition" expression="{&lt;=this.getvariable(rating1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="715765424">
					<functionstep name="SetEarthQuakeRatingMsg_SS" id="1514421521" prompt="no" errormessage="Error setting  rating message. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(ratingmessage1,Safeco Doesnot have earthquake endorsment in state <=this.getvariable(dwellingstatecode)>)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, <=this.getvariable(ratingmessage1)>)>]]></functionstep>
				</condition>
				<elsecondition id="1083497085">
					<functionstep name="SetEarthQuakeRatingMsg1_SS" id="2117517052" prompt="no" errormessage="Error setting  rating message. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ratingmessage1,Safeco Doesnot have earthquake endorsment in state <=this.getvariable(dwellingstatecode)>)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>_SS, <=this.getvariable(ratingmessage1)>)>]]></functionstep>
				</elsecondition>
			</condition>
			<condition name="Rating" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,Deductible has been adjusted to meet minimum)&gt; NOTEQUAL -1}" appliesto="" id="1255577535">
				<functionstep name="RatingMsgAll_SS" id="556950861" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount_SS)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>_SS, Deductible has been adjusted to meet minimum underwriting guidelines.)>]]></functionstep>
			</condition>
			<condition name="SCC-10834" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="" id="991938743">
				<condition name="Rating" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,The premium returned for Premier includes all benefits at the Safeco Essential)&gt; NOTEQUAL -1}" appliesto="" id="267000556">
					<functionstep name="RatingMsgPremier-IL_SS" id="1170131686" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount_SS)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>_SS, The premium returned for Premier includes all benefits at the Safeco Essential\, New Quality-Plus\, Optimum\, and Ultra levels in addition to 100% Extended Dwelling Coverage\, 100% Building Ordinance or Law\, Special Limits for Personal Property\, Personal Property Replacement Cost\, Personal Offense. For more details\, please consult Safeco's Product Guide.)>]]></functionstep>
				</condition>
			</condition>
			<condition name="SCC-10834" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}" appliesto="" id="311245433">
				<condition name="Rating" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,The premium returned for Premier includes all benefits at the Safeco Essential)&gt; NOTEQUAL -1}" appliesto="" id="391186138">
					<functionstep name="RatingMsgPremier_SS" id="1286205869" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount_SS)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>_SS, The premium returned for Premier includes all benefits at the Safeco Essential\, New Quality-Plus\, Optimum\, and Ultra levels in addition to 100% Extended Dwelling Coverage\, 100% Building Ordinance or Law\, 100% Water Backup\, Special Limits for Personal Property\, Personal Property Replacement Cost\, Personal Offense. For more details\, please consult Safeco’s Product Guide.)>]]></functionstep>
				</condition>
			</condition>
			<condition name="State-MI-WA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}" appliesto="" id="438930493">
				<condition name="SCC-9280-9281" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,The premium includes the closest limit available for BOLAW in a higher Coverage Level since the requested limit is not offered with the current Homeowner Coverage Level selected.)&gt; NOTEQUAL -1}" appliesto="" id="1093844302">
					<functionstep name="Ordinance-law message_SS" id="1774735493" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount_SS)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>_SS, The premium includes the closest limit available for BOLAW in a higher Coverage Level since the requested limit is not offered with the current Homeowner Coverage Level selected.)>]]></functionstep>
				</condition>
				<condition name="SCC-9280-9281" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,The premium includes the closest limit available for EDC in a higher Coverage Level since the requested limit is not offered with the current Homeowner Coverage Level selected.)&gt; NOTEQUAL -1}" appliesto="" id="1669694714">
					<functionstep name="ExtendedReplacement- Message_SS" id="346294921" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount_SS)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>_SS, The premium includes the closest limit available for EDC in a higher Coverage Level since the requested limit is not offered with the current Homeowner Coverage Level selected.)>]]></functionstep>
				</condition>
			</condition>
			<condition name="State-TX-SCC-9289" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}}
AND
{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL Yes}" appliesto="" id="159714517">
				<condition name="ConstructionType-TX" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,Earthquake Deductible is required and is rated as 15% to meet minimum Underwriting guidelines.)&gt; NOTEQUAL -1}" appliesto="" id="622561136">
					<functionstep name="RatingMessage-Earthquake_SS" id="558926433" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount_SS)>

<=this.setvariable(rating<=this.getvariable(ratingcount_SS)>_SS, Earthquake Deductible is required and is rated as 15% to meet minimum Underwriting guidelines.)>]]></functionstep>
				</condition>
			</condition>
			<condition name="Premium Breakdown" expression="{1 EQUAL 1}" appliesto="" id="225763012">
				<functionstep name="Setpremiumbreakdownvariables_SS" id="1055864985" prompt="no" errormessage="Error setting premium breakdowns. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragebreakdownpremium_SS, Yes)>

<=this.setvariable(endorsementbreakdownpremium_SS, Yes)>

<=this.setvariable(premiumdesc_SS, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(premiumamount_SS, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(spppremiumdesc_SS, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(spppremiumamount_SS, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(spptotalamount_SS , 0.0)>

<=this.setvariable(windhailvalue_SS, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(allperilvalue_SS, <=java.callstringmethod(anonymous, VK_BLANK)>)>]]></functionstep>
				<loop name="BreakdownLoop" operator="equallesser" start="1" increment="1" count="50" id="1922400791">
					<functionstep name="Extractbuffer_SS" id="1186748556" prompt="no" errormessage="Error extracting buffer. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumdesc_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/CoverageCd, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(premiumamount_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/CurrentTermAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(premiumamount_SS, <=java.callstringmethod(replaceFirst, <=this.getvariable(premiumamount_SS)>, ^0+, <=java.callstringmethod(anonymous, VK_BLANK)>)>)>]]></functionstep>
					<condition name="Check dwelling amount" expression="{{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL DWELL}
OR
{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL AALMT}}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="2091327629">
						<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL INCL}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1689618037">
							<functionstep name="setdwellingamount1_SS" id="51411953" prompt="no" errormessage="Error setting dwelling amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_dwelling_amount_SS, INCLUDED)>

<=this.setvariable(homecoveragepremium_dwelling_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(coverage_dwelling,  $<=this.getvariable(homecoveragepremium_dwelling_limit_SS)>)>

<=this.setvariable(coverage_replacementcost, $<=this.getvariable(homecoveragepremium_dwelling_limit_SS)>)>

<=this.setvariable(homecoveragepremium_dwelling_limit_SS, $<=this.getvariable(homecoveragepremium_dwelling_limit_SS)>)>

<=this.setvariable(windhailvalue_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(allperilvalue_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
						</condition>
						<elsecondition id="1943431914">
							<functionstep name="setdwellingamount_SS" id="1520763524" prompt="no" errormessage="Error setting dwelling amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(homecoveragepremium_dwelling_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(homecoveragepremium_dwelling_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_dwelling_limit_SS,WOD)>

<=this.setvariable(coverage_dwelling, $<=this.getvariable(homecoveragepremium_dwelling_limit_SS)>)>

<=this.setvariable(coverage_replacementcost, $<=this.getvariable(homecoveragepremium_dwelling_limit_SS)>)>

<=this.setvariable(homecoveragepremium_dwelling_limit_SS, $<=this.getvariable(homecoveragepremium_dwelling_limit_SS)>)>

<=this.setvariable(windhailvalue_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(allperilvalue_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
						</elsecondition>
					</condition>
					<condition name="AllPeril" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL AllPeril}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL AllPeril}" appliesto="" id="433866900">
						<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL AllPeril}" appliesto="" id="692485268">
							<condition name="Check Deductible Present" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="88906387">
								<condition name="If Ded value 1%" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, %)&gt; NOTEQUAL -1}" appliesto="" id="1060329591">
									<functionstep name="SetAllPeril%1_SS" id="1334739530" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, All Perils Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>%)>]]></functionstep>
								</condition>
								<elsecondition id="279762685">
									<functionstep name="SetAllPeril1_SS" id="2090899154" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, All Perils Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
								</elsecondition>
							</condition>
						</condition>
						<elsecondition id="1825442144">
							<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL AllPeril}" appliesto="" id="1707707327">
								<condition name="Check Deductible Present" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1221496004">
									<condition name="If Ded value 1%" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, %)&gt; NOTEQUAL -1}" appliesto="" id="899762229">
										<functionstep name="SetAllPeril%_SS" id="1293367478" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, All Perils Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>%)>]]></functionstep>
									</condition>
									<elsecondition id="999974930">
										<functionstep name="SetAllPeril_SS" id="1126386719" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, All Perils Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>
]]></functionstep>
									</elsecondition>
								</condition>
							</condition>
						</elsecondition>
					</condition>
					<condition name="Check Wind Hail Present" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL WindHail}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL WindHail}" appliesto="" id="1591809744">
						<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL WindHail}" appliesto="" id="597370387">
							<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="424155202">
								<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 1}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 2}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 3}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 4}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 5}" appliesto="" id="985407518">
									<functionstep name="SetWindHail_SS" id="1042050436" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>%)>]]></functionstep>
								</condition>
								<elsecondition id="1667091240">
									<functionstep name="SetWindHail9_SS" id="1705060818" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
								</elsecondition>
							</condition>
							<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1045232133">
								<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 1}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 2}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 3}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 4}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 5}" appliesto="" id="1716086232">
									<functionstep name="SetWindHail01_SS" id="369034791" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatPct, <=anonymous.getoutputtextbuffer()>)>%)>]]></functionstep>
								</condition>
								<elsecondition id="118743843">
									<functionstep name="SetWindHail92_SS" id="292252412" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatPct, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
								</elsecondition>
							</condition>
							<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatCurrencyAmt/Amt, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="441410425">
								<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 1}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 2}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 3}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 4}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 5}" appliesto="" id="1850207533">
									<functionstep name="SetWindHail-MA_SS" id="927523148" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatPct, <=anonymous.getoutputtextbuffer()>)>%)>]]></functionstep>
								</condition>
								<elsecondition id="2008385602">
									<functionstep name="SetWindHail-MA2_SS" id="1415152279" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatCurrencyAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
								</elsecondition>
							</condition>
						</condition>
						<elsecondition id="1040219602">
							<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL WindHail}" appliesto="" id="793913821">
								<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="900254945">
									<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 1}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 2}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 3}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 4}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 5}" appliesto="" id="1834412016">
										<functionstep name="SetWindHail12_SS" id="964159289" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>%)>]]></functionstep>
									</condition>
									<elsecondition id="1231845645">
										<functionstep name="SetWindHail121_SS" id="9115500" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
									</elsecondition>
								</condition>
								<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="2029135640">
									<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 1}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 2}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 3}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 4}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 5}" appliesto="" id="1427674195">
										<functionstep name="SetWindHail6_SS" id="765036808" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatPct, <=anonymous.getoutputtextbuffer()>)>%)>]]></functionstep>
									</condition>
									<elsecondition id="1725759484">
										<functionstep name="SetWindHail17_SS" id="298309017" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatPct, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
									</elsecondition>
								</condition>
							</condition>
						</elsecondition>
					</condition>
					<elseifcondition name="Check Other Structure limit" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL OS}" appliesto="" id="279417522">
						<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL INCL}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1347689884">
							<functionstep name="SetOSLimit_SS" id="393658864" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_otherstructures_amount_SS, INCLUDED)>

<=this.setvariable(homecoveragepremium_otherstructures_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_otherstructures_limit_SS,WOD)>

<=this.setvariable(coverage_otherstructures, $<=this.getvariable(homecoveragepremium_otherstructures_limit_SS)>)>

<=this.setvariable(homecoveragepremium_otherstructures_limit_SS, $<=this.getvariable(homecoveragepremium_otherstructures_limit_SS)>)>]]></functionstep>
						</condition>
						<elsecondition id="1557394190">
							<functionstep name="SetOSLimit1_SS" id="1157171081" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(homecoveragepremium_otherstructures_amount_SS, <=this.getvariable(premiumamount_SS)>)>


<=this.setvariable(homecoveragepremium_otherstructures_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_otherstructures_limit_SS,WOD)>

<=this.setvariable(coverage_otherstructures, $<=this.getvariable(homecoveragepremium_otherstructures_limit_SS)>)>

<=this.setvariable(homecoveragepremium_otherstructures_limit_SS, $<=this.getvariable(homecoveragepremium_otherstructures_limit_SS)>)>]]></functionstep>
						</elsecondition>
					</elseifcondition>
					<elseifcondition name="Check Personal Property amount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL PP}" appliesto="" id="223459031">
						<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL INCL}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="309497875">
							<functionstep name="SetPPamount1_SS" id="211988657" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_personalproperty_amount_SS, INCLUDED)>

<=this.setvariable(homecoveragepremium_personalproperty_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalproperty_limit_SS,WOD)>

<=this.setvariable(coverage_personalproperty, $<=this.getvariable(homecoveragepremium_personalproperty_limit_SS)>)>

<=this.setvariable(homecoveragepremium_personalproperty_limit_SS, $<=this.getvariable(homecoveragepremium_personalproperty_limit_SS)>)>]]></functionstep>
						</condition>
						<elsecondition id="65954476">
							<functionstep name="SetPPamount_SS" id="186778183" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(homecoveragepremium_personalproperty_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(homecoveragepremium_personalproperty_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalproperty_limit_SS,WOD)>

<=this.setvariable(coverage_personalproperty, $<=this.getvariable(homecoveragepremium_personalproperty_limit_SS)>)>

<=this.setvariable(homecoveragepremium_personalproperty_limit_SS, $<=this.getvariable(homecoveragepremium_personalproperty_limit_SS)>)>]]></functionstep>
						</elsecondition>
					</elseifcondition>
					<elseifcondition name="Check Loss of Use" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL LOU}" appliesto="" id="59632323">
						<functionstep name="SetLossOfUse_SS" id="1107150717" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_lossofuse_amount_SS, INCLUDED)>

<=func.FormatAmount(coverage_lossofuse,WOD)>

<=this.setvariable(homecoveragepremium_lossofuse_limit_SS,$<=this.getvariable(coverage_lossofuse)>)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Check personal liability amount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL PL}" appliesto="" id="461811778">
						<condition name="Check State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="" id="1834538460">
							<condition name="Check Product" expression="{&lt;=this.getvariable(policync)&gt; EQUAL Quality Crest Home}
OR
{&lt;=this.getvariable(policy)&gt; EQUAL Quality Crest Home}" appliesto="" id="597664635">
								<condition name="Check Amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1271037947">
									<functionstep name="SetPLamount2_SS" id="1461801229" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(homecoveragepremium_personalliability_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit_SS,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>]]></functionstep>
								</condition>
								<elsecondition id="1352469819">
									<functionstep name="SetPLamount21_SS" id="1039739305" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_personalliability_amount_SS, INCLUDED)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit_SS,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>]]></functionstep>
								</elsecondition>
							</condition>
							<elsecondition id="2022213633">
								<condition name="Check Limit" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1427499601">
									<functionstep name="SetPLamount3_SS" id="407084500" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(homecoveragepremium_personalliability_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit_SS,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>]]></functionstep>
								</condition>
								<elsecondition id="401866030">
									<functionstep name="SetPLamount4_SS" id="1020530618" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_personalliability_amount_SS, INCLUDED)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit_SS,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>]]></functionstep>
								</elsecondition>
							</elsecondition>
						</condition>
						<elsecondition id="2001484810">
							<condition name="Check Limit" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; GREATER 100000}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="194326259">
								<functionstep name="SetPLamount1_SS" id="2130106405" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(homecoveragepremium_personalliability_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit_SS,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>]]></functionstep>
							</condition>
							<elseifcondition name="Check limit" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUALLESSER 500000}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1176524112">
								<functionstep name="SetPLamount11_SS" id="315229908" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_personalliability_amount_SS, INCLUDED)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit_SS,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>]]></functionstep>
							</elseifcondition>
							<elsecondition id="2126335618">
								<functionstep name="SetPLamount_SS" id="894657842" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(homecoveragepremium_personalliability_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit_SS,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit_SS, $<=this.getvariable(homecoveragepremium_personalliability_limit_SS)>)>
]]></functionstep>
							</elsecondition>
						</elsecondition>
					</elseifcondition>
					<elseifcondition name="Check Medical limit" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL MEDPM}" appliesto="" id="2035257828">
						<functionstep name="SetMedicalLimit_SS" id="1696294403" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_medicalpayments_amount_SS, INCLUDED)>

<=this.setvariable(homecoveragepremium_medicalpayments_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_medicalpayments_limit_SS,WOD)>

<=this.setvariable(coverage_medicalpayments, $<=this.getvariable(homecoveragepremium_medicalpayments_limit_SS)>)>

<=this.setvariable(homecoveragepremium_medicalpayments_limit_SS, $<=this.getvariable(homecoveragepremium_medicalpayments_limit_SS)>)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="check identity theft amount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL FRAUD}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1328593445">
						<functionstep name="Setidentitytheftamount_SS" id="2119518163" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_identitytheft_amount_SS, $<=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(endorsementpremium_identitytheft_limit_SS, INCLUDED)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Check Sewer &amp; Water Back-Up for Bldg &amp; Contents" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL SEWER}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatCurrencyAmt/Amt, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}" appliesto="" id="167028312">
						<functionstep name="SetWaterbackup_SS" id="43110151" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(endorsementpremium_waterbackup_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(endorsementpremium_waterbackup_limit_SS, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatCurrencyAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_waterbackup_limit_SS,WOD)>

<=this.setvariable(endorsementpremium_waterbackup_limit_SS, $<=this.getvariable(endorsementpremium_waterbackup_limit_SS)>)>
]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Check Sewer &amp; Water Back-Up for Bldg &amp; Contents" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL SEWER}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatCurrencyAmt/Amt, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="" id="432534849">
						<functionstep name="SetWaterbackupIL_SS" id="1241193064" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(endorsementpremium_waterbackup_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(map_waterbackup_limit_SS, $50500=5000|$100500=10000|$250500=25000|$500500=50000|$51000=5000|$101000=10000|$251000=25000|$501000=50000|$51500=5000|$101500=10000|$251500=25000|$501500=50000|$52000=5000|$102000=10000|$252000=25000|$502000=50000|$52500=5000|$102500=10000|$252500=25000|$502500=50000|$55000=5000|$105000=10000|$255000=25000|$505000=50000|$57500=5000|$107500=10000|$257500=25000|$507500=50000|$2515000=50000)>

<=this.setvariable(endorsementpremium_waterbackup_limit_SS, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatCurrencyAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(endorsementpremium_waterbackup_limit_SS, <=this.convertvalue(<=this.getvariable(endorsementpremium_waterbackup_limit_SS)>, <=this.getvariable(map_waterbackup_limit_SS)>)>)>

<=func.FormatAmount(endorsementpremium_waterbackup_limit_SS,WOD)>

<=this.setvariable(endorsementpremium_waterbackup_limit_SS, $<=this.getvariable(endorsementpremium_waterbackup_limit_SS)>)>
]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Check loss assesment amount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL LAC}" appliesto="" id="1005454583">
						<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL INCL}" appliesto="" id="451022905">
							<functionstep name="SetPremiumamuntIncludedLAC_SS" id="144809393" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumamount_SS, INCLUDED)>]]></functionstep>
						</condition>
						<elsecondition id="1825841952">
							<functionstep name="SetPremiumamuntLAC_SS" id="544856269" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(premiumamount_SS, <=this.getvariable(premiumamount_SS)>)>]]></functionstep>
						</elsecondition>
						<condition name="Loss Assessment" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatCurrencyAmt/Amt, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1295413761">
							<functionstep name="Setlossassesmentamount_SS" id="1438102255" prompt="no" errormessage="Error setting loss assesment amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_lossassessment_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(endorsementpremium_lossassessment_limit_SS, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatCurrencyAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_lossassessment_limit_SS,WOD)>

<=this.setvariable(endorsementpremium_lossassessment_limit_SS, $<=this.getvariable(endorsementpremium_lossassessment_limit_SS)>)>

]]></functionstep>
						</condition>
						<elseifcondition name="newelseifcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1445221773">
							<functionstep name="Setlossassesmentamount12_SS" id="1554202094" prompt="no" errormessage="Error setting loss assesment amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_lossassessment_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(endorsementpremium_lossassessment_limit_SS, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_lossassessment_limit_SS,WOD)>

<=this.setvariable(endorsementpremium_lossassessment_limit_SS, $<=this.getvariable(endorsementpremium_lossassessment_limit_SS)>)>]]></functionstep>
						</elseifcondition>
						<elsecondition id="1602569633">
							<functionstep name="Setlossassesmentamount123_SS" id="1077945645" prompt="no" errormessage="Error setting loss assesment amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_lossassessment_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(endorsementpremium_lossassessment_limit_SS, INCLUDED)>]]></functionstep>
						</elsecondition>
					</elseifcondition>
					<elseifcondition name="Check Ordinance or Law amount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL BOLAW}" appliesto="" id="1063489358">
						<condition name="State NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="" id="983643258">
							<functionstep name="SetOrdinanceorLawamountNC_SS" id="1332559431" prompt="no" errormessage="Error setting ordinance or law amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_ordinanceorlaw_amount_SS, $<=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(endorsementpremium_ordinanceorlaw_limit_SS, INCLUDED)>]]></functionstep>
						</condition>
						<elsecondition id="1966968635">
							<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1655200594">
								<functionstep name="SetPremiumamuntIncludedBOLAW_SS" id="894930301" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumamount_SS, INCLUDED)>]]></functionstep>
							</condition>
							<elsecondition id="1008132909">
								<functionstep name="SetPremiumamuntBOLAW_SS" id="590836879" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(premiumamount_SS, <=this.getvariable(premiumamount_SS)>)>]]></functionstep>
							</elsecondition>
							<functionstep name="SetOrdinanceorLawamount_SS" id="1403706422" prompt="no" errormessage="Error setting ordinance or law amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_ordinanceorlaw_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(endorsementpremium_ordinanceorlaw_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatPct, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
							<condition name="If limit is  %age" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.getvariable(endorsementpremium_ordinanceorlaw_limit_SS)&gt;, $)&gt; NOTEQUAL -1}
AND
{&lt;=this.getvariable(endorsementpremium_ordinanceorlaw_limit_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1675389856">
								<functionstep name="Set$_SS" id="145783071" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(endorsementpremium_ordinanceorlaw_limit_SS,WOD)>

<=this.setvariable(endorsementpremium_ordinanceorlaw_limit_SS, $<=this.getvariable(endorsementpremium_ordinanceorlaw_limit_SS)>)>]]></functionstep>
							</condition>
							<elsecondition id="13370735">
								<functionstep name="Set%_SS" id="83651987" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_ordinanceorlaw_limit_SS, <=this.getvariable(endorsementpremium_ordinanceorlaw_limit_SS)>%)>]]></functionstep>
							</elsecondition>
						</elsecondition>
					</elseifcondition>
					<elseifcondition name="Check Increased Jwelery amount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL UNJWF}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1749070937">
						<functionstep name="SetIncreasedJweleryamount_SS" id="1132633449" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(endorsementpremium_increasedjewelrywatchesfurs_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(endorsementpremium_increasedjewelrywatchesfurs_limit_SS, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_increasedjewelrywatchesfurs_limit_SS,WOD)>

<=this.setvariable(endorsementpremium_increasedjewelrywatchesfurs_limit_SS, $<=this.getvariable(endorsementpremium_increasedjewelrywatchesfurs_limit_SS)>)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Check for Personal Injury" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL PIHOM}" appliesto="" id="849248697">
						<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="318131126">
							<functionstep name="SetPIvariables1_SS" id="1570863567" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(endorsementpremium_personalinjury_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(endorsementpremium_personalinjury_limit_SS, INCLUDED)>]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="Check for Workers Compensation" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL WCINC}" appliesto="" id="657523381">
						<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="785023835">
							<functionstep name="SetWCvariables1_SS" id="2019843688" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, EEE - Worker's Comp - Occasional Employees)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>
]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="Check for Special Personal Property" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL SPPP}" appliesto="" id="52561505">
						<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1474755398">
							<functionstep name="SetSpecialPersonalProp_SS" id="826155321" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Special Personal Property)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>
]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="Check for Increased condo Building Items" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL AALMT}" appliesto="" id="432403126">
						<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="386631298">
							<functionstep name="SetIncreased CondoBuildingItem_SS" id="2007319404" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Increased Condo Building Items)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>
]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="Check for Eqipment Breakdown" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL EQPBK}" appliesto="" id="1654515210">
						<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1220973990">
							<functionstep name="SetEquipmentBreakdown_SS" id="2119240690" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Equipment Breakdown)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>
]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="Check forService Line Endorsement" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL SWRLI}" appliesto="" id="689828088">
						<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="456377674">
							<functionstep name="SetServiceLineEndorsement_SS" id="2052242110" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Service Line Endorsement)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="Check for Increased Mold" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL MOLD}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatCurrencyAmt/Amt,&lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="892487479">
						<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1255278892">
							<functionstep name="SetMold1_SS" id="1458375495" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(endorsementpremium_increasedmold_amount_SS, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(endorsementpremium_increasedmold_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatCurrencyAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_increasedmold_limit_SS,WOD)>

<=this.setvariable(endorsementpremium_increasedmold_limit_SS, $<=this.getvariable(endorsementpremium_increasedmold_limit_SS)>)>]]></functionstep>
						</condition>
						<elsecondition id="199803625">
							<functionstep name="SetMold_SS" id="1592133875" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_increasedmold_amount_SS, INCLUDED)>

<=this.setvariable(endorsementpremium_increasedmold_limit_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatCurrencyAmt/Amt,<=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_increasedmold_limit_SS,WOD)>

<=this.setvariable(endorsementpremium_increasedmold_limit_SS, $<=this.getvariable(endorsementpremium_increasedmold_limit_SS)>)>

]]></functionstep>
						</elsecondition>
						<condition name="If limit is %" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.getvariable(endorsementpremium_increasedmold_limit_SS)&gt;, %)&gt; NOTEQUAL -1}" appliesto="" id="1039485082">
							<functionstep name="Setincreasedmold%_SS" id="1733462506" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_increasedmold_limit_SS, <=this.getvariable(endorsementpremium_increasedmold_limit_SS)>%)>]]></functionstep>
						</condition>
						<elsecondition id="450857376">
							<functionstep name="Setincreasedmold_SS" id="2002304223" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_increasedmold_limit_SS, $<=this.getvariable(endorsementpremium_increasedmold_limit_SS)>)>]]></functionstep>
						</elsecondition>
					</elseifcondition>
					<elseifcondition name="Check Replacement Cost Content" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL FVREP}" appliesto="" id="715603818">
						<functionstep name="SetRCC_SS" id="803089455" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_replacementcostcontent_amount_SS, INCLUDED)>

<=this.setvariable(endorsementpremium_replacementcostcontent_limit_SS, INCLUDED)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="check Extended Dwelling Coverage" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL com.safeco_EDC}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="476973624">
						<condition name="Check Premium amount" expression="{{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL INCL}}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 0}" appliesto="" id="524133910">
							<functionstep name="SetPremiumamuntIncluded_SS" id="942974374" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Extended Dwelling Coverage)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
						</condition>
						<elseifcondition name="Check Limit" expression="{{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL INCL}}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; GREATER 0}" appliesto="" id="301985558">
							<functionstep name="SetPremiumlimit_SS" id="19387242" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Extended Dwelling Coverage)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatPct, <=anonymous.getoutputtextbuffer()>)>%)>
]]></functionstep>
						</elseifcondition>
						<elsecondition id="1681772899">
							<functionstep name="SetPremiumamunt_SS" id="480158077" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Extended Dwelling Coverage)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatPct, <=anonymous.getoutputtextbuffer()>)>%)>
]]></functionstep>
						</elsecondition>
					</elseifcondition>
					<elseifcondition name="Earthquake" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL ERQK}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}" appliesto="" id="24784015">
						<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(premiumamount_SS)&gt; EQUAL INCL}" appliesto="" id="1572099655">
							<functionstep name="SetEQ_SS" id="803748563" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumamount_SS, INCLUDED)>]]></functionstep>
						</condition>
						<elsecondition id="1573463371">
							<functionstep name="SetEQ1_SS" id="1758081399" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>]]></functionstep>
						</elsecondition>
						<functionstep name="SETEQ2_SS" id="1880992387" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Earthquake)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible/FormatPct, <=anonymous.getoutputtextbuffer()>)>%)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="check Quality Plus" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL com.safeco_QSPLUS}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="414638977">
						<functionstep name="SetQualityPlus_SS" id="367167759" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Quality Select Plus)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="check Foundation Water Damage" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL WD}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1069902246">
						<functionstep name="SetFoundationWaterDamage_SS" id="1193591884" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Foundation Water Damage)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>

<=func.FormatAmount(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>,WOD)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.getvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>)>)>
]]></functionstep>
					</elseifcondition>
					<elseifcondition name="NewHomeCredit" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL NHDIS}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1250199056">
						<functionstep name="SetNewHomeDiscount1_SS" id="441516740" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Newer Home Credit)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
					</elseifcondition>
					<elseifcondition name="AutomaticGasShutOff Discount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL com.safeco_GASOF}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Option/OptionCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL Y}" appliesto="" id="1530498847">
						<functionstep name="SetAutomaticGasShutOffDiscount_SS" id="1968272126" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Automatic Gas Shut Off Valve)>
]]></functionstep>
						<condition name="Premium Amount Present" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="873875722">
							<functionstep name="SetAutomaticGasShutOffDiscount1_SS" id="2050062613" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="AffinityGroupDiscount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL GROUP}" appliesto="" id="1049625959">
						<functionstep name="SetAffinityGroupDiscount_SS" id="809575874" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Affinity Group Discount)>]]></functionstep>
						<condition name="Premium Amount Present" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1546716904">
							<functionstep name="SetAffinityGroupDiscount1_SS" id="1756701350" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="UmbrellaDiscount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL UMBCR}" appliesto="" id="1181597412">
						<functionstep name="SetUmbrellaDiscount_SS" id="28350304" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Umbrella Account Credit)>]]></functionstep>
						<condition name="Premium Amount Present" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="539181313">
							<functionstep name="SetUmbrellaDiscount1_SS" id="1125603665" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="NewBuyerDiscount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL com.safeco_NEWBY}" appliesto="" id="2109685925">
						<functionstep name="SetNewBuyerDiscount_SS" id="1986914705" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Newer Buyer Discount)>]]></functionstep>
						<condition name="Premium Amount Present" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1570929803">
							<functionstep name="SetNewBuyerDiscount1_SS" id="640987310" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="Sprinkler" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL SPKCR}
AND
{&lt;=this.getvariable(endorsements_sprinklercount)&gt; GREATER 0}" appliesto="" id="39412791">
						<condition name="Check Premium Amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="379095202">
							<functionstep name="SetSprinkler_SS" id="1349937088" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Sprinkler Credit)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
						</condition>
					</elseifcondition>
					<elseifcondition name="Alarm" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL ALARM}
AND
{&lt;=this.getvariable(endorsements_burglaralarmcount)&gt; GREATER 0}" appliesto="" id="539334738">
						<condition name="Check Premium Amount" expression="{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1583589816">
							<functionstep name="SetAlarm_SS" id="1880838276" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Burglar Alarm Credit)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
						</condition>
						<elsecondition id="1347940249">
							<condition name="State NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="" id="542176710">
								<functionstep name="SetAlarm1_SS" id="1340036807" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Burglar Alarm Credit)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>
]]></functionstep>
							</condition>
						</elsecondition>
					</elseifcondition>
					<elseifcondition name="Renewal Discount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL RDIS}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="413978338">
						<functionstep name="SetRenewalDisount_SS" id="894358568" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Renewal Discount)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
					</elseifcondition>
					<elseifcondition name="AdvantageDiscount" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL ADVT}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1167607718">
						<functionstep name="SetAdvantageDiscount_SS" id="1321900796" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Advantage Discount)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
					</elseifcondition>
					<elseifcondition name="AccountCredit" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL ACCT}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1832939270">
						<functionstep name="SetAccCredit_SS" id="875654739" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Account Credit)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Advance Quote Credit" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL AQDIS}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1526988691">
						<functionstep name="SetAdvanceQuoteCredit_SS" id="346044270" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Advanced Quote Credit)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, -<=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
					</elseifcondition>
					<elseifcondition name="WindHail" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL Wind Hail}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="196170838">
						<functionstep name="SetWindHail1_SS" id="39883420" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount_SS)>

<=this.setvariable(discount<=this.getvariable(disccount_SS)>_SS, Wind Hail Exclusion)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(value<=this.getvariable(disccount_SS)>, <=this.getvariable(premiumamount_SS)>)>

]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Kentucky Service Charge" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL STSR2}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="2134586920">
						<functionstep name="SetKentuckySErviceCharge_SS" id="208164880" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Kentucky Service Charge)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="California Service Charge" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL STSR2}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="" id="2103643011">
						<functionstep name="SetCaliforniaServiceCharge_SS" id="1211420092" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, California Seismic Safety Fee)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Kentucky Surcharge" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL com.safeco_STSR1K}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1564451005">
						<functionstep name="SetKentuckySurcharge_SS" id="1031546568" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Kentucky Surcharge)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Kentucky MunicipalTax" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL com.safeco_CTTX1}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="1087145452">
						<functionstep name="SetKentuckyMunicipal_SS" id="1286386605" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, City Municipal Tax)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="County Tax" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL com.safeco_CTTX2}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount_SS)&gt; NOTEQUAL INCL}" appliesto="" id="2028121920">
						<functionstep name="SetCountyTax_SS" id="753605104" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, County Tax)>

<=func.FormatAmount(premiumamount_SS,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount_SS)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="check for blank" expression="{&lt;=this.getvariable(premiumdesc_SS)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1839691308">
						<functionstep name="BreakLoop_SS" id="1324952171" prompt="no" errormessage="Error setting premium breakdown. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(BreakdownLoop, 100)>]]></functionstep>
					</elseifcondition>
				</loop>
				<condition name="Check if SPP present" expression="{&lt;=this.getvariable(endorsements_scheduledpersonalproperty)&gt; EQUAL Yes}" appliesto="" id="1773535181">
					<loop name="SPPLoop" operator="equallesser" start="1" increment="1" count="10" id="1623038798">
						<functionstep name="ExtractSPPbuffer_SS" id="736483604" prompt="no" errormessage="Error extracting buffer. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(spppremiumdesc_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/PropertySchedule[<=this.getvariable(SPPLoop)>]/PropertyClassCd, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(spppremiumamount_SS, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/PropertySchedule[<=this.getvariable(SPPLoop)>]/Coverage[2]/CurrentTermAmt/Amt, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(spppremiumdesc_SSription, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/PropertySchedule[<=this.getvariable(SPPLoop)>]/com.safeco_SPPDescription, <=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(spppremiumlimit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs[2]/HomePolicyQuoteInqRs/HomeLineBusiness/PropertySchedule[<=this.getvariable(SPPLoop)>]/Coverage[1]/Limit/FormatInteger, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
						<condition name="newcondition" expression="{&lt;=this.getvariable(spppremiumamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(spppremiumamount_SS)&gt; NOTEQUAL 0.0}" appliesto="" id="160003997">
							<functionstep name="SetSPPamount123_SS" id="2090164717" prompt="no" errormessage="Error setting SPP amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[
<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(spppremiumdesc_SSription)>)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, $<=this.addfloat(<=this.getvariable(spppremiumamount_SS)>)>)>

<=func.FormatAmount(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>,WD)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.getvariable(spppremiumlimit)>)>]]></functionstep>
						</condition>
						<condition name="CheckSPPamount" expression="{{&lt;=this.getvariable(spppremiumdesc_SS)&gt; EQUAL GU}
OR
{&lt;=this.getvariable(spppremiumdesc_SS)&gt; EQUAL JL}
OR
{&lt;=this.getvariable(spppremiumdesc_SS)&gt; EQUAL FR}
OR
{&lt;=this.getvariable(spppremiumdesc_SS)&gt; EQUAL SV}
OR
{&lt;=this.getvariable(spppremiumdesc_SS)&gt; EQUAL FINEA}
OR
{&lt;=this.getvariable(spppremiumdesc_SS)&gt; EQUAL com.safeco_FINEAB}}
AND
{&lt;=this.getvariable(spptotalamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(spptotalamount_SS)&gt; NOTEQUAL 0.0}" appliesto="" id="735874635">
							<functionstep name="SetSPPamount_SS" id="138286738" prompt="no" errormessage="Error setting SPP amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(spptotalamount_SS, <=this.addfloat(<=this.getvariable(spppremiumamount_SS)>, <=this.getvariable(spptotalamount_SS)>)>)>
]]></functionstep>
						</condition>
					</loop>
					<condition name="SPP amount" expression="{&lt;=this.getvariable(spptotalamount_SS)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(spptotalamount_SS)&gt; NOTEQUAL 0.0}" appliesto="" id="1762352030">
						<functionstep name="Setspptotalamount_SS" id="36938898" prompt="no" errormessage="Error setting SPP amount. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(spptotalamount_SS,WD)>

<=this.setvariable(endorsementpremium_scheduledpersonalproperty_amount_SS, <=this.getvariable(spptotalamount_SS)>)>

<=this.setvariable(endorsementpremium_scheduledpersonalproperty_limit_SS, INCLUDED)>]]></functionstep>
					</condition>
				</condition>
			</condition>
		</condition>
	</condition>
	<condition name="Check If PIF present" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}}
AND
{&lt;=java.callstringmethod(indexOf, &lt;=anonymous.getoutputtextbuffer()&gt;,com.safeco_QuoteRq_PremiumTotalPIF)&gt; NOTEQUAL -1}" appliesto="CA -" id="1426240">
		<functionstep name="ExtractPIFPremium" id="1294021784" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumPIF,<=this.substringregex(<=this.splitindexat(<=anonymous.getoutputtextbuffer()>,com.safeco_QuoteRq_PremiumTotalPIF,1)>,\>,\<)>)>]]></functionstep>
		<condition name="Premium condition" expression="{&lt;=func.premiumRegexCheckHome(&lt;=this.getvariable(premiumPIF)&gt;)&gt; EQUAL true}" appliesto="" id="1166891030">
			<functionstep name="ResetPremium" id="68348637" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premium,<=this.getvariable(premiumPIF)>)>
<=this.setvariable(homepremium_rt, <=this.getvariable(premium)>)>]]></functionstep>
		</condition>
	</condition>
	<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MS -ND -">
		<functionstep name="ExtractPremiumMS" id="785867782" prompt="no" errormessage="Error extracting premium. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[

<=this.setvariable(link, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/com.safeco_CompanyURL, <=anonymous.getoutputtextbuffer()>)>)>



<=this.setvariable(quickaccessurl, <=java.callstringmethod(replaceAll, <=this.getvariable(link)>, &, &amp;)>)>

]]></functionstep>
	</condition>
	<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="IN -MD -NC -NH -PA -VA -">
		<functionstep name="ExtractPremiumIN" id="95452466" prompt="no" errormessage="Error extracting premium. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(amounttype, Total Premium)>]]></functionstep>
	</condition>
	<condition name="Premium condition" expression="{&lt;=func.premiumRegexCheckHome(&lt;=this.getvariable(premium)&gt;)&gt; EQUAL true}" appliesto="">
		<condition name="Quote Scenario Yes" expression="{&lt;=this.getvariable(quotescenario)&gt; EQUAL Yes}" appliesto="">
			<condition name="All States" expression="{1 EQUAL 1}" appliesto="">
				<condition name="AGENT SELECTED VALUES" expression="{1 EQUAL 1}" appliesto="">
					<condition name="Check Coverages Scenario" expression="{&lt;=this.getvariable(covscenario)&gt; EQUAL Yes}" appliesto="">
						<functionstep name="SetAgentSelectedCoverageValues" id="1325980558" prompt="no" errormessage="There was an error encountered in one of the Quote scenarios.Please resubmit the quote without Quote scenario." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalliability<=this.getvariable(basketcount)>, <=this.getvariable(coverage_personalliability)>)>

<=this.setvariable(coverage_medicalpayments<=this.getvariable(basketcount)>, <=this.getvariable(coverage_medicalpayments)>)>

<=this.setvariable(coverage_replacementcost<=this.getvariable(basketcount)>, <=this.getvariable(coverage_replacementcost)>)>
]]></functionstep>
					</condition>
					<condition name="Check Deductible Scenarios" expression="{&lt;=this.getvariable(dedscenario)&gt; EQUAL Yes}" appliesto="">
						<functionstep name="SetAgentSelectedDeductiblesValues" id="375271809" prompt="no" errormessage="There was an error encountered in one of the Quote scenarios.Please resubmit the quote without Quote scenario." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_deductible<=this.getvariable(basketcount)>, <=this.getvariable(coverage_deductible)>)>

<=this.setvariable(coverage_winddeductible<=this.getvariable(basketcount)>, <=this.getvariable(coverage_winddeductible)>)>]]></functionstep>
					</condition>
					<functionstep name="SetAgentSelectedMultipolicyValue" id="136296593" prompt="no" errormessage="There was an error encountered in one of the Quote scenarios.Please resubmit the quote without Quote scenario." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_multipolicy<=this.getvariable(basketcount)>, <=this.getvariable(coverage_multipolicy)>)>
]]></functionstep>
				</condition>
				<loop name="PostLoop" operator="equallesser" start="1" increment="1" count="&lt;=this.getvariable(basketcount)&gt;">
					<condition name="RESET AGENT SELECTED VALUES" expression="{1 EQUAL 1}" appliesto="">
						<condition name="Check Coverages Scenario" expression="{&lt;=this.getvariable(covscenario)&gt; EQUAL Yes}" appliesto="">
							<functionstep name="ResetAgentSelectedCoveragesValues" id="728301" prompt="no" errormessage="There was an error encountered in one of the Quote scenarios.Please resubmit the quote without Quote scenario." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_personalliability, <=this.getvariable(coverage_personalliability<=this.getvariable(PostLoop)>)>)>

<=this.setvariable(coverage_medicalpayments, <=this.getvariable(coverage_medicalpayments<=this.getvariable(PostLoop)>)>)>

<=this.setvariable(coverage_replacementcost, <=this.getvariable(coverage_replacementcost<=this.getvariable(PostLoop)>)>)>
]]></functionstep>
						</condition>
						<condition name="Check Deductible Scenarios" expression="{&lt;=this.getvariable(dedscenario)&gt; EQUAL Yes}" appliesto="">
							<functionstep name="ResetAgentSelectedDeductiblesValues" id="1916327665" prompt="no" errormessage="There was an error encountered in one of the Quote scenarios.Please resubmit the quote without Quote scenario." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_deductible, <=this.getvariable(coverage_deductible<=this.getvariable(PostLoop)>)>)>

<=this.setvariable(coverage_winddeductible, <=this.getvariable(coverage_winddeductible<=this.getvariable(PostLoop)>)>)>]]></functionstep>
						</condition>
						<functionstep name="ResetAgentSelectedMultipolicyValue" id="345009259" prompt="no" errormessage="There was an error encountered in one of the Quote scenarios.Please resubmit the quote without Quote scenario." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(coverage_multipolicy, <=this.getvariable(coverage_multipolicy<=this.getvariable(PostLoop)>)>)>

<=this.setvariable(windxmlnc,<=java.callstringmethod(anonymous, VK_BLANK)>)>
]]></functionstep>
					</condition>
					<functionstep name="SetCompanyNum" id="2146481243" prompt="no" errormessage="There was an error encountered in one of the Quote scenarios.Please resubmit the quote without Quote scenario." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(companynum, <=this.substringregex(<=prevhttpstep.getoutputtextbuffer()>,<CompanysQuoteNumber>,\<\/CompanysQuoteNumber\>)>)>

<=this.setvariable(qsinfo,<QuoteInfo>
<CompanysQuoteNumber><=this.getvariable(companynum)></CompanysQuoteNumber>
</QuoteInfo>)>

<=this.setvariable(policyxml, <=java.callstringmethod(anonymous, VK_BLANK)>)>]]></functionstep>
					<functionstep name="RQUID Extraction" id="865841515" prompt="no" errormessage="There was an error encountered in one of the Quote scenarios.Please resubmit the quote without Quote scenario." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(insurancesvcrqxml, <RqUID><=this.getvariable(rquidvar)>-<=this.formatdate(today, mmss)>-11da-8ad9-<=this.getvariable(applicantid)></RqUID>
<HomePolicyQuoteInqRq>
<RqUID><=this.getvariable(rquidvar)>-<=this.formatdate(today, mmss)>-11da-8ad9-<=this.getvariable(applicantid)></RqUID>
<com.safeco_TransactionType>QuoteRQ</com.safeco_TransactionType>
<TransactionRequestDt><=this.formatdate(today, yyyy-MM-dd)>T<=this.formatdate(today, HH:mm:ss)></TransactionRequestDt>
<TransactionEffectiveDt><=this.formatdate(today, yyyy-MM-dd)></TransactionEffectiveDt>
<CurCd>USD</CurCd>
<Producer>
<ProducerInfo>
<ContractNumber><=this.getvariable(agentid)></ContractNumber>
</ProducerInfo>
</Producer>)>]]></functionstep>
					<inlinefunctionstep name="CallInlineValidations" function="InlineValidations" />
					<inlinefunctionstep name="CallInlinePersPolicy" function="ExecutePersPolicy" />
					<inlinefunctionstep name="CallSetDwellingInfoXML" function="SetDwellingInfoXML" />
					<inlinefunctionstep name="CallPostingXML" function="PostingXML" />
					<condition name="Premium Extraction" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL Success}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/MsgStatusCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL SuccessWithChanges}" appliesto="">
						<functionstep name="ExtractPremium_QS" id="1657810355" prompt="no" errormessage="There was an error encountered in one of the Quote scenarios.Please resubmit the quote without Quote scenario." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premium, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PolicySummaryInfo/FullTermAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(homepremium<=this.getvariable(PostLoop)>_rt, <=this.getvariable(premium)>)>



]]></functionstep>
						<condition name="Check If PIF present" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}}
AND
{&lt;=java.callstringmethod(indexOf, &lt;=PostXML.getoutputtextbuffer()&gt;,com.safeco_QuoteRq_PremiumTotalPIF)&gt; NOTEQUAL -1}" appliesto="CA -">
							<functionstep name="ExtractPIFPremiumQS" id="1618558054" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumPIF,<=this.substringregex(<=this.splitindexat(<=PostXML.getoutputtextbuffer()>,com.safeco_QuoteRq_PremiumTotalPIF,1)>,\>,\<)>)>]]></functionstep>
							<condition name="Premium condition" expression="{&lt;=func.premiumRegexCheckHome(&lt;=this.getvariable(premiumPIF)&gt;)&gt; EQUAL true}" appliesto="">
								<functionstep name="ResetPremiumQS" id="1224304339" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premium,<=this.getvariable(premiumPIF)>)>

<=this.setvariable(homepremium<=this.getvariable(PostLoop)>_rt, <=this.getvariable(premium)>)>]]></functionstep>
							</condition>
						</condition>
					</condition>
					<elsecondition>
						<functionstep name="QuoteScenarioError" id="175548894" prompt="no" errormessage="There was an error encountered in one of the Quote scenarios.Please resubmit the quote without Quote scenario." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(statusenum_rt<=this.getvariable(PostLoop)>, Declined)>

<=this.setvariable(statustext_rt<=this.getvariable(PostLoop)>, Unable to generate premium for this basket.)>

<=this.setvariable(homepremium<=this.getvariable(PostLoop)>_rt, 0.00)>]]></functionstep>
					</elsecondition>
				</loop>
				<condition name="Last Basket Premium 0.00" expression="{&lt;=this.getvariable(homepremium&lt;=this.getvariable(basketcount)&gt;_rt)&gt; EQUAL 0.00}
AND
{1 EQUAL 0}" appliesto="">
					<abortstep message="Carrier Error : There was an error encountered in one of the Quote scenarios. Please resubmit the quote without Quote scenario." name="QSAbort" id="469857095" savetest="false" savetestvalues="false" />
				</condition>
			</condition>
		</condition>
		<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL FL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NE}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="AL -AR -AZ -CO -GA -ID -IL -IN -KS -KY -LA -MD -MN -MO -MS -NC -NE -NH -NM -NV -NY -OK -OR -PA -UT -VA -VT -WA -">
			<functionstep name="ExtractPaymentPlans" id="969248439" prompt="no" errormessage="Error extracting Payment Plans. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(monthlydownpay1, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[2]/DepositAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlydownpay2, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[3]/DepositAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>


<=this.setvariable(monthlydesc1, 4 Pay)>

<=this.setvariable(monthlydesc2, Monthly Pay)>

<=this.setvariable(monthlyinstall1, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[2]/InstallmentInfo/InstallmentAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlyinstall2, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[3]/InstallmentInfo/InstallmentAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(montlytotalpremium,<=this.splitindexat(<=PostXML.getoutputtextbuffer()>,com.safeco_QuoteRq_PremiumTotal,1)>)>

<=this.setvariable(montlytotalpremium,<=this.substringregex(<=this.getvariable(montlytotalpremium)>,\>,\<)>)>

<=this.setvariable(monthlytotal_rt2,<=this.getvariable(montlytotalpremium)>)>

<=this.plusone(eftcount)>
<=this.setvariable(eftdesc_rt1,Monthly Pay)>

<=this.setvariable(efttotal_rt1,<=this.getvariable(montlytotalpremium)>)>

<=this.setvariable(eftdownpay_rt1,<=this.getvariable(monthlydownpay2)>)>

<=this.setvariable(eftinstallpay_rt1,<=this.getvariable(monthlyinstall2)>)>

<=this.setvariable(monthlytotalpremium1, )>
<=this.setvariable(monthlytotalpremium2, )>]]></functionstep>
			<condition name="PayPlan" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OR}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WI}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AZ}" appliesto="">
				<loop name="MonthlyLoop" operator="equallesser" start="1" increment="1" count="2">
					<condition name="Check" expression="{&lt;=this.getvariable(monthlydownpay&lt;=this.getvariable(MonthlyLoop)&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="SetPaymentPlan" id="1111907664" prompt="no" errormessage="Error extracting Payment Plans. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(monthlycount)>

<=this.setvariable(monthlydownpay_rt<=this.getvariable(monthlycount)>, <=this.getvariable(monthlydownpay<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlydesc_rt<=this.getvariable(monthlycount)>, <=this.getvariable(monthlydesc<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlyinstallpay_rt<=this.getvariable(monthlycount)>, <=this.getvariable(monthlyinstall<=this.getvariable(MonthlyLoop)>)>)>
]]></functionstep>
					</condition>
				</loop>
			</condition>
			<condition name="Discounts" expression="{1 EQUAL 0}" appliesto="">
				<condition name="New Home Credit" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.getvariable(buffer)&gt;, NHDIS)&gt; NOTEQUAL -1}" appliesto="">
					<functionstep name="SetNewHomeDiscount" id="1811190036" prompt="no" errormessage="Error extracting discounts. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Newer Home Credit)>]]></functionstep>
				</condition>
				<condition name="SetAccountDiscount" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.getvariable(buffer)&gt;, ACCT)&gt; NOTEQUAL -1}" appliesto="">
					<functionstep name="SetAccountDiscount" id="2123309626" prompt="no" errormessage="Error extracting discounts. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Account Credit)>
]]></functionstep>
				</condition>
				<condition name="Wind Hail Credit" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.getvariable(buffer)&gt;, Wind Hail )&gt; NOTEQUAL -1}" appliesto="">
					<functionstep name="SetWindHailDiscount" id="1416936321" prompt="no" errormessage="Error extracting discounts. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Wind Hail Exclusion)>
]]></functionstep>
				</condition>
			</condition>
		</condition>
		<condition name="State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ME}" appliesto="MS -SD -" id="860130320">
			<functionstep name="ExtractPaymentPlansMS" id="514825342" prompt="no" errormessage="Error extracting Payment Plans. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(monthlydownpay1, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[2]/DepositAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlydownpay2, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[3]/DepositAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlydownpay3, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[11]/DepositAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>


<=this.setvariable(monthlydesc1, 4 Pay)>

<=this.setvariable(monthlydesc2, Monthly Pay)>

<=this.setvariable(monthlydesc3, 2 Pay)>

<=this.setvariable(monthlyinstall1, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[2]/InstallmentInfo/InstallmentAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlyinstall2, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[4]/InstallmentInfo/InstallmentAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlyinstall3, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[11]/InstallmentInfo/InstallmentAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(montlytotalpremium,<=this.splitindexat(<=PostXML.getoutputtextbuffer()>,com.safeco_QuoteRq_PremiumTotal,1)>)>

<=this.setvariable(montlytotalpremium,<=this.substringregex(<=this.getvariable(montlytotalpremium)>,\>,\<)>)>

<=this.setvariable(monthlytotal_rt2,<=this.getvariable(montlytotalpremium)>)>

<=this.plusone(eftcount)>

<=this.setvariable(eftdesc_rt1,Monthly Pay)>

<=this.setvariable(efttotal_rt1,<=this.getvariable(montlytotalpremium)>)>

<=this.setvariable(eftdownpay_rt1,<=this.getvariable(monthlydownpay2)>)>

<=this.setvariable(eftinstallpay_rt1,<=this.getvariable(monthlyinstall2)>)>]]></functionstep>
			<condition name="PayPlan" expression="{1 EQUAL 1}" appliesto="" id="1765901386">
				<loop name="MonthlyLoop" operator="equallesser" start="1" increment="1" count="3" id="878257006">
					<condition name="Check" expression="{&lt;=this.getvariable(monthlydownpay&lt;=this.getvariable(MonthlyLoop)&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1083444836">
						<functionstep name="SetPaymentPlanMS" id="600069566" prompt="no" errormessage="Error extracting Payment Plans. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(monthlycount)>

<=this.setvariable(monthlydownpay_rt<=this.getvariable(monthlycount)>, <=this.getvariable(monthlydownpay<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlydesc_rt<=this.getvariable(monthlycount)>, <=this.getvariable(monthlydesc<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlyinstallpay_rt<=this.getvariable(monthlycount)>, <=this.getvariable(monthlyinstall<=this.getvariable(MonthlyLoop)>)>)>
]]></functionstep>
					</condition>
				</loop>
			</condition>
			<condition name="Discounts" expression="{1 EQUAL 0}" appliesto="" id="1390013370">
				<functionstep name="DicountInit" id="892642655" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(discount_desc1,<=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(discount_desc2,<=java.callstringmethod(anonymous, VK_BLANK)>)>
<=this.setvariable(discount_desc3,<=java.callstringmethod(anonymous, VK_BLANK)>)>]]></functionstep>
				<loop name="CoverageCodeLoop" operator="equallesser" start="1" increment="1" count="50">
					<condition name="Check CoverageCd ACCT" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(CoverageCodeLoop)&gt;]/CoverageCd,&lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL ACCT}" appliesto="">
						<functionstep name="SetAccountCreditDiscount" id="241602335" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>
<=this.setvariable(discount_amount<=this.getvariable(disccount)>,<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(CoverageCodeLoop)>]/CurrentTermAmt,<=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(discount_desc<=this.getvariable(disccount)>,Account Credit Discount)>]]></functionstep>
					</condition>
					<elseifcondition name="Check Burglar Alarm Credit" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(CoverageCodeLoop)&gt;]/CoverageCd,&lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL ALARM}" appliesto="">
						<functionstep name="SetBurglarAlarmDiscount" id="446695300" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>
<=this.setvariable(discount_amount<=this.getvariable(disccount)>,<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(CoverageCodeLoop)>]/CurrentTermAmt,<=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(discount_desc<=this.getvariable(disccount)>,Burglar Alarm Discount)>]]></functionstep>
					</elseifcondition>
					<elseifcondition name="Check Sprinkler Credit" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(CoverageCodeLoop)&gt;]/CoverageCd,&lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL SPKCR}" appliesto="" id="2106088015">
						<functionstep name="SetSprinklerDiscount" id="787722311" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>
<=this.setvariable(discount_amount<=this.getvariable(disccount)>,<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(CoverageCodeLoop)>]/CurrentTermAmt,<=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(discount_desc<=this.getvariable(disccount)>,Sprinkler Discount)>]]></functionstep>
					</elseifcondition>
				</loop>
				<loop name="DiscountLoop" operator="equallesser" start="1" increment="1" count="&lt;=this.getvariable(disccount)&gt;">
					<condition name="Dicount Name Present" expression="{&lt;=this.getvariable(discount_desc&lt;=this.getvariable(DiscountLoop)&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="AddDiscount" id="1313890860" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(discount<=this.getvariable(DiscountLoop)>,<=this.getvariable(discount_desc<=this.getvariable(DiscountLoop)>)>)>

<=this.setvariable(value<=this.getvariable(DiscountLoop)>,<=this.getvariable(discount_amount<=this.getvariable(DiscountLoop)>)>)>

<=this.scriptlog(Safeco Home Discount:<=this.getvariable(dwellingstatecode)>: <=this.getvariable(discount_desc<=this.getvariable(DiscountLoop)>)>-<=this.getvariable(discount_amount<=this.getvariable(DiscountLoop)>)>)>
]]></functionstep>
					</condition>
				</loop>
			</condition>
		</condition>
		<condition name="Discounts" expression="{1 EQUAL 0}" appliesto="">
			<condition name="Sprinkler Discount" expression="{&lt;=this.substringregex(&lt;=this.splitindexat(&lt;=this.getvariable(buffer)&gt;, ProtectionDeviceSprinklerCd, 1)&gt;, \&gt;, \&lt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
				<functionstep name="SetSprinkerDiscount" id="1730954729" prompt="no" errormessage="Error extracting discounts. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>
<=this.setvariable(discount<=this.getvariable(disccount)>, Sprinkler Credit)>

]]></functionstep>
			</condition>
			<condition name="Burglar Discount" expression="{&lt;=this.substringregex(&lt;=this.splitindexat(&lt;=this.getvariable(buffer)&gt;, ProtectionDeviceBurglarCd, 1)&gt;, \&gt;, \&lt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
				<functionstep name="SetBurglarDiscount" id="279778899" prompt="no" errormessage="Error extracting discounts. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Burglar Alarm Credit)>

]]></functionstep>
			</condition>
		</condition>
		<condition name="Pay Plans" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}" appliesto="">
			<loop name="MonthlyLoop" operator="equallesser" start="1" increment="1" count="6" id="1497516832">
				<functionstep name="SetMonthlyTotalPremiumaa_New" id="374796178" prompt="no" errormessage="Error setting EFT total premium. Please contact EZLynx support team for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(monthlydescription<=this.getvariable(MonthlyLoop)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[<=this.getvariable(MonthlyLoop)>]/Description, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlydesc<=this.getvariable(MonthlyLoop)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[<=this.getvariable(MonthlyLoop)>]/NumPayments, <=PostXML.getoutputtextbuffer()>)> Pay)>

<=this.setvariable(monthlydownpay<=this.getvariable(MonthlyLoop)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[<=this.getvariable(MonthlyLoop)>]/DepositAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(monthlyinstall<=this.getvariable(MonthlyLoop)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/PaymentOption[<=this.getvariable(MonthlyLoop)>]/InstallmentInfo/InstallmentAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(montlytotalpremium,<=this.splitindexat(<=PostXML.getoutputtextbuffer()>,com.safeco_QuoteRq_PremiumTotal,1)>)>

<=this.setvariable(montlytotalpremium,<=this.substringregex(<=this.getvariable(montlytotalpremium)>,\>,\<)>)>
]]></functionstep>
				<condition name="Check" expression="{&lt;=this.getvariable(monthlydownpay&lt;=this.getvariable(MonthlyLoop)&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(monthlydescription&lt;=this.getvariable(MonthlyLoop)&gt;)&gt; EQUAL Monthly By Mail}" appliesto="" id="1247370282">
					<functionstep name="SetPaymentPlan_new" id="1707016435" prompt="no" errormessage="Error extracting Payment Plans. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(monthlycount)>

<=this.setvariable(monthlydownpay_rt<=this.getvariable(monthlycount)>, <=this.getvariable(monthlydownpay<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlydesc_rt<=this.getvariable(monthlycount)>, <=this.getvariable(monthlydesc<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlyinstallpay_rt<=this.getvariable(monthlycount)>, <=this.getvariable(monthlyinstall<=this.getvariable(MonthlyLoop)>)>)>

<=this.setvariable(monthlytotal_rt<=this.getvariable(monthlycount)>,<=this.getvariable(hometotalpremium_rt)>)>

]]></functionstep>
				</condition>
			</loop>
		</condition>
		<condition name="Issuing Company" expression="{1 EQUAL 1}" appliesto="">
			<functionstep name="SetIssuingCompany" id="2003822018" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(issuingcompany, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/InsurerName, <=anonymous.getoutputtextbuffer()>)>)>


<=this.setvariable(quotemessage_rt, Issuing Company = <=this.getvariable(issuingcompany)>)>

<=this.plusone(ratingcount)>

<=this.setvariable(ratingattribute<=this.getvariable(ratingcount)>, Issuing Company)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, <=this.getvariable(issuingcompany)>)>
]]></functionstep>
		</condition>
		<condition name="Rating Messages" expression="{1 EQUAL 1}" appliesto="">
			<loop name="RatingLoop" operator="equallesser" start="1" increment="1" count="20">
				<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus[&lt;=this.getvariable(RatingLoop)&gt;]/ExtendedStatusDesc, &lt;=anonymous.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="Rating1" id="953167755" prompt="no" errormessage="Error extracting rating message. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(ratingmessage1, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/MsgStatus/ExtendedStatus[<=this.getvariable(RatingLoop)>]/ExtendedStatusDesc, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, <=this.getvariable(ratingmessage1)>)>

<=this.setvariable(paymentplantype1, Total Premium)>]]></functionstep>
				</condition>
				<elsecondition>
					<functionstep name="EndRatingLoop1" id="1446276450" prompt="no" errormessage="Error extracting rating message. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(RatingLoop,25)>
]]></functionstep>
				</elsecondition>
			</loop>
		</condition>
		<condition name="State CA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
AND
{&lt;=this.getvariable(endorsements_earthquake_deductible)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
			<functionstep name="EQRatingMsg" id="1664051517" prompt="no" errormessage="Error extracting rating message. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, Earth Quake endorsement is not offered as an endorsement to this home quote.)>]]></functionstep>
		</condition>
		<condition name="Rating" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ND}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL SD}}
AND
{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,Review  NOTEQUAL -1}" appliesto="">
			<functionstep name="RatingMsgND" id="1119166710" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, Review Safecos Essential\, New Quality Plus and Optimum Packages for included coverage.)>]]></functionstep>
		</condition>
		<condition name="RatingMsg" expression="{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL Yes}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}}" appliesto="">
			<condition name="newcondition" expression="{&lt;=this.getvariable(rating1)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
				<functionstep name="SetEarthQuakeRatingMsg" id="751329568" prompt="no" errormessage="Error setting  rating message. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(ratingmessage1,Safeco Doesnot have earthquake endorsment in state <=this.getvariable(dwellingstatecode)>)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, <=this.getvariable(ratingmessage1)>)>]]></functionstep>
			</condition>
			<elsecondition>
				<functionstep name="SetEarthQuakeRatingMsg1" id="1852173042" prompt="no" errormessage="Error setting  rating message. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(ratingmessage1,Safeco Doesnot have earthquake endorsment in state <=this.getvariable(dwellingstatecode)>)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, <=this.getvariable(ratingmessage1)>)>]]></functionstep>
			</elsecondition>
		</condition>
		<condition name="Rating" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,Deductible has been adjusted to meet minimum)&gt; NOTEQUAL -1}" appliesto="" id="1036360571">
			<functionstep name="RatingMsgAll" id="980194621" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, Deductible has been adjusted to meet minimum underwriting guidelines.)>]]></functionstep>
		</condition>
		<condition name="SCC-10834" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="">
			<condition name="Rating" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,The premium returned for Premier includes all benefits at the Safeco Essential)&gt; NOTEQUAL -1}" appliesto="" id="814943074">
				<functionstep name="RatingMsgPremier-IL" id="1617598304" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, The premium returned for Premier includes all benefits at the Safeco Essential\, New Quality-Plus\, Optimum\, and Ultra levels in addition to 100% Extended Dwelling Coverage\, 100% Building Ordinance or Law\, Special Limits for Personal Property\, Personal Property Replacement Cost\, Personal Offense. For more details\, please consult Safeco's Product Guide.)>]]></functionstep>
			</condition>
		</condition>
		<condition name="SCC-10834" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}" appliesto="" id="1008273682">
			<condition name="Rating" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,The premium returned for Premier includes all benefits at the Safeco Essential)&gt; NOTEQUAL -1}" appliesto="" id="1930214215">
				<functionstep name="RatingMsgPremier" id="873540372" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, The premium returned for Premier includes all benefits at the Safeco Essential\, New Quality-Plus\, Optimum\, and Ultra levels in addition to 100% Extended Dwelling Coverage\, 100% Building Ordinance or Law\, 100% Water Backup\, Special Limits for Personal Property\, Personal Property Replacement Cost\, Personal Offense. For more details\, please consult Safeco’s Product Guide.)>]]></functionstep>
			</condition>
		</condition>
		<condition name="State-MI-WA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}" appliesto="">
			<condition name="SCC-9280-9281" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,The premium includes the closest limit available for BOLAW in a higher Coverage Level since the requested limit is not offered with the current Homeowner Coverage Level selected.)&gt; NOTEQUAL -1}" appliesto="">
				<functionstep name="Ordinance-law message" id="1094096275" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, The premium includes the closest limit available for BOLAW in a higher Coverage Level since the requested limit is not offered with the current Homeowner Coverage Level selected.)>]]></functionstep>
			</condition>
			<condition name="SCC-9280-9281" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,The premium includes the closest limit available for EDC in a higher Coverage Level since the requested limit is not offered with the current Homeowner Coverage Level selected.)&gt; NOTEQUAL -1}" appliesto="" id="1622196167">
				<functionstep name="ExtendedReplacement- Message" id="1221131045" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, The premium includes the closest limit available for EDC in a higher Coverage Level since the requested limit is not offered with the current Homeowner Coverage Level selected.)>]]></functionstep>
			</condition>
		</condition>
		<condition name="State-TX-SCC-9289" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}}
AND
{&lt;=this.getvariable(endorsements_earthquake)&gt; EQUAL Yes}" appliesto="" id="1325156760">
			<condition name="ConstructionType-TX" expression="{&lt;=java.callstringmethod(indexOf,&lt;=anonymous.getoutputtextbuffer()&gt;,Earthquake Deductible is required and is rated as 15% to meet minimum Underwriting guidelines.)&gt; NOTEQUAL -1}" appliesto="">
				<functionstep name="RatingMessage-Earthquake" id="91956140" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(ratingcount)>

<=this.setvariable(rating<=this.getvariable(ratingcount)>, Earthquake Deductible is required and is rated as 15% to meet minimum Underwriting guidelines.)>]]></functionstep>
			</condition>
		</condition>
		<condition name="Hidden QuoteID Extraction" expression="{1 EQUAL 1}" appliesto="">
			<functionstep name="ExtractHiddenQuoteID" id="1991126713" prompt="no" errormessage="Error extracting QuoteID. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(quotenumber, <=this.splitindexat(<=this.getvariable(quickaccessurl)>, p\=, 1)>)>

<=this.setvariable(quotetype, P)>

<=this.setvariable(showquoteid, false)>]]></functionstep>
		</condition>
		<condition name="Premium Breakdown" expression="{1 EQUAL 1}" appliesto="">
			<functionstep name="Setpremiumbreakdownvariables" id="159468210" prompt="no" errormessage="Error setting premium breakdowns. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragebreakdownpremium, Yes)>

<=this.setvariable(endorsementbreakdownpremium, Yes)>

<=this.setvariable(premiumdesc, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(premiumamount, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(spppremiumdesc, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(spppremiumamount, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(spptotalamount , 0.0)>

<=this.setvariable(windhailvalue, <=java.callstringmethod(anonymous, VK_BLANK)>)>

<=this.setvariable(allperilvalue, <=java.callstringmethod(anonymous, VK_BLANK)>)>]]></functionstep>
			<loop name="BreakdownLoop" operator="equallesser" start="1" increment="1" count="50">
				<functionstep name="Extractbuffer" id="1370593087" prompt="no" errormessage="Error extracting buffer. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumdesc, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/CoverageCd, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(premiumamount, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/CurrentTermAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(premiumamount, <=java.callstringmethod(replaceFirst, <=this.getvariable(premiumamount)>, ^0+, <=java.callstringmethod(anonymous, VK_BLANK)>)>)>]]></functionstep>
				<condition name="Check dwelling amount" expression="{{&lt;=this.getvariable(premiumdesc)&gt; EQUAL DWELL}
OR
{&lt;=this.getvariable(premiumdesc)&gt; EQUAL AALMT}}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL INCL}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="setdwellingamount1" id="331645061" prompt="no" errormessage="Error setting dwelling amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_dwelling_amount, INCLUDED)>

<=this.setvariable(homecoveragepremium_dwelling_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(coverage_dwelling,  $<=this.getvariable(homecoveragepremium_dwelling_limit)>)>

<=this.setvariable(coverage_replacementcost, $<=this.getvariable(homecoveragepremium_dwelling_limit)>)>

<=this.setvariable(homecoveragepremium_dwelling_limit, $<=this.getvariable(homecoveragepremium_dwelling_limit)>)>

<=this.setvariable(windhailvalue, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(allperilvalue, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
					</condition>
					<elsecondition>
						<functionstep name="setdwellingamount" id="254053496" prompt="no" errormessage="Error setting dwelling amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(homecoveragepremium_dwelling_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(homecoveragepremium_dwelling_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_dwelling_limit,WOD)>

<=this.setvariable(coverage_dwelling, $<=this.getvariable(homecoveragepremium_dwelling_limit)>)>

<=this.setvariable(coverage_replacementcost, $<=this.getvariable(homecoveragepremium_dwelling_limit)>)>

<=this.setvariable(homecoveragepremium_dwelling_limit, $<=this.getvariable(homecoveragepremium_dwelling_limit)>)>

<=this.setvariable(windhailvalue, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(allperilvalue, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
					</elsecondition>
				</condition>
				<condition name="AllPeril" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL AllPeril}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL AllPeril}" appliesto="">
					<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL AllPeril}" appliesto="">
						<condition name="Check Deductible Present" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="557447538">
							<condition name="If Ded value 1%" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, %)&gt; NOTEQUAL -1}" appliesto="" id="1733107524">
								<functionstep name="SetAllPeril%1" id="438813803" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, All Perils Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>%)>]]></functionstep>
							</condition>
							<elsecondition id="1376565953">
								<functionstep name="SetAllPeril1" id="2131098363" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, All Perils Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
							</elsecondition>
						</condition>
					</condition>
					<elsecondition>
						<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL AllPeril}" appliesto="">
							<condition name="Check Deductible Present" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
								<condition name="If Ded value 1%" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt;, %)&gt; NOTEQUAL -1}" appliesto="">
									<functionstep name="SetAllPeril%" id="1678581034" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, All Perils Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>%)>]]></functionstep>
								</condition>
								<elsecondition>
									<functionstep name="SetAllPeril" id="435744060" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, All Perils Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>
]]></functionstep>
								</elsecondition>
							</condition>
						</condition>
					</elsecondition>
				</condition>
				<condition name="Check Wind Hail Present" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL WindHail}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL WindHail}" appliesto="">
					<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL WindHail}" appliesto="">
						<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
							<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 1}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 2}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 3}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 4}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 5}" appliesto="">
								<functionstep name="SetWindHail" id="1015746647" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>%)>]]></functionstep>
							</condition>
							<elsecondition>
								<functionstep name="SetWindHail9" id="1580363463" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
							</elsecondition>
						</condition>
						<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="618410422">
							<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 1}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 2}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 3}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 4}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 5}" appliesto="" id="1838669170">
								<functionstep name="SetWindHail01" id="1998227948" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatPct, <=PostXML.getoutputtextbuffer()>)>%)>]]></functionstep>
							</condition>
							<elsecondition id="1662286319">
								<functionstep name="SetWindHail92" id="741728102" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatPct, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
							</elsecondition>
						</condition>
						<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatCurrencyAmt/Amt, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="349033892">
							<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 1}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 2}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 3}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 4}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[1]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 5}" appliesto="" id="97040410">
								<functionstep name="SetWindHail-MA" id="145632062" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatPct, <=PostXML.getoutputtextbuffer()>)>%)>]]></functionstep>
							</condition>
							<elsecondition id="471604626">
								<functionstep name="SetWindHail-MA2" id="1171090712" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[1]/FormatCurrencyAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
							</elsecondition>
						</condition>
					</condition>
					<elsecondition>
						<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/DeductibleAppliesToCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL WindHail}" appliesto="">
							<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
								<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 1}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 2}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 3}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 4}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 5}" appliesto="">
									<functionstep name="SetWindHail12" id="1803201056" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>%)>]]></functionstep>
								</condition>
								<elsecondition>
									<functionstep name="SetWindHail121" id="370584427" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
								</elsecondition>
							</condition>
							<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="955521748">
								<condition name="newcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 1}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 2}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 3}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 4}
OR
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Deductible[2]/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 5}" appliesto="" id="774786117">
									<functionstep name="SetWindHail6" id="1949593853" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatPct, <=PostXML.getoutputtextbuffer()>)>%)>]]></functionstep>
								</condition>
								<elsecondition id="150955726">
									<functionstep name="SetWindHail17" id="410147615" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Wind Hail Deductible)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible[2]/FormatPct, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
								</elsecondition>
							</condition>
						</condition>
					</elsecondition>
				</condition>
				<elseifcondition name="Check Other Structure limit" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL OS}" appliesto="">
					<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL INCL}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="SetOSLimit" id="1090496679" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_otherstructures_amount, INCLUDED)>

<=this.setvariable(homecoveragepremium_otherstructures_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_otherstructures_limit,WOD)>

<=this.setvariable(coverage_otherstructures, $<=this.getvariable(homecoveragepremium_otherstructures_limit)>)>

<=this.setvariable(homecoveragepremium_otherstructures_limit, $<=this.getvariable(homecoveragepremium_otherstructures_limit)>)>]]></functionstep>
					</condition>
					<elsecondition>
						<functionstep name="SetOSLimit1" id="342453982" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(homecoveragepremium_otherstructures_amount, <=this.getvariable(premiumamount)>)>


<=this.setvariable(homecoveragepremium_otherstructures_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_otherstructures_limit,WOD)>

<=this.setvariable(coverage_otherstructures, $<=this.getvariable(homecoveragepremium_otherstructures_limit)>)>

<=this.setvariable(homecoveragepremium_otherstructures_limit, $<=this.getvariable(homecoveragepremium_otherstructures_limit)>)>]]></functionstep>
					</elsecondition>
				</elseifcondition>
				<elseifcondition name="Check Personal Property amount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL PP}" appliesto="" id="1260785246">
					<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL INCL}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="SetPPamount1" id="923037984" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_personalproperty_amount, INCLUDED)>

<=this.setvariable(homecoveragepremium_personalproperty_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalproperty_limit,WOD)>

<=this.setvariable(coverage_personalproperty, $<=this.getvariable(homecoveragepremium_personalproperty_limit)>)>

<=this.setvariable(homecoveragepremium_personalproperty_limit, $<=this.getvariable(homecoveragepremium_personalproperty_limit)>)>]]></functionstep>
					</condition>
					<elsecondition>
						<functionstep name="SetPPamount" id="28120092" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(homecoveragepremium_personalproperty_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(homecoveragepremium_personalproperty_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalproperty_limit,WOD)>

<=this.setvariable(coverage_personalproperty, $<=this.getvariable(homecoveragepremium_personalproperty_limit)>)>

<=this.setvariable(homecoveragepremium_personalproperty_limit, $<=this.getvariable(homecoveragepremium_personalproperty_limit)>)>]]></functionstep>
					</elsecondition>
				</elseifcondition>
				<elseifcondition name="Check Loss of Use" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL LOU}" appliesto="" id="1099833643">
					<functionstep name="SetLossOfUse" id="197842980" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_lossofuse_amount, INCLUDED)>

<=func.FormatAmount(coverage_lossofuse,WOD)>

<=this.setvariable(homecoveragepremium_lossofuse_limit,$<=this.getvariable(coverage_lossofuse)>)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="Check personal liability amount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL PL}" appliesto="">
					<condition name="Check State" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
						<condition name="Check Product" expression="{&lt;=this.getvariable(policync)&gt; EQUAL Quality Crest Home}
OR
{&lt;=this.getvariable(policy)&gt; EQUAL Quality Crest Home}" appliesto="">
							<condition name="Check Amount" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
								<functionstep name="SetPLamount2" id="230593866" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(homecoveragepremium_personalliability_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>]]></functionstep>
							</condition>
							<elsecondition>
								<functionstep name="SetPLamount21" id="347404717" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_personalliability_amount, INCLUDED)>

<=this.setvariable(homecoveragepremium_personalliability_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>]]></functionstep>
							</elsecondition>
						</condition>
						<elsecondition>
							<condition name="Check Limit" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="1506723870">
								<functionstep name="SetPLamount3" id="1467696731" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(homecoveragepremium_personalliability_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>]]></functionstep>
							</condition>
							<elsecondition id="703426927">
								<functionstep name="SetPLamount4" id="1809811222" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_personalliability_amount, INCLUDED)>

<=this.setvariable(homecoveragepremium_personalliability_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>]]></functionstep>
							</elsecondition>
						</elsecondition>
					</condition>
					<elsecondition>
						<condition name="Check Limit" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; GREATER 100000}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
							<functionstep name="SetPLamount1" id="1615235193" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(homecoveragepremium_personalliability_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>]]></functionstep>
						</condition>
						<elseifcondition name="Check limit" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUALLESSER 500000}
AND
{&lt;=this.getvariable(premiumamount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
							<functionstep name="SetPLamount11" id="519956281" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_personalliability_amount, INCLUDED)>

<=this.setvariable(homecoveragepremium_personalliability_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>]]></functionstep>
						</elseifcondition>
						<elsecondition>
							<functionstep name="SetPLamount" id="1752969828" prompt="no" errormessage="Error setting personal liability amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(homecoveragepremium_personalliability_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_personalliability_limit,WOD)>

<=this.setvariable(coverage_personalliability, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>

<=this.setvariable(homecoveragepremium_personalliability_limit, $<=this.getvariable(homecoveragepremium_personalliability_limit)>)>
]]></functionstep>
						</elsecondition>
					</elsecondition>
				</elseifcondition>
				<elseifcondition name="Check Medical limit" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL MEDPM}" appliesto="" id="1267572404">
					<functionstep name="SetMedicalLimit" id="134732461" prompt="no" errormessage="Error setting personal property amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homecoveragepremium_medicalpayments_amount, INCLUDED)>

<=this.setvariable(homecoveragepremium_medicalpayments_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(homecoveragepremium_medicalpayments_limit,WOD)>

<=this.setvariable(coverage_medicalpayments, $<=this.getvariable(homecoveragepremium_medicalpayments_limit)>)>

<=this.setvariable(homecoveragepremium_medicalpayments_limit, $<=this.getvariable(homecoveragepremium_medicalpayments_limit)>)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="check identity theft amount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL FRAUD}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="Setidentitytheftamount" id="758463361" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_identitytheft_amount, $<=this.getvariable(premiumamount)>)>

<=this.setvariable(endorsementpremium_identitytheft_limit, INCLUDED)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="Check Sewer &amp; Water Back-Up for Bldg &amp; Contents" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL SEWER}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatCurrencyAmt/Amt, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}" appliesto="" id="419326789">
					<functionstep name="SetWaterbackup" id="1170969288" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(endorsementpremium_waterbackup_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(endorsementpremium_waterbackup_limit, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatCurrencyAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_waterbackup_limit,WOD)>

<=this.setvariable(endorsementpremium_waterbackup_limit, $<=this.getvariable(endorsementpremium_waterbackup_limit)>)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="Check Sewer &amp; Water Back-Up for Bldg &amp; Contents" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL SEWER}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatCurrencyAmt/Amt, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}" appliesto="" id="1351381108">
					<functionstep name="SetWaterbackupIL" id="816147878" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(endorsementpremium_waterbackup_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(map_waterbackup_limit, $50500=5000|$100500=10000|$250500=25000|$500500=50000|$51000=5000|$101000=10000|$251000=25000|$501000=50000|$51500=5000|$101500=10000|$251500=25000|$501500=50000|$52000=5000|$102000=10000|$252000=25000|$502000=50000|$52500=5000|$102500=10000|$252500=25000|$502500=50000|$55000=5000|$105000=10000|$255000=25000|$505000=50000|$57500=5000|$107500=10000|$257500=25000|$507500=50000|$2515000=50000)>

<=this.setvariable(endorsementpremium_waterbackup_limit, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatCurrencyAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(endorsementpremium_waterbackup_limit, <=this.convertvalue(<=this.getvariable(endorsementpremium_waterbackup_limit)>, <=this.getvariable(map_waterbackup_limit)>)>)>

<=func.FormatAmount(endorsementpremium_waterbackup_limit,WOD)>

<=this.setvariable(endorsementpremium_waterbackup_limit, $<=this.getvariable(endorsementpremium_waterbackup_limit)>)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="Check loss assesment amount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL LAC}" appliesto="">
					<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL INCL}" appliesto="" id="352592370">
						<functionstep name="SetPremiumamuntIncludedLAC" id="587533269" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumamount, INCLUDED)>]]></functionstep>
					</condition>
					<elsecondition id="166809674">
						<functionstep name="SetPremiumamuntLAC" id="1271146426" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(premiumamount, <=this.getvariable(premiumamount)>)>]]></functionstep>
					</elsecondition>
					<condition name="Loss Assessment" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatCurrencyAmt/Amt, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="Setlossassesmentamount" id="917873053" prompt="no" errormessage="Error setting loss assesment amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_lossassessment_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(endorsementpremium_lossassessment_limit, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatCurrencyAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_lossassessment_limit,WOD)>

<=this.setvariable(endorsementpremium_lossassessment_limit, $<=this.getvariable(endorsementpremium_lossassessment_limit)>)>

]]></functionstep>
					</condition>
					<elseifcondition name="newelseifcondition" expression="{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatInteger, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="Setlossassesmentamount12" id="1676194425" prompt="no" errormessage="Error setting loss assesment amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_lossassessment_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(endorsementpremium_lossassessment_limit, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_lossassessment_limit,WOD)>

<=this.setvariable(endorsementpremium_lossassessment_limit, $<=this.getvariable(endorsementpremium_lossassessment_limit)>)>]]></functionstep>
					</elseifcondition>
					<elsecondition>
						<functionstep name="Setlossassesmentamount123" id="1606584204" prompt="no" errormessage="Error setting loss assesment amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_lossassessment_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(endorsementpremium_lossassessment_limit, INCLUDED)>]]></functionstep>
					</elsecondition>
				</elseifcondition>
				<elseifcondition name="Check Ordinance or Law amount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL BOLAW}" appliesto="">
					<condition name="State NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
						<functionstep name="SetOrdinanceorLawamountNC" id="1737505069" prompt="no" errormessage="Error setting ordinance or law amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_ordinanceorlaw_amount, $<=this.getvariable(premiumamount)>)>

<=this.setvariable(endorsementpremium_ordinanceorlaw_limit, INCLUDED)>]]></functionstep>
					</condition>
					<elsecondition>
						<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1860012968">
							<functionstep name="SetPremiumamuntIncludedBOLAW" id="1518236498" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumamount, INCLUDED)>]]></functionstep>
						</condition>
						<elsecondition id="843907157">
							<functionstep name="SetPremiumamuntBOLAW" id="1371318305" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(premiumamount, <=this.getvariable(premiumamount)>)>]]></functionstep>
						</elsecondition>
						<functionstep name="SetOrdinanceorLawamount" id="1983827023" prompt="no" errormessage="Error setting ordinance or law amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_ordinanceorlaw_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(endorsementpremium_ordinanceorlaw_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatPct, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
						<condition name="If limit is  %age" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.getvariable(endorsementpremium_ordinanceorlaw_limit)&gt;, $)&gt; NOTEQUAL -1}
AND
{&lt;=this.getvariable(endorsementpremium_ordinanceorlaw_limit)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
							<functionstep name="Set$" id="394169970" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(endorsementpremium_ordinanceorlaw_limit,WOD)>

<=this.setvariable(endorsementpremium_ordinanceorlaw_limit, $<=this.getvariable(endorsementpremium_ordinanceorlaw_limit)>)>]]></functionstep>
						</condition>
						<elsecondition>
							<functionstep name="Set%" id="1251743374" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_ordinanceorlaw_limit, <=this.getvariable(endorsementpremium_ordinanceorlaw_limit)>%)>]]></functionstep>
						</elsecondition>
					</elsecondition>
				</elseifcondition>
				<elseifcondition name="Check Increased Jwelery amount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL UNJWF}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
					<functionstep name="SetIncreasedJweleryamount" id="1111683888" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(endorsementpremium_increasedjewelrywatchesfurs_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(endorsementpremium_increasedjewelrywatchesfurs_limit, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_increasedjewelrywatchesfurs_limit,WOD)>

<=this.setvariable(endorsementpremium_increasedjewelrywatchesfurs_limit, $<=this.getvariable(endorsementpremium_increasedjewelrywatchesfurs_limit)>)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="Check for Personal Injury" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL PIHOM}" appliesto="" id="1395402257">
					<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
						<functionstep name="SetPIvariables1" id="1232313893" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(endorsementpremium_personalinjury_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(endorsementpremium_personalinjury_limit, INCLUDED)>]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="Check for Workers Compensation" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL WCINC}" appliesto="" id="1523149880">
					<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="257882611">
						<functionstep name="SetWCvariables1" id="1642555836" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, EEE - Worker's Comp - Occasional Employees)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>
]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="Check for Special Personal Property" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL SPPP}" appliesto="" id="2028647228">
					<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="1404090318">
						<functionstep name="SetSpecialPersonalProp" id="811654164" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Special Personal Property)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>
]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="Check for Increased condo Building Items" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL AALMT}" appliesto="" id="31813061">
					<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="1323584837">
						<functionstep name="SetIncreased CondoBuildingItem" id="1582753613" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Increased Condo Building Items)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>
]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="Check for Eqipment Breakdown" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL EQPBK}" appliesto="" id="260283673">
					<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="1262329781">
						<functionstep name="SetEquipmentBreakdown" id="884489184" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Equipment Breakdown)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>
]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="Check forService Line Endorsement" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL SWRLI}" appliesto="" id="1048809754">
					<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="121956228">
						<functionstep name="SetServiceLineEndorsement" id="1308080287" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Service Line Endorsement)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="Check for Increased Mold" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL MOLD}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatCurrencyAmt/Amt,&lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1368637432">
					<condition name="Amount" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL Included}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
						<functionstep name="SetMold1" id="463221237" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(endorsementpremium_increasedmold_amount, <=this.getvariable(premiumamount)>)>

<=this.setvariable(endorsementpremium_increasedmold_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatCurrencyAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_increasedmold_limit,WOD)>

<=this.setvariable(endorsementpremium_increasedmold_limit, $<=this.getvariable(endorsementpremium_increasedmold_limit)>)>]]></functionstep>
					</condition>
					<elsecondition>
						<functionstep name="SetMold" id="669008364" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_increasedmold_amount, INCLUDED)>

<=this.setvariable(endorsementpremium_increasedmold_limit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatCurrencyAmt/Amt,<=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(endorsementpremium_increasedmold_limit,WOD)>

<=this.setvariable(endorsementpremium_increasedmold_limit, $<=this.getvariable(endorsementpremium_increasedmold_limit)>)>

]]></functionstep>
					</elsecondition>
					<condition name="If limit is %" expression="{&lt;=java.callstringmethod(indexOf, &lt;=this.getvariable(endorsementpremium_increasedmold_limit)&gt;, %)&gt; NOTEQUAL -1}" appliesto="" id="178859695">
						<functionstep name="Setincreasedmold%" id="2109004216" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_increasedmold_limit, <=this.getvariable(endorsementpremium_increasedmold_limit)>%)>]]></functionstep>
					</condition>
					<elsecondition id="688926555">
						<functionstep name="Setincreasedmold" id="1270317365" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_increasedmold_limit, $<=this.getvariable(endorsementpremium_increasedmold_limit)>)>]]></functionstep>
					</elsecondition>
				</elseifcondition>
				<elseifcondition name="Check Replacement Cost Content" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL FVREP}" appliesto="" id="1242926584">
					<functionstep name="SetRCC" id="1495592134" prompt="no" errormessage="Error setting increased jwelery amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(endorsementpremium_replacementcostcontent_amount, INCLUDED)>

<=this.setvariable(endorsementpremium_replacementcostcontent_limit, INCLUDED)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="check Extended Dwelling Coverage" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL com.safeco_EDC}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1548324302">
					<condition name="Check Premium amount" expression="{{&lt;=this.getvariable(premiumamount)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL INCL}}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL 0}" appliesto="">
						<functionstep name="SetPremiumamuntIncluded" id="2043074319" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Extended Dwelling Coverage)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
					</condition>
					<elseifcondition name="Check Limit" expression="{{&lt;=this.getvariable(premiumamount)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL INCL}}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Limit/FormatPct, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; GREATER 0}" appliesto="">
						<functionstep name="SetPremiumlimit" id="1714596817" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Extended Dwelling Coverage)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatPct, <=PostXML.getoutputtextbuffer()>)>%)>
]]></functionstep>
					</elseifcondition>
					<elsecondition>
						<functionstep name="SetPremiumamunt" id="487177994" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Extended Dwelling Coverage)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatPct, <=PostXML.getoutputtextbuffer()>)>%)>
]]></functionstep>
					</elsecondition>
				</elseifcondition>
				<elseifcondition name="Earthquake" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL ERQK}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}" appliesto="" id="505388592">
					<condition name="Check Premium amount" expression="{&lt;=this.getvariable(premiumamount)&gt; EQUAL Included}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
OR
{&lt;=this.getvariable(premiumamount)&gt; EQUAL INCL}" appliesto="" id="1927155512">
						<functionstep name="SetEQ" id="400562090" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(premiumamount, INCLUDED)>]]></functionstep>
					</condition>
					<elsecondition id="1647020584">
						<functionstep name="SetEQ1" id="1366251012" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>]]></functionstep>
					</elsecondition>
					<functionstep name="SETEQ2" id="900795061" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Earthquake)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Deductible/FormatPct, <=PostXML.getoutputtextbuffer()>)>%)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="check Quality Plus" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL com.safeco_QSPLUS}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="1442119220">
					<functionstep name="SetQualityPlus" id="2049493015" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Quality Select Plus)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="check Foundation Water Damage" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL WD}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="2130444112">
					<functionstep name="SetFoundationWaterDamage" id="145073230" prompt="no" errormessage="Error setting identity theft amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Foundation Water Damage)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[<=this.getvariable(BreakdownLoop)>]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>

<=func.FormatAmount(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>,WOD)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.getvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>)>)>
]]></functionstep>
				</elseifcondition>
				<elseifcondition name="NewHomeCredit" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL NHDIS}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
					<functionstep name="SetNewHomeDiscount1" id="315071981" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Newer Home Credit)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="AutomaticGasShutOff Discount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL com.safeco_GASOF}
AND
{&lt;=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/Dwell/Coverage[&lt;=this.getvariable(BreakdownLoop)&gt;]/Option/OptionCd, &lt;=PostXML.getoutputtextbuffer()&gt;)&gt; EQUAL Y}" appliesto="" id="478536941">
					<functionstep name="SetAutomaticGasShutOffDiscount" id="206526926" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Automatic Gas Shut Off Valve)>
]]></functionstep>
					<condition name="Premium Amount Present" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
						<functionstep name="SetAutomaticGasShutOffDiscount1" id="1942410074" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>

]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="AffinityGroupDiscount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL GROUP}" appliesto="" id="1718523260">
					<functionstep name="SetAffinityGroupDiscount" id="1452314004" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Affinity Group Discount)>]]></functionstep>
					<condition name="Premium Amount Present" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
						<functionstep name="SetAffinityGroupDiscount1" id="767683568" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>

]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="UmbrellaDiscount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL UMBCR}" appliesto="" id="798009368">
					<functionstep name="SetUmbrellaDiscount" id="736973097" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Umbrella Account Credit)>]]></functionstep>
					<condition name="Premium Amount Present" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
						<functionstep name="SetUmbrellaDiscount1" id="431947363" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="NewBuyerDiscount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL com.safeco_NEWBY}" appliesto="" id="1404211752">
					<functionstep name="SetNewBuyerDiscount" id="422559807" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Newer Buyer Discount)>]]></functionstep>
					<condition name="Premium Amount Present" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
						<functionstep name="SetNewBuyerDiscount1" id="1420356844" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>

]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="Sprinkler" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL SPKCR}
AND
{&lt;=this.getvariable(endorsements_sprinklercount)&gt; GREATER 0}" appliesto="">
					<condition name="Check Premium Amount" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
						<functionstep name="SetSprinkler" id="515387444" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Sprinkler Credit)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>

]]></functionstep>
					</condition>
				</elseifcondition>
				<elseifcondition name="Alarm" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL ALARM}
AND
{&lt;=this.getvariable(endorsements_burglaralarmcount)&gt; GREATER 0}" appliesto="">
					<condition name="Check Premium Amount" expression="{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
						<functionstep name="SetAlarm" id="68072018" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Burglar Alarm Credit)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>

]]></functionstep>
					</condition>
					<elsecondition>
						<condition name="State NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
							<functionstep name="SetAlarm1" id="1264444457" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Burglar Alarm Credit)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>
]]></functionstep>
						</condition>
					</elsecondition>
				</elseifcondition>
				<elseifcondition name="Renewal Discount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL RDIS}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="1826294146">
					<functionstep name="SetRenewalDisount" id="352413644" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Renewal Discount)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="AdvantageDiscount" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL ADVT}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="1684097701">
					<functionstep name="SetAdvantageDiscount" id="386378515" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Advantage Discount)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="AccountCredit" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL ACCT}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
					<functionstep name="SetAccCredit" id="1199771614" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Account Credit)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="Advance Quote Credit" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL AQDIS}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
					<functionstep name="SetAdvanceQuoteCredit" id="652155545" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Advanced Quote Credit)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, -<=this.getvariable(premiumamount)>)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="WindHail" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL Wind Hail}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="">
					<functionstep name="SetWindHail1" id="220905625" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(disccount)>

<=this.setvariable(discount<=this.getvariable(disccount)>, Wind Hail Exclusion)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(value<=this.getvariable(disccount)>, <=this.getvariable(premiumamount)>)>

]]></functionstep>
				</elseifcondition>
				<elseifcondition name="Kentucky Service Charge" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL STSR2}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="1232707114">
					<functionstep name="SetKentuckySErviceCharge" id="1366030679" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Kentucky Service Charge)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="California Service Charge" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL STSR2}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
					<functionstep name="SetCaliforniaServiceCharge" id="1604340419" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, California Seismic Safety Fee)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="Kentucky Surcharge" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL com.safeco_STSR1K}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="1428179532">
					<functionstep name="SetKentuckySurcharge" id="940105173" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, Kentucky Surcharge)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="Kentucky MunicipalTax" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL com.safeco_CTTX1}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="130214343">
					<functionstep name="SetKentuckyMunicipal" id="227291178" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, City Municipal Tax)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="County Tax" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL com.safeco_CTTX2}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(premiumamount)&gt; NOTEQUAL INCL}" appliesto="" id="1398092923">
					<functionstep name="SetCountyTax" id="1673531147" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, County Tax)>

<=func.FormatAmount(premiumamount,WD)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(premiumamount)>)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, INCLUDED)>]]></functionstep>
				</elseifcondition>
				<elseifcondition name="check for blank" expression="{&lt;=this.getvariable(premiumdesc)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="" id="1333848450">
					<functionstep name="BreakLoop" id="1863345597" prompt="no" errormessage="Error setting premium breakdown. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(BreakdownLoop, 100)>]]></functionstep>
				</elseifcondition>
			</loop>
			<condition name="Check if SPP present" expression="{&lt;=this.getvariable(endorsements_scheduledpersonalproperty)&gt; EQUAL Yes}" appliesto="">
				<loop name="SPPLoop" operator="equallesser" start="1" increment="1" count="10">
					<functionstep name="ExtractSPPbuffer" id="569802609" prompt="no" errormessage="Error extracting buffer. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(spppremiumdesc, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/PropertySchedule[<=this.getvariable(SPPLoop)>]/PropertyClassCd, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(spppremiumamount, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/PropertySchedule[<=this.getvariable(SPPLoop)>]/Coverage[2]/CurrentTermAmt/Amt, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(spppremiumdescription, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/PropertySchedule[<=this.getvariable(SPPLoop)>]/com.safeco_SPPDescription, <=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(spppremiumlimit, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/HomeLineBusiness/PropertySchedule[<=this.getvariable(SPPLoop)>]/Coverage[1]/Limit/FormatInteger, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
					<condition name="newcondition" expression="{&lt;=this.getvariable(spppremiumamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(spppremiumamount)&gt; NOTEQUAL 0.0}" appliesto="">
						<functionstep name="SetSPPamount123" id="1513137781" prompt="no" errormessage="Error setting SPP amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[
<=this.plusone(CarrierEndorsementCount)>

<=this.setvariable(carrierendorsement<=this.getvariable(CarrierEndorsementCount)>, <=this.getvariable(spppremiumdescription)>)>

<=this.setvariable(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>, $<=this.addfloat(<=this.getvariable(spppremiumamount)>)>)>

<=func.FormatAmount(carrierendorsementvalue<=this.getvariable(CarrierEndorsementCount)>,WD)>

<=this.setvariable(carrierendorsementlimit<=this.getvariable(CarrierEndorsementCount)>, $<=this.getvariable(spppremiumlimit)>)>]]></functionstep>
					</condition>
					<condition name="CheckSPPamount" expression="{{&lt;=this.getvariable(spppremiumdesc)&gt; EQUAL GU}
OR
{&lt;=this.getvariable(spppremiumdesc)&gt; EQUAL JL}
OR
{&lt;=this.getvariable(spppremiumdesc)&gt; EQUAL FR}
OR
{&lt;=this.getvariable(spppremiumdesc)&gt; EQUAL SV}
OR
{&lt;=this.getvariable(spppremiumdesc)&gt; EQUAL FINEA}
OR
{&lt;=this.getvariable(spppremiumdesc)&gt; EQUAL com.safeco_FINEAB}}
AND
{&lt;=this.getvariable(spptotalamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(spptotalamount)&gt; NOTEQUAL 0.0}" appliesto="">
						<functionstep name="SetSPPamount" id="264836161" prompt="no" errormessage="Error setting SPP amount. Please contact EZLynx for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(spptotalamount, <=this.addfloat(<=this.getvariable(spppremiumamount)>, <=this.getvariable(spptotalamount)>)>)>
]]></functionstep>
					</condition>
				</loop>
				<condition name="SPP amount" expression="{&lt;=this.getvariable(spptotalamount)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=this.getvariable(spptotalamount)&gt; NOTEQUAL 0.0}" appliesto="">
					<functionstep name="SetSPPtotalamount" id="1593487619" prompt="no" errormessage="Error setting SPP amount. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=func.FormatAmount(spptotalamount,WD)>

<=this.setvariable(endorsementpremium_scheduledpersonalproperty_amount, <=this.getvariable(spptotalamount)>)>

<=this.setvariable(endorsementpremium_scheduledpersonalproperty_limit, INCLUDED)>]]></functionstep>
				</condition>
			</condition>
		</condition>
		<condition name="Premium condition" expression="{&lt;=func.premiumRegexCheckHome(&lt;=this.getvariable(premium)&gt;)&gt; EQUAL true}" appliesto="">
			<functionstep name="SetLastPage" id="491298007" prompt="no" errormessage="Error setting Last Page. Please contac EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setlastpage(\<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"\>\<html\>	\<head\>		\<title\>EZLynx - Safeco Quote Page\</title\>	\</head\>	\<body\>		\<TABLE id="Table1" cellSpacing="0" cellPadding="0" width="100%" border="1"\>			\<TR\>				\<TD bgcolor="SteelBlue" align="center"\>\<font color="#ffffff"\>-- Safeco Quote Page --\</font\>\</TD\>			\</TR\>			\<tr\>				\<td\>Applicant Name: <=this.getvariable(applicant_firstname)> <=this.getvariable(applicant_lastname)>\</td\>			\</tr\>			\<tr\>				\<td\>Policy Effective Date: <=this.getvariable(coverage_effective)>\</td\>			\</tr\>			\<tr\>				\<td\>					&nbsp;&nbsp;&nbsp;6 MONTH POLICY PREMIUM&nbsp;&nbsp;<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PolicySummaryInfo/FullTermAmt/Amt, <=anonymous.getoutputtextbuffer()>)> (Paid in Full)				\</td\>			\</tr\>		\</TABLE\>		\<P\>\</P\>		\<P\>The Safeco quote page is unavailable for viewing through EZLynx. To view the 			actual quote page\, please login to the \<a target="_blank" href="<=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/  com.safeco_CompanyURL, <=anonymous.getoutputtextbuffer()>)>"\>				Safeco website.\</a\>\</P\>	\</body\>\</html\>)>]]></functionstep>
			<functionstep name="SetRQUIDForScriptLog" id="1848543519" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(rquid, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/RqUID,<=anonymous.getoutputtextbuffer()>)>)>

<=this.setvariable(companynum, <=this.substringregex(<=anonymous.getoutputtextbuffer()>,<CompanysQuoteNumber>,\<\/CompanysQuoteNumber\>)>)>

<=this.setvariable(SafecoHomeURL, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/  com.safeco_CompanyURL, <=anonymous.getoutputtextbuffer()>)>)>]]></functionstep>
			<condition name="QuoteProposal OLD- Donot Delete" expression="{1 EQUAL 0}" appliesto="">
				<condition name="QuoteProposal - Donot Delete" expression="{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 1}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 0}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 16}" appliesto="">
					<condition name="TestURL" expression="{&lt;=this.getprofilekeyvalue(environment)&gt; EQUAL UAT}" appliesto="">
						<functionstep name="SetTestURLQP" id="1636369443" prompt="no" errormessage="Error setting test account URL. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(urlqp, https://safesite.qa.safeco.com/dpec/signin.asp?)>

<=this.setvariable(urlqp1, https://safesite.qa.safeco.com/Personal/TACRC/home)>

<=this.setvariable(urlpersonal, safesite.qa.safeco.com/Personal/TACRC)>]]></functionstep>
					</condition>
					<condition name="AgentURL" expression="{&lt;=this.getprofilekeyvalue(environment)&gt; NOTEQUAL UAT}" appliesto="">
						<functionstep name="SetAgentURLQP" id="2115153271" prompt="no" errormessage="Error setting agent URL. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(urlqp, https://safesite.safeco.com/dpec/signin.asp?)>

<=this.setvariable(urlqp1, https://safesite.safeco.com/personal/home)>

<=this.setvariable(urlqp2, https://safesite.safeco.com/personal)>

<=this.setvariable(urlpersonal, safesite.safeco.com/personal)>]]></functionstep>
					</condition>
					<condition name="TestURL" expression="{&lt;=this.getprofilekeyvalue(environment)&gt; EQUAL UAT}" appliesto="">
						<httpstep name="GetNewURL" id="35806119054771013">
							<script protocol="http" method="get" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="">
								<url><![CDATA[<=this.getvariable(urlqp)>OriginalURL=/Client/TACRC/Client/OpenActivity.aspx&l=o&amp;p=<=this.splitindexat(<=this.getvariable(quickaccessurl)>, p\=, 1)>]]></url>
							</script>
							<result errormessage="" onerror="QuoteProposalError">
								<verify>
									<form name="frmsignin">
										<input name="hdnFormAction" value="">
										</input>
									</form>
								</verify>
								<forms>
									<form name="frmsignin">
										<input name="hdnFormAction" type="hidden" value="" maxlength="">
										</input>
										<input name="hdnXMLString" type="hidden" value="" maxlength="">
										</input>
										<input name="hdnFC" type="hidden" value="0" maxlength="">
										</input>
										<input name="hdnOriginalURL" type="hidden" value="OriginalURL=/Client/TACRC/Client/OpenActivity.aspx&amp;l=o&amp;p=62785411-a8a0-4459-8529-c085ef096f8a" maxlength="">
										</input>
										<input name="hdnNewSignOn" type="hidden" value="" maxlength="">
										</input>
										<input name="hdnFlexSignOn" type="hidden" value="" maxlength="">
										</input>
										<input name="hdnIsInvalidUserID" type="hidden" value="" maxlength="">
										</input>
										<input name="txtUserID" type="text" value="" maxlength="20">
										</input>
										<input name="txtPassword" type="password" value="" maxlength="32">
										</input>
										<input name="btnLogin" type="submit" value="Login" maxlength="">
										</input>
									</form>
								</forms>
							</result>
						</httpstep>
						<httpstep name="SubmitTestLogin" id="0933309973321994">
							<script protocol="http" method="post" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="frmsignin">
								<url><![CDATA[<=this.getvariable(urlqp)><=prevhttpstep.extractforminputvalue(frmsignin, hdnOriginalURL)>]]></url>
								<parameter type="hidden" name="hdnFormAction" value="submit" maxlength="">
								</parameter>
								<parameter type="text" name="txtUserID" value="&lt;=this.getprofilekeyvalue(username)&gt;" maxlength="20">
								</parameter>
								<parameter type="password" name="txtPassword" value="&lt;=this.getprofilekeyvalue(password)&gt;" maxlength="32">
								</parameter>
								<parameter type="submit" name="btnLogin" value="Login" maxlength="">
								</parameter>
							</script>
							<result errormessage="" onerror="QuoteProposalError">
								<verify>
									<condition name="SignInFailure" expression="{&lt;=SubmitTestLogin.isformfieldpresent(frmsignin, txtUserID, input)&gt; EQUAL true}" appliesto="">
										<form name="frmsignin" id="1032999234">
											<input name="txtUserID" value="" id="412898934">
											</input>
										</form>
									</condition>
									<condition name="SignInSucess" expression="{&lt;=SubmitTestLogin.isformfieldpresent(frmInput, __ContextGUID, input)&gt; EQUAL true}" appliesto="">
										<form name="frmInput">
											<input name="__ContextGUID" value="">
											</input>
										</form>
									</condition>
								</verify>
								<forms>
									<form name="frmInput">
										<input name="__ContextGUID" type="hidden" value="bb2e9f44-8b14-4ded-b9e7-a504140c3fa1" maxlength="">
										</input>
										<input name="__ModeID" type="hidden" value="2" maxlength="">
										</input>
										<input name="__FormIndexing" type="hidden" value="1" maxlength="">
										</input>
										<input name="__FieldList" type="hidden" value="Policy.CompanyOverrideYN!999|Policy.RatingState!8|Policy.Product!999|Policy.MarketTier!999|Policy.MarketTierTranslation!999|Policy.AgentNumber!1|Policy.ProducerName!1|Policy.PaperApplication.ApprovedYN!999|Policy.QuoteDate!2|Policy.EffectiveDate!2|Policy.OriginalQuoteDate!1|Policy.Client.AgentCustomerID!1|Policy.DescriptiveName!1|Policy.Client.Person.FirstName!1|Policy.Client.Person.MiddleName!1|Policy.Client.Person.LastName!1|Policy.Client.Person.SocialSecurityNumber!10|Policy.Client.HomePhoneNumber!6|Policy.Client.MailingLocation.AddressLine1!1|Policy.Client.MailingLocation.AddressLine2!1|Policy.Client.MailingLocation.City!1|Policy.Client.MailingLocation.State!8|Policy.Client.MailingLocation.ZipCode!1|Policy.Client.MailingLocation.OverrideGISYN!999|Policy.Client.MailingLocation.TaxCode!999|Policy.Client.MailingLocation.CountyTaxCode!999|Policy.AutoData.VehicleGaragingAddressYN!14|Policy.AutoData.AutoBusinessType!8|Policy.AutoData.AnyIncidentsOnPolicyYN!14|Policy.AdditionalInterestsYN!14|Policy.AutoData.MultipleCarDiscYN!5|Policy.AutoData.NamedNonOwnerYN!5|Policy.AutoData.MultipleOwnersYN!999|Policy.AutoData.AllOwnersSameHouseholdYN!999|Policy.AutoData.VerifiableYN!14|Policy.AutoData.LongevityCrDate!2|Policy.AutoData.AccidentFreeDate!2|Policy.OfferCode!1|Policy.Transaction.StateLaunchList!999|Policy.OriginalEffectiveDate!999|Policy.AutoData.SNAP3StateYN!15|Policy.AutoData.rPolicyAdvanceQuotingDays!999|Policy.AutoData.AdvanceQuotingDaysScorecard!999|Policy.AutoData.AdvanceQuotingDiscYNScorecard!999|Policy.AutoData.rPolicyHomeownersDiscYN!15|Policy.AutoData.rPolicyNumberChildren!15|Policy.AutoData.rPolicyNumberMarried!15|Policy.AutoData.SNAP3MultipleVersionStateYN!15|Policy.RewriteCustomerSinceDate!15" maxlength="">
										</input>
										<input name="PolicyVersion" type="hidden" value="1" maxlength="">
										</input>
										<input name="__ActivityType" type="hidden" value="NewBusiness" maxlength="">
										</input>
										<input name="__ActivityTypeID" type="hidden" value="2" maxlength="">
										</input>
										<input name="__VIEWSTATE" type="hidden" value="/wEPDwUKMTkwMjUxMjYxMWQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgUFBEJhY2sFBkNsaWVudAUESW5mbwUEU2F2ZQUIQ29udGludWVdnO0ZNSmSUqTTovcDs6EymcHncQ==" maxlength="">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumber" type="hidden" value="123-45-6789" maxlength="">
										</input>
										<input name="PolicyClientHomePhoneNumber" type="hidden" value="(214) 555-1212" maxlength="">
										</input>
										<input name="" type="submit" value="" maxlength="">
										</input>
										<input name="PolicyAgentNumber" type="text" value="377307" maxlength="7">
										</input>
										<input name="PolicyProducerName" type="text" value="" maxlength="20">
										</input>
										<input name="PolicyQuoteDate" type="text" value="09/18/2008" maxlength="10">
										</input>
										<input name="PolicyEffectiveDate" type="text" value="09/25/2008" maxlength="10">
										</input>
										<input name="PolicyOriginalQuoteDate" type="text" value="9/18/2008" maxlength="10">
										</input>
										<input name="PolicyClientAgentCustomerID" type="text" value="377307" maxlength="30">
										</input>
										<input name="PolicyDescriptiveName" type="text" value="" maxlength="30">
										</input>
										<input name="PolicyClientPersonFirstName" type="text" value="Nancy" maxlength="16">
										</input>
										<input name="PolicyClientPersonMiddleName" type="text" value="" maxlength="11">
										</input>
										<input name="PolicyClientPersonLastName" type="text" value="Kyacommon" maxlength="20">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberFirstThree" type="text" value="123" maxlength="3">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberMiddleTwo" type="text" value="45" maxlength="2">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberLastFour" type="text" value="6789" maxlength="4">
										</input>
										<input name="PolicyClientHomePhoneNumberAreaCode" type="text" value="214" maxlength="3">
										</input>
										<input name="PolicyClientHomePhoneNumberPrefix" type="text" value="555" maxlength="3">
										</input>
										<input name="PolicyClientHomePhoneNumberSuffix" type="text" value="1212" maxlength="4">
										</input>
										<input name="PolicyClientMailingLocationAddressLine1" type="text" value="123 Main St " maxlength="30">
										</input>
										<input name="PolicyClientMailingLocationAddressLine2" type="text" value="" maxlength="30">
										</input>
										<input name="PolicyClientMailingLocationCity" type="text" value="COPPERAS COVE" maxlength="16">
										</input>
										<input name="PolicyClientMailingLocationZipCode" type="text" value="76522" maxlength="10">
										</input>
										<input name="PolicyAutoDataVehicleGaragingAddressYN" type="radio" value="Y" maxlength="">
										</input>
										<input name="PolicyAutoDataVehicleGaragingAddressYN" type="radio" value="N" maxlength="">
										</input>
										<input name="PolicyAutoDataAnyIncidentsOnPolicyYN" type="radio" value="Y" maxlength="">
										</input>
										<input name="PolicyAutoDataAnyIncidentsOnPolicyYN" type="radio" value="N" maxlength="">
										</input>
										<input name="PolicyAdditionalInterestsYN" type="radio" value="Y" maxlength="">
										</input>
										<input name="PolicyAdditionalInterestsYN" type="radio" value="N" maxlength="">
										</input>
										<input name="PolicyAutoDataMultipleCarDiscYN" type="checkbox" value="Y" maxlength="">
										</input>
										<input name="PolicyAutoDataNamedNonOwnerYN" type="checkbox" value="Y" maxlength="">
										</input>
										<input name="PolicyAutoDataVerifiableYN" type="radio" value="Y" maxlength="">
										</input>
										<input name="PolicyAutoDataVerifiableYN" type="radio" value="N" maxlength="">
										</input>
										<input name="PolicyAutoDataLongevityCrDate" type="text" value="" maxlength="10">
										</input>
										<input name="PolicyAutoDataAccidentFreeDate" type="text" value="" maxlength="10">
										</input>
										<input name="PolicyOfferCode" type="text" value="" maxlength="10">
										</input>
										<input name="Back" type="image" value="" maxlength="">
										</input>
										<input name="Client" type="image" value="" maxlength="">
										</input>
										<input name="Info" type="image" value="" maxlength="">
										</input>
										<select name="PolicyRatingState" value="42">
											<option name="Alabama" value="1">
											</option>
											<option name="Alaska" value="54">
											</option>
											<option name="Arizona" value="2">
											</option>
											<option name="Arkansas" value="3">
											</option>
											<option name="California" value="4">
											</option>
											<option name="Colorado" value="5">
											</option>
											<option name="Connecticut" value="6">
											</option>
											<option name="Florida" value="9">
											</option>
											<option name="Georgia" value="10">
											</option>
											<option name="Idaho" value="11">
											</option>
											<option name="Illinois" value="12">
											</option>
											<option name="Indiana" value="13">
											</option>
											<option name="Iowa" value="14">
											</option>
											<option name="Kansas" value="15">
											</option>
											<option name="Kentucky" value="16">
											</option>
											<option name="Louisiana" value="17">
											</option>
											<option name="Maryland" value="19">
											</option>
											<option name="Michigan" value="21">
											</option>
											<option name="Minnesota" value="22">
											</option>
											<option name="Mississippi" value="23">
											</option>
											<option name="Missouri" value="24">
											</option>
											<option name="Montana" value="25">
											</option>
											<option name="Nebraska" value="26">
											</option>
											<option name="Nevada" value="27">
											</option>
											<option name="New Hampshire" value="28">
											</option>
											<option name="New Mexico" value="30">
											</option>
											<option name="New York" value="31">
											</option>
											<option name="North Carolina" value="32">
											</option>
											<option name="North Dakota" value="33">
											</option>
											<option name="Ohio" value="34">
											</option>
											<option name="Oklahoma" value="35">
											</option>
											<option name="Oregon" value="36">
											</option>
											<option name="Pennsylvania" value="37">
											</option>
											<option name="South Carolina" value="39">
											</option>
											<option name="South Dakota" value="40">
											</option>
											<option name="Tennessee" value="41">
											</option>
											<option selected="yes" name="Texas" value="42">
											</option>
											<option name="Utah" value="43">
											</option>
											<option name="Vermont" value="44">
											</option>
											<option name="Virginia" value="45">
											</option>
											<option name="Washington" value="46">
											</option>
											<option name="West Virginia" value="47">
											</option>
											<option name="Wisconsin" value="48">
											</option>
											<option name="Wyoming" value="49">
											</option>
										</select>
										<select name="PolicyClientMailingLocationState" value="TX">
											<option name="Alabama" value="AL">
											</option>
											<option name="Alaska" value="AK">
											</option>
											<option name="Arizona" value="AZ">
											</option>
											<option name="Arkansas" value="AR">
											</option>
											<option name="California" value="CA">
											</option>
											<option name="Colorado" value="CO">
											</option>
											<option name="Connecticut" value="CT">
											</option>
											<option name="Delaware" value="DE">
											</option>
											<option name="District of Columbia" value="DC">
											</option>
											<option name="Florida" value="FL">
											</option>
											<option name="Georgia" value="GA">
											</option>
											<option name="Hawaii" value="HI">
											</option>
											<option name="Idaho" value="ID">
											</option>
											<option name="Illinois" value="IL">
											</option>
											<option name="Indiana" value="IN">
											</option>
											<option name="Iowa" value="IA">
											</option>
											<option name="Kansas" value="KS">
											</option>
											<option name="Kentucky" value="KY">
											</option>
											<option name="Louisiana" value="LA">
											</option>
											<option name="Maine" value="ME">
											</option>
											<option name="Maryland" value="MD">
											</option>
											<option name="Massachusetts" value="MA">
											</option>
											<option name="Michigan" value="MI">
											</option>
											<option name="Minnesota" value="MN">
											</option>
											<option name="Mississippi" value="MS">
											</option>
											<option name="Missouri" value="MO">
											</option>
											<option name="Montana" value="MT">
											</option>
											<option name="Nebraska" value="NE">
											</option>
											<option name="Nevada" value="NV">
											</option>
											<option name="New Hampshire" value="NH">
											</option>
											<option name="New Jersey" value="NJ">
											</option>
											<option name="New Mexico" value="NM">
											</option>
											<option name="New York" value="NY">
											</option>
											<option name="North Carolina" value="NC">
											</option>
											<option name="North Dakota" value="ND">
											</option>
											<option name="Ohio" value="OH">
											</option>
											<option name="Oklahoma" value="OK">
											</option>
											<option name="Oregon" value="OR">
											</option>
											<option name="Pennsylvania" value="PA">
											</option>
											<option name="Rhode Island" value="RI">
											</option>
											<option name="South Carolina" value="SC">
											</option>
											<option name="South Dakota" value="SD">
											</option>
											<option name="Tennessee" value="TN">
											</option>
											<option selected="yes" name="Texas" value="TX">
											</option>
											<option name="Utah" value="UT">
											</option>
											<option name="Vermont" value="VT">
											</option>
											<option name="Virginia" value="VA">
											</option>
											<option name="Washington" value="WA">
											</option>
											<option name="West Virginia" value="WV">
											</option>
											<option name="Wisconsin" value="WI">
											</option>
											<option name="Wyoming" value="WY">
											</option>
											<option name="Alberta" value="AB">
											</option>
											<option name="British Columbia" value="BC">
											</option>
											<option name="Manitoba" value="MB">
											</option>
											<option name="New Brunswick" value="NB">
											</option>
											<option name="Newfoundland" value="NF">
											</option>
											<option name="Northwest Territories" value="NW">
											</option>
											<option name="Nova Scotia" value="NS">
											</option>
											<option name="Ontario" value="ON">
											</option>
											<option name="Prince Edward Island" value="PE">
											</option>
											<option name="Quebec" value="PQ">
											</option>
											<option name="Saskatchewan" value="SK">
											</option>
											<option name="Yukon" value="YK">
											</option>
											<option name="Air Atlantic" value="AA">
											</option>
											<option name="Air Europe" value="AE">
											</option>
											<option name="Air Pacific" value="AP">
											</option>
											<option name="American Samoa" value="AS">
											</option>
											<option name="Federated States of Micronesia" value="FM">
											</option>
											<option name="Guam" value="GU">
											</option>
											<option name="Marshall Islands" value="MH">
											</option>
											<option name="Northern Mariana Islands" value="MP">
											</option>
											<option name="Palau" value="PW">
											</option>
											<option name="Puerto Rico" value="PR">
											</option>
											<option name="Virgin Islands" value="VI">
											</option>
										</select>
										<select name="PolicyAutoDataAutoBusinessType" value="N">
											<option selected="yes" name="New Auto Customer to Safeco (Coverage has not been provided by a Safeco Company)" value="N">
											</option>
											<option name="Rewrite of Policy Lapsed &gt; 60 Days" value="L">
											</option>
											<option name="Fifth Vehicle - (4 vehicles on existing policy only)" value="F">
											</option>
											<option name="Move To Separate Household - Named Insured/Spouse" value="D">
											</option>
											<option name="Move To Separate Household - Any other household member" value="Y">
											</option>
											<option name="Move to New State - Existing Safeco auto policy" value="S">
											</option>
											<option name="Move Within the State - Existing Safeco auto policy" value="M">
											</option>
											<option name="Other Rewrite or Additional Policy for Safeco Customer" value="I">
											</option>
										</select>
									</form>
								</forms>
							</result>
						</httpstep>
						<functionstep name="SetanonymousStep2" id="1238604360" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(anonymousstep,SubmitTestLogin)>]]></functionstep>
					</condition>
					<condition name="AgentURL" expression="{&lt;=this.getprofilekeyvalue(environment)&gt; NOTEQUAL UAT}" appliesto="">
						<httpstep name="GetAgentURL" id="2083393944">
							<script protocol="http" method="get" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="" id="1670907762">
								<url id="1336463470"><![CDATA[<=this.getvariable(urlqp)>OriginalURL=/client/OpenActivity.aspx&l=o&amp;p=<=this.splitindexat(<=this.getvariable(quickaccessurl)>, p\=, 1)>]]></url>
							</script>
							<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/loadmainpageerror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="QuoteProposalError" id="2092884069">
								<verify id="530411346">
									<form name="frmsignin" id="1662330200">
										<input name="hdnFormAction" value="" id="1229290789">
										</input>
									</form>
								</verify>
								<forms id="45151618">
									<form name="frmsignin" id="1833156507">
										<input name="hdnFormAction" type="hidden" value="" maxlength="" id="1500893963">
										</input>
										<input name="hdnXMLString" type="hidden" value="" maxlength="" id="1260711145">
										</input>
										<input name="hdnFC" type="hidden" value="0" maxlength="" id="485781054">
										</input>
										<input name="hdnOriginalURL" type="hidden" value="OriginalURL=/Client/TACRC/Client/OpenActivity.aspx&amp;l=o&amp;p=62785411-a8a0-4459-8529-c085ef096f8a" maxlength="" id="2120148991">
										</input>
										<input name="hdnNewSignOn" type="hidden" value="" maxlength="" id="1725235245">
										</input>
										<input name="hdnFlexSignOn" type="hidden" value="" maxlength="" id="1619947444">
										</input>
										<input name="hdnIsInvalidUserID" type="hidden" value="" maxlength="" id="423263342">
										</input>
										<input name="txtUserID" type="text" value="" maxlength="20" id="2117385382">
										</input>
										<input name="txtPassword" type="password" value="" maxlength="32" id="1961836182">
										</input>
										<input name="btnLogin" type="submit" value="Login" maxlength="" id="1370435042">
										</input>
									</form>
								</forms>
							</result>
						</httpstep>
						<httpstep name="SubmitAgentLogin" id="618398423">
							<script protocol="http" method="post" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="frmsignin" id="1169153378">
								<url id="635158325"><![CDATA[<=this.getvariable(urlqp)>OriginalURL=/client/OpenActivity.aspx&l=o&p=<=this.splitindexat(<=this.getvariable(quickaccessurl)>, p\=, 1)>]]></url>
								<parameter type="hidden" name="hdnFormAction" value="submit" maxlength="" id="878010294">
								</parameter>
								<parameter type="text" name="txtUserID" value="&lt;=this.getprofilekeyvalue(username)&gt;" maxlength="20" id="2004257867">
								</parameter>
								<parameter type="password" name="txtPassword" value="&lt;=this.getprofilekeyvalue(password)&gt;" maxlength="32" id="1239253736">
								</parameter>
								<parameter type="submit" name="btnLogin" value="Login" maxlength="" id="65949537">
								</parameter>
							</script>
							<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="QuoteProposalError" id="1106234926">
								<verify id="1246654600">
									<condition name="SignInFailure" expression="{&lt;=SubmitAgentLogin.isformfieldpresent(frmsignin, txtUserID, input)&gt; EQUAL true}" appliesto="" id="1707726009">
										<form name="frmsignin" id="761727708">
											<input name="txtUserID" value="" id="1455038444">
											</input>
										</form>
									</condition>
									<condition name="SignInSucess" expression="{&lt;=SubmitAgentLogin.isformfieldpresent(frmInput, __ContextGUID, input)&gt; EQUAL true}" appliesto="" id="1413085652">
										<form name="frmInput" id="778570918">
											<input name="__ContextGUID" value="" id="607103898">
											</input>
										</form>
									</condition>
									<condition name="Super Agent Screen" expression="{&lt;=SubmitAgentLogin.isformfieldpresent(frmidmapping, hdnFormAction, input)&gt; EQUAL true}" appliesto="" id="21654339">
										<form name="frmidmapping" id="496757034">
											<input name="hdnFormAction" value="" id="1736391233">
											</input>
										</form>
									</condition>
								</verify>
								<forms id="267567579">
									<form name="frmInput" id="738916395">
										<input name="__ContextGUID" type="hidden" value="bb2e9f44-8b14-4ded-b9e7-a504140c3fa1" maxlength="" id="1666591525">
										</input>
										<input name="__ModeID" type="hidden" value="2" maxlength="" id="677766926">
										</input>
										<input name="__FormIndexing" type="hidden" value="1" maxlength="" id="1349589221">
										</input>
										<input name="__FieldList" type="hidden" value="Policy.CompanyOverrideYN!999|Policy.RatingState!8|Policy.Product!999|Policy.MarketTier!999|Policy.MarketTierTranslation!999|Policy.AgentNumber!1|Policy.ProducerName!1|Policy.PaperApplication.ApprovedYN!999|Policy.QuoteDate!2|Policy.EffectiveDate!2|Policy.OriginalQuoteDate!1|Policy.Client.AgentCustomerID!1|Policy.DescriptiveName!1|Policy.Client.Person.FirstName!1|Policy.Client.Person.MiddleName!1|Policy.Client.Person.LastName!1|Policy.Client.Person.SocialSecurityNumber!10|Policy.Client.HomePhoneNumber!6|Policy.Client.MailingLocation.AddressLine1!1|Policy.Client.MailingLocation.AddressLine2!1|Policy.Client.MailingLocation.City!1|Policy.Client.MailingLocation.State!8|Policy.Client.MailingLocation.ZipCode!1|Policy.Client.MailingLocation.OverrideGISYN!999|Policy.Client.MailingLocation.TaxCode!999|Policy.Client.MailingLocation.CountyTaxCode!999|Policy.AutoData.VehicleGaragingAddressYN!14|Policy.AutoData.AutoBusinessType!8|Policy.AutoData.AnyIncidentsOnPolicyYN!14|Policy.AdditionalInterestsYN!14|Policy.AutoData.MultipleCarDiscYN!5|Policy.AutoData.NamedNonOwnerYN!5|Policy.AutoData.MultipleOwnersYN!999|Policy.AutoData.AllOwnersSameHouseholdYN!999|Policy.AutoData.VerifiableYN!14|Policy.AutoData.LongevityCrDate!2|Policy.AutoData.AccidentFreeDate!2|Policy.OfferCode!1|Policy.Transaction.StateLaunchList!999|Policy.OriginalEffectiveDate!999|Policy.AutoData.SNAP3StateYN!15|Policy.AutoData.rPolicyAdvanceQuotingDays!999|Policy.AutoData.AdvanceQuotingDaysScorecard!999|Policy.AutoData.AdvanceQuotingDiscYNScorecard!999|Policy.AutoData.rPolicyHomeownersDiscYN!15|Policy.AutoData.rPolicyNumberChildren!15|Policy.AutoData.rPolicyNumberMarried!15|Policy.AutoData.SNAP3MultipleVersionStateYN!15|Policy.RewriteCustomerSinceDate!15" maxlength="" id="470789756">
										</input>
										<input name="PolicyVersion" type="hidden" value="1" maxlength="" id="1468938209">
										</input>
										<input name="__ActivityType" type="hidden" value="NewBusiness" maxlength="" id="566605730">
										</input>
										<input name="__ActivityTypeID" type="hidden" value="2" maxlength="" id="855164390">
										</input>
										<input name="__VIEWSTATE" type="hidden" value="/wEPDwUKMTkwMjUxMjYxMWQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgUFBEJhY2sFBkNsaWVudAUESW5mbwUEU2F2ZQUIQ29udGludWVdnO0ZNSmSUqTTovcDs6EymcHncQ==" maxlength="" id="1325636565">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumber" type="hidden" value="123-45-6789" maxlength="" id="1555569066">
										</input>
										<input name="PolicyClientHomePhoneNumber" type="hidden" value="(214) 555-1212" maxlength="" id="233847124">
										</input>
										<input name="" type="submit" value="" maxlength="" id="1681967190">
										</input>
										<input name="PolicyAgentNumber" type="text" value="377307" maxlength="7" id="1236831647">
										</input>
										<input name="PolicyProducerName" type="text" value="" maxlength="20" id="1341987339">
										</input>
										<input name="PolicyQuoteDate" type="text" value="09/18/2008" maxlength="10" id="1432600995">
										</input>
										<input name="PolicyEffectiveDate" type="text" value="09/25/2008" maxlength="10" id="1712586204">
										</input>
										<input name="PolicyOriginalQuoteDate" type="text" value="9/18/2008" maxlength="10" id="305857853">
										</input>
										<input name="PolicyClientAgentCustomerID" type="text" value="377307" maxlength="30" id="62784521">
										</input>
										<input name="PolicyDescriptiveName" type="text" value="" maxlength="30" id="1184653181">
										</input>
										<input name="PolicyClientPersonFirstName" type="text" value="Nancy" maxlength="16" id="363611634">
										</input>
										<input name="PolicyClientPersonMiddleName" type="text" value="" maxlength="11" id="344171529">
										</input>
										<input name="PolicyClientPersonLastName" type="text" value="Kyacommon" maxlength="20" id="153793371">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberFirstThree" type="text" value="123" maxlength="3" id="1620292438">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberMiddleTwo" type="text" value="45" maxlength="2" id="719758985">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberLastFour" type="text" value="6789" maxlength="4" id="2063677407">
										</input>
										<input name="PolicyClientHomePhoneNumberAreaCode" type="text" value="214" maxlength="3" id="1070061165">
										</input>
										<input name="PolicyClientHomePhoneNumberPrefix" type="text" value="555" maxlength="3" id="1203011126">
										</input>
										<input name="PolicyClientHomePhoneNumberSuffix" type="text" value="1212" maxlength="4" id="2127011265">
										</input>
										<input name="PolicyClientMailingLocationAddressLine1" type="text" value="123 Main St " maxlength="30" id="771792791">
										</input>
										<input name="PolicyClientMailingLocationAddressLine2" type="text" value="" maxlength="30" id="492714947">
										</input>
										<input name="PolicyClientMailingLocationCity" type="text" value="COPPERAS COVE" maxlength="16" id="1584970822">
										</input>
										<input name="PolicyClientMailingLocationZipCode" type="text" value="76522" maxlength="10" id="890223023">
										</input>
										<input name="PolicyAutoDataVehicleGaragingAddressYN" type="radio" value="Y" maxlength="" id="2060826302">
										</input>
										<input name="PolicyAutoDataVehicleGaragingAddressYN" type="radio" value="N" maxlength="" id="568881426">
										</input>
										<input name="PolicyAutoDataAnyIncidentsOnPolicyYN" type="radio" value="Y" maxlength="" id="238209120">
										</input>
										<input name="PolicyAutoDataAnyIncidentsOnPolicyYN" type="radio" value="N" maxlength="" id="1657025683">
										</input>
										<input name="PolicyAdditionalInterestsYN" type="radio" value="Y" maxlength="" id="1370495193">
										</input>
										<input name="PolicyAdditionalInterestsYN" type="radio" value="N" maxlength="" id="384382146">
										</input>
										<input name="PolicyAutoDataMultipleCarDiscYN" type="checkbox" value="Y" maxlength="" id="102215846">
										</input>
										<input name="PolicyAutoDataNamedNonOwnerYN" type="checkbox" value="Y" maxlength="" id="755366512">
										</input>
										<input name="PolicyAutoDataVerifiableYN" type="radio" value="Y" maxlength="" id="1722310803">
										</input>
										<input name="PolicyAutoDataVerifiableYN" type="radio" value="N" maxlength="" id="452212792">
										</input>
										<input name="PolicyAutoDataLongevityCrDate" type="text" value="" maxlength="10" id="1602222131">
										</input>
										<input name="PolicyAutoDataAccidentFreeDate" type="text" value="" maxlength="10" id="1236857520">
										</input>
										<input name="PolicyOfferCode" type="text" value="" maxlength="10" id="1392449778">
										</input>
										<input name="Back" type="image" value="" maxlength="" id="1422329307">
										</input>
										<input name="Client" type="image" value="" maxlength="" id="570091921">
										</input>
										<input name="Info" type="image" value="" maxlength="" id="1003135488">
										</input>
										<select name="PolicyRatingState" value="42" id="1560743110">
											<option name="Alabama" value="1" id="417102774">
											</option>
											<option name="Alaska" value="54" id="1968059010">
											</option>
											<option name="Arizona" value="2" id="1420091483">
											</option>
											<option name="Arkansas" value="3" id="785001474">
											</option>
											<option name="California" value="4" id="231286572">
											</option>
											<option name="Colorado" value="5" id="2052521004">
											</option>
											<option name="Connecticut" value="6" id="246696293">
											</option>
											<option name="Florida" value="9" id="1848288109">
											</option>
											<option name="Georgia" value="10" id="537863194">
											</option>
											<option name="Idaho" value="11" id="1451816569">
											</option>
											<option name="Illinois" value="12" id="1139254811">
											</option>
											<option name="Indiana" value="13" id="660800762">
											</option>
											<option name="Iowa" value="14" id="1182553599">
											</option>
											<option name="Kansas" value="15" id="929534518">
											</option>
											<option name="Kentucky" value="16" id="622212044">
											</option>
											<option name="Louisiana" value="17" id="372356519">
											</option>
											<option name="Maryland" value="19" id="442904597">
											</option>
											<option name="Michigan" value="21" id="2067821103">
											</option>
											<option name="Minnesota" value="22" id="856390181">
											</option>
											<option name="Mississippi" value="23" id="1514091778">
											</option>
											<option name="Missouri" value="24" id="565537231">
											</option>
											<option name="Montana" value="25" id="1256517497">
											</option>
											<option name="Nebraska" value="26" id="2003874688">
											</option>
											<option name="Nevada" value="27" id="1401819410">
											</option>
											<option name="New Hampshire" value="28" id="1486291531">
											</option>
											<option name="New Mexico" value="30" id="1474032168">
											</option>
											<option name="New York" value="31" id="2000834426">
											</option>
											<option name="North Carolina" value="32" id="9306507">
											</option>
											<option name="North Dakota" value="33" id="2009349457">
											</option>
											<option name="Ohio" value="34" id="1586533745">
											</option>
											<option name="Oklahoma" value="35" id="695614117">
											</option>
											<option name="Oregon" value="36" id="439647808">
											</option>
											<option name="Pennsylvania" value="37" id="601227848">
											</option>
											<option name="South Carolina" value="39" id="1956223883">
											</option>
											<option name="South Dakota" value="40" id="377317833">
											</option>
											<option name="Tennessee" value="41" id="1768364995">
											</option>
											<option selected="yes" name="Texas" value="42" id="775329684">
											</option>
											<option name="Utah" value="43" id="858610539">
											</option>
											<option name="Vermont" value="44" id="1928642747">
											</option>
											<option name="Virginia" value="45" id="916185578">
											</option>
											<option name="Washington" value="46" id="1927481184">
											</option>
											<option name="West Virginia" value="47" id="1266255035">
											</option>
											<option name="Wisconsin" value="48" id="143190571">
											</option>
											<option name="Wyoming" value="49" id="836128303">
											</option>
										</select>
										<select name="PolicyClientMailingLocationState" value="TX" id="2132930383">
											<option name="Alabama" value="AL" id="427041516">
											</option>
											<option name="Alaska" value="AK" id="1356295516">
											</option>
											<option name="Arizona" value="AZ" id="235525440">
											</option>
											<option name="Arkansas" value="AR" id="1305023409">
											</option>
											<option name="California" value="CA" id="54707616">
											</option>
											<option name="Colorado" value="CO" id="1827618206">
											</option>
											<option name="Connecticut" value="CT" id="1573650755">
											</option>
											<option name="Delaware" value="DE" id="1672775839">
											</option>
											<option name="District of Columbia" value="DC" id="1291229534">
											</option>
											<option name="Florida" value="FL" id="1316203428">
											</option>
											<option name="Georgia" value="GA" id="687775857">
											</option>
											<option name="Hawaii" value="HI" id="1109939439">
											</option>
											<option name="Idaho" value="ID" id="1211899562">
											</option>
											<option name="Illinois" value="IL" id="619393737">
											</option>
											<option name="Indiana" value="IN" id="876792151">
											</option>
											<option name="Iowa" value="IA" id="1700313673">
											</option>
											<option name="Kansas" value="KS" id="967905187">
											</option>
											<option name="Kentucky" value="KY" id="1685585012">
											</option>
											<option name="Louisiana" value="LA" id="698260496">
											</option>
											<option name="Maine" value="ME" id="326209687">
											</option>
											<option name="Maryland" value="MD" id="1272930081">
											</option>
											<option name="Massachusetts" value="MA" id="989587043">
											</option>
											<option name="Michigan" value="MI" id="1835242432">
											</option>
											<option name="Minnesota" value="MN" id="527903925">
											</option>
											<option name="Mississippi" value="MS" id="1818782437">
											</option>
											<option name="Missouri" value="MO" id="1941840381">
											</option>
											<option name="Montana" value="MT" id="1619244177">
											</option>
											<option name="Nebraska" value="NE" id="141938383">
											</option>
											<option name="Nevada" value="NV" id="861910983">
											</option>
											<option name="New Hampshire" value="NH" id="1134292477">
											</option>
											<option name="New Jersey" value="NJ" id="141661069">
											</option>
											<option name="New Mexico" value="NM" id="1308908138">
											</option>
											<option name="New York" value="NY" id="1892903276">
											</option>
											<option name="North Carolina" value="NC" id="370969813">
											</option>
											<option name="North Dakota" value="ND" id="1647466825">
											</option>
											<option name="Ohio" value="OH" id="166594883">
											</option>
											<option name="Oklahoma" value="OK" id="837639796">
											</option>
											<option name="Oregon" value="OR" id="1919081763">
											</option>
											<option name="Pennsylvania" value="PA" id="136215310">
											</option>
											<option name="Rhode Island" value="RI" id="408908728">
											</option>
											<option name="South Carolina" value="SC" id="1538716076">
											</option>
											<option name="South Dakota" value="SD" id="149331391">
											</option>
											<option name="Tennessee" value="TN" id="449410202">
											</option>
											<option selected="yes" name="Texas" value="TX" id="540491181">
											</option>
											<option name="Utah" value="UT" id="165039003">
											</option>
											<option name="Vermont" value="VT" id="1733980582">
											</option>
											<option name="Virginia" value="VA" id="1637603289">
											</option>
											<option name="Washington" value="WA" id="594679973">
											</option>
											<option name="West Virginia" value="WV" id="287247159">
											</option>
											<option name="Wisconsin" value="WI" id="1765988811">
											</option>
											<option name="Wyoming" value="WY" id="836238479">
											</option>
											<option name="Alberta" value="AB" id="56469588">
											</option>
											<option name="British Columbia" value="BC" id="636633086">
											</option>
											<option name="Manitoba" value="MB" id="1515235642">
											</option>
											<option name="New Brunswick" value="NB" id="923023385">
											</option>
											<option name="Newfoundland" value="NF" id="1584938120">
											</option>
											<option name="Northwest Territories" value="NW" id="1668536731">
											</option>
											<option name="Nova Scotia" value="NS" id="1855105162">
											</option>
											<option name="Ontario" value="ON" id="1633724619">
											</option>
											<option name="Prince Edward Island" value="PE" id="260350882">
											</option>
											<option name="Quebec" value="PQ" id="208374029">
											</option>
											<option name="Saskatchewan" value="SK" id="1431712372">
											</option>
											<option name="Yukon" value="YK" id="810864856">
											</option>
											<option name="Air Atlantic" value="AA" id="156937057">
											</option>
											<option name="Air Europe" value="AE" id="1174542359">
											</option>
											<option name="Air Pacific" value="AP" id="1526351366">
											</option>
											<option name="American Samoa" value="AS" id="1364519810">
											</option>
											<option name="Federated States of Micronesia" value="FM" id="840929749">
											</option>
											<option name="Guam" value="GU" id="1119410559">
											</option>
											<option name="Marshall Islands" value="MH" id="710197268">
											</option>
											<option name="Northern Mariana Islands" value="MP" id="862673877">
											</option>
											<option name="Palau" value="PW" id="1196307071">
											</option>
											<option name="Puerto Rico" value="PR" id="1549369702">
											</option>
											<option name="Virgin Islands" value="VI" id="289351768">
											</option>
										</select>
										<select name="PolicyAutoDataAutoBusinessType" value="N" id="1622289022">
											<option selected="yes" name="New Auto Customer to Safeco (Coverage has not been provided by a Safeco Company)" value="N" id="1814025337">
											</option>
											<option name="Rewrite of Policy Lapsed &gt; 60 Days" value="L" id="1456087422">
											</option>
											<option name="Fifth Vehicle - (4 vehicles on existing policy only)" value="F" id="921720420">
											</option>
											<option name="Move To Separate Household - Named Insured/Spouse" value="D" id="1131679969">
											</option>
											<option name="Move To Separate Household - Any other household member" value="Y" id="1326592959">
											</option>
											<option name="Move to New State - Existing Safeco auto policy" value="S" id="1348864967">
											</option>
											<option name="Move Within the State - Existing Safeco auto policy" value="M" id="1508104062">
											</option>
											<option name="Other Rewrite or Additional Policy for Safeco Customer" value="I" id="1768743631">
											</option>
										</select>
									</form>
								</forms>
							</result>
						</httpstep>
						<functionstep name="SetanonymousStep" id="443055955" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(anonymousstep,SubmitAgentLogin)>]]></functionstep>
					</condition>
					<condition name="Super Agent Screen" expression="{&lt;=anonymous.isformfieldpresent(frmidmapping, hdnFormAction, input)&gt; EQUAL true}" appliesto="">
						<httpstep name="SubmitSuperAgent" id="171856102">
							<script protocol="http" method="post" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="frmsignin" id="78359698">
								<url id="633452855"><![CDATA[<=this.getlasturl()>]]></url>
								<parameter type="hidden" name="hdnFormAction" value="submit" maxlength="" id="330195454">
								</parameter>
								<parameter type="text" name="hdnMappedIDDenied" value="" maxlength="20" id="1568895825">
								</parameter>
								<parameter type="password" name="hdnIDToMap" value="&lt;=this.getvariable(agentid)&gt;" maxlength="32" id="436964538">
								</parameter>
							</script>
							<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="QuoteProposalError" id="5536480">
								<verify id="178512143">
									<condition name="SignInFailure" expression="{&lt;=SubmitSuperAgent.isformfieldpresent(frmsignin, txtUserID, input)&gt; EQUAL true}" appliesto="" id="413927719">
										<form name="frmsignin" id="2026260940">
											<input name="txtUserID" value="" id="481292013">
											</input>
										</form>
									</condition>
									<condition name="SignInSucess" expression="{&lt;=SubmitSuperAgent.isformfieldpresent(frmInput, __ContextGUID, input)&gt; EQUAL true}" appliesto="" id="1275419631">
										<form name="frmInput" id="918567732">
											<input name="__ContextGUID" value="" id="1986470512">
											</input>
										</form>
									</condition>
								</verify>
								<forms id="547729929">
									<form name="frmInput" id="1592286623">
										<input name="__ContextGUID" type="hidden" value="bb2e9f44-8b14-4ded-b9e7-a504140c3fa1" maxlength="" id="2087740980">
										</input>
										<input name="__ModeID" type="hidden" value="2" maxlength="" id="862185971">
										</input>
										<input name="__FormIndexing" type="hidden" value="1" maxlength="" id="1283287453">
										</input>
										<input name="__FieldList" type="hidden" value="Policy.CompanyOverrideYN!999|Policy.RatingState!8|Policy.Product!999|Policy.MarketTier!999|Policy.MarketTierTranslation!999|Policy.AgentNumber!1|Policy.ProducerName!1|Policy.PaperApplication.ApprovedYN!999|Policy.QuoteDate!2|Policy.EffectiveDate!2|Policy.OriginalQuoteDate!1|Policy.Client.AgentCustomerID!1|Policy.DescriptiveName!1|Policy.Client.Person.FirstName!1|Policy.Client.Person.MiddleName!1|Policy.Client.Person.LastName!1|Policy.Client.Person.SocialSecurityNumber!10|Policy.Client.HomePhoneNumber!6|Policy.Client.MailingLocation.AddressLine1!1|Policy.Client.MailingLocation.AddressLine2!1|Policy.Client.MailingLocation.City!1|Policy.Client.MailingLocation.State!8|Policy.Client.MailingLocation.ZipCode!1|Policy.Client.MailingLocation.OverrideGISYN!999|Policy.Client.MailingLocation.TaxCode!999|Policy.Client.MailingLocation.CountyTaxCode!999|Policy.AutoData.VehicleGaragingAddressYN!14|Policy.AutoData.AutoBusinessType!8|Policy.AutoData.AnyIncidentsOnPolicyYN!14|Policy.AdditionalInterestsYN!14|Policy.AutoData.MultipleCarDiscYN!5|Policy.AutoData.NamedNonOwnerYN!5|Policy.AutoData.MultipleOwnersYN!999|Policy.AutoData.AllOwnersSameHouseholdYN!999|Policy.AutoData.VerifiableYN!14|Policy.AutoData.LongevityCrDate!2|Policy.AutoData.AccidentFreeDate!2|Policy.OfferCode!1|Policy.Transaction.StateLaunchList!999|Policy.OriginalEffectiveDate!999|Policy.AutoData.SNAP3StateYN!15|Policy.AutoData.rPolicyAdvanceQuotingDays!999|Policy.AutoData.AdvanceQuotingDaysScorecard!999|Policy.AutoData.AdvanceQuotingDiscYNScorecard!999|Policy.AutoData.rPolicyHomeownersDiscYN!15|Policy.AutoData.rPolicyNumberChildren!15|Policy.AutoData.rPolicyNumberMarried!15|Policy.AutoData.SNAP3MultipleVersionStateYN!15|Policy.RewriteCustomerSinceDate!15" maxlength="" id="1872602397">
										</input>
										<input name="PolicyVersion" type="hidden" value="1" maxlength="" id="1959998871">
										</input>
										<input name="__ActivityType" type="hidden" value="NewBusiness" maxlength="" id="763650442">
										</input>
										<input name="__ActivityTypeID" type="hidden" value="2" maxlength="" id="142067880">
										</input>
										<input name="__VIEWSTATE" type="hidden" value="/wEPDwUKMTkwMjUxMjYxMWQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgUFBEJhY2sFBkNsaWVudAUESW5mbwUEU2F2ZQUIQ29udGludWVdnO0ZNSmSUqTTovcDs6EymcHncQ==" maxlength="" id="376570356">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumber" type="hidden" value="123-45-6789" maxlength="" id="1773141268">
										</input>
										<input name="PolicyClientHomePhoneNumber" type="hidden" value="(214) 555-1212" maxlength="" id="981150087">
										</input>
										<input name="" type="submit" value="" maxlength="" id="1530706659">
										</input>
										<input name="PolicyAgentNumber" type="text" value="377307" maxlength="7" id="961769269">
										</input>
										<input name="PolicyProducerName" type="text" value="" maxlength="20" id="1984154505">
										</input>
										<input name="PolicyQuoteDate" type="text" value="09/18/2008" maxlength="10" id="204179250">
										</input>
										<input name="PolicyEffectiveDate" type="text" value="09/25/2008" maxlength="10" id="778601438">
										</input>
										<input name="PolicyOriginalQuoteDate" type="text" value="9/18/2008" maxlength="10" id="811947695">
										</input>
										<input name="PolicyClientAgentCustomerID" type="text" value="377307" maxlength="30" id="620600126">
										</input>
										<input name="PolicyDescriptiveName" type="text" value="" maxlength="30" id="1599191476">
										</input>
										<input name="PolicyClientPersonFirstName" type="text" value="Nancy" maxlength="16" id="499407380">
										</input>
										<input name="PolicyClientPersonMiddleName" type="text" value="" maxlength="11" id="1805084198">
										</input>
										<input name="PolicyClientPersonLastName" type="text" value="Kyacommon" maxlength="20" id="1218406411">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberFirstThree" type="text" value="123" maxlength="3" id="813779266">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberMiddleTwo" type="text" value="45" maxlength="2" id="454491483">
										</input>
										<input name="PolicyClientPersonSocialSecurityNumberLastFour" type="text" value="6789" maxlength="4" id="1502687939">
										</input>
										<input name="PolicyClientHomePhoneNumberAreaCode" type="text" value="214" maxlength="3" id="988824627">
										</input>
										<input name="PolicyClientHomePhoneNumberPrefix" type="text" value="555" maxlength="3" id="79126108">
										</input>
										<input name="PolicyClientHomePhoneNumberSuffix" type="text" value="1212" maxlength="4" id="1790548619">
										</input>
										<input name="PolicyClientMailingLocationAddressLine1" type="text" value="123 Main St " maxlength="30" id="2073661629">
										</input>
										<input name="PolicyClientMailingLocationAddressLine2" type="text" value="" maxlength="30" id="2129944500">
										</input>
										<input name="PolicyClientMailingLocationCity" type="text" value="COPPERAS COVE" maxlength="16" id="577633613">
										</input>
										<input name="PolicyClientMailingLocationZipCode" type="text" value="76522" maxlength="10" id="733153670">
										</input>
										<input name="PolicyAutoDataVehicleGaragingAddressYN" type="radio" value="Y" maxlength="" id="997225576">
										</input>
										<input name="PolicyAutoDataVehicleGaragingAddressYN" type="radio" value="N" maxlength="" id="1549140328">
										</input>
										<input name="PolicyAutoDataAnyIncidentsOnPolicyYN" type="radio" value="Y" maxlength="" id="544830945">
										</input>
										<input name="PolicyAutoDataAnyIncidentsOnPolicyYN" type="radio" value="N" maxlength="" id="1936596038">
										</input>
										<input name="PolicyAdditionalInterestsYN" type="radio" value="Y" maxlength="" id="119322213">
										</input>
										<input name="PolicyAdditionalInterestsYN" type="radio" value="N" maxlength="" id="580323311">
										</input>
										<input name="PolicyAutoDataMultipleCarDiscYN" type="checkbox" value="Y" maxlength="" id="808778660">
										</input>
										<input name="PolicyAutoDataNamedNonOwnerYN" type="checkbox" value="Y" maxlength="" id="577658891">
										</input>
										<input name="PolicyAutoDataVerifiableYN" type="radio" value="Y" maxlength="" id="20777748">
										</input>
										<input name="PolicyAutoDataVerifiableYN" type="radio" value="N" maxlength="" id="2142904582">
										</input>
										<input name="PolicyAutoDataLongevityCrDate" type="text" value="" maxlength="10" id="226499244">
										</input>
										<input name="PolicyAutoDataAccidentFreeDate" type="text" value="" maxlength="10" id="1761368935">
										</input>
										<input name="PolicyOfferCode" type="text" value="" maxlength="10" id="801196865">
										</input>
										<input name="Back" type="image" value="" maxlength="" id="936036716">
										</input>
										<input name="Client" type="image" value="" maxlength="" id="1346162986">
										</input>
										<input name="Info" type="image" value="" maxlength="" id="634083353">
										</input>
										<select name="PolicyRatingState" value="42" id="1210191211">
											<option name="Alabama" value="1" id="570503680">
											</option>
											<option name="Alaska" value="54" id="427085064">
											</option>
											<option name="Arizona" value="2" id="475624372">
											</option>
											<option name="Arkansas" value="3" id="738224018">
											</option>
											<option name="California" value="4" id="2074460397">
											</option>
											<option name="Colorado" value="5" id="6183060">
											</option>
											<option name="Connecticut" value="6" id="563753144">
											</option>
											<option name="Florida" value="9" id="1898406435">
											</option>
											<option name="Georgia" value="10" id="1075013985">
											</option>
											<option name="Idaho" value="11" id="1284285814">
											</option>
											<option name="Illinois" value="12" id="884674388">
											</option>
											<option name="Indiana" value="13" id="539061424">
											</option>
											<option name="Iowa" value="14" id="95992477">
											</option>
											<option name="Kansas" value="15" id="2003854757">
											</option>
											<option name="Kentucky" value="16" id="1721953594">
											</option>
											<option name="Louisiana" value="17" id="1372634501">
											</option>
											<option name="Maryland" value="19" id="1796558686">
											</option>
											<option name="Michigan" value="21" id="1532814250">
											</option>
											<option name="Minnesota" value="22" id="146160231">
											</option>
											<option name="Mississippi" value="23" id="649606129">
											</option>
											<option name="Missouri" value="24" id="1270643367">
											</option>
											<option name="Montana" value="25" id="175881323">
											</option>
											<option name="Nebraska" value="26" id="2089074264">
											</option>
											<option name="Nevada" value="27" id="812484070">
											</option>
											<option name="New Hampshire" value="28" id="2131023839">
											</option>
											<option name="New Mexico" value="30" id="1080907385">
											</option>
											<option name="New York" value="31" id="960571415">
											</option>
											<option name="North Carolina" value="32" id="1194942864">
											</option>
											<option name="North Dakota" value="33" id="280477231">
											</option>
											<option name="Ohio" value="34" id="458012550">
											</option>
											<option name="Oklahoma" value="35" id="1463066261">
											</option>
											<option name="Oregon" value="36" id="1506036142">
											</option>
											<option name="Pennsylvania" value="37" id="1844265406">
											</option>
											<option name="South Carolina" value="39" id="61349245">
											</option>
											<option name="South Dakota" value="40" id="302488096">
											</option>
											<option name="Tennessee" value="41" id="2108221671">
											</option>
											<option selected="yes" name="Texas" value="42" id="773563883">
											</option>
											<option name="Utah" value="43" id="219142943">
											</option>
											<option name="Vermont" value="44" id="1708821867">
											</option>
											<option name="Virginia" value="45" id="1507463125">
											</option>
											<option name="Washington" value="46" id="251308245">
											</option>
											<option name="West Virginia" value="47" id="1180671931">
											</option>
											<option name="Wisconsin" value="48" id="223259741">
											</option>
											<option name="Wyoming" value="49" id="1734919422">
											</option>
										</select>
										<select name="PolicyClientMailingLocationState" value="TX" id="1575078527">
											<option name="Alabama" value="AL" id="909287831">
											</option>
											<option name="Alaska" value="AK" id="1984919195">
											</option>
											<option name="Arizona" value="AZ" id="1867626326">
											</option>
											<option name="Arkansas" value="AR" id="822926111">
											</option>
											<option name="California" value="CA" id="446022657">
											</option>
											<option name="Colorado" value="CO" id="464290889">
											</option>
											<option name="Connecticut" value="CT" id="990978664">
											</option>
											<option name="Delaware" value="DE" id="750882033">
											</option>
											<option name="District of Columbia" value="DC" id="580050400">
											</option>
											<option name="Florida" value="FL" id="883552038">
											</option>
											<option name="Georgia" value="GA" id="2146057529">
											</option>
											<option name="Hawaii" value="HI" id="1553034199">
											</option>
											<option name="Idaho" value="ID" id="1270717682">
											</option>
											<option name="Illinois" value="IL" id="1345328678">
											</option>
											<option name="Indiana" value="IN" id="212765704">
											</option>
											<option name="Iowa" value="IA" id="893728772">
											</option>
											<option name="Kansas" value="KS" id="1419215693">
											</option>
											<option name="Kentucky" value="KY" id="1676044469">
											</option>
											<option name="Louisiana" value="LA" id="1578088940">
											</option>
											<option name="Maine" value="ME" id="1516294472">
											</option>
											<option name="Maryland" value="MD" id="1043264969">
											</option>
											<option name="Massachusetts" value="MA" id="841521348">
											</option>
											<option name="Michigan" value="MI" id="1233993744">
											</option>
											<option name="Minnesota" value="MN" id="400435603">
											</option>
											<option name="Mississippi" value="MS" id="1521666095">
											</option>
											<option name="Missouri" value="MO" id="2044748242">
											</option>
											<option name="Montana" value="MT" id="242472863">
											</option>
											<option name="Nebraska" value="NE" id="958246719">
											</option>
											<option name="Nevada" value="NV" id="152887458">
											</option>
											<option name="New Hampshire" value="NH" id="2107681868">
											</option>
											<option name="New Jersey" value="NJ" id="605988941">
											</option>
											<option name="New Mexico" value="NM" id="590114001">
											</option>
											<option name="New York" value="NY" id="2073363019">
											</option>
											<option name="North Carolina" value="NC" id="1768336435">
											</option>
											<option name="North Dakota" value="ND" id="807706730">
											</option>
											<option name="Ohio" value="OH" id="1729556654">
											</option>
											<option name="Oklahoma" value="OK" id="1298586384">
											</option>
											<option name="Oregon" value="OR" id="308692992">
											</option>
											<option name="Pennsylvania" value="PA" id="1625890701">
											</option>
											<option name="Rhode Island" value="RI" id="29511745">
											</option>
											<option name="South Carolina" value="SC" id="1943046387">
											</option>
											<option name="South Dakota" value="SD" id="168847951">
											</option>
											<option name="Tennessee" value="TN" id="1639474754">
											</option>
											<option selected="yes" name="Texas" value="TX" id="560090402">
											</option>
											<option name="Utah" value="UT" id="1292924155">
											</option>
											<option name="Vermont" value="VT" id="1486466863">
											</option>
											<option name="Virginia" value="VA" id="1707697440">
											</option>
											<option name="Washington" value="WA" id="892670547">
											</option>
											<option name="West Virginia" value="WV" id="1779679772">
											</option>
											<option name="Wisconsin" value="WI" id="1651730516">
											</option>
											<option name="Wyoming" value="WY" id="857220076">
											</option>
											<option name="Alberta" value="AB" id="1073533408">
											</option>
											<option name="British Columbia" value="BC" id="2055757823">
											</option>
											<option name="Manitoba" value="MB" id="858900393">
											</option>
											<option name="New Brunswick" value="NB" id="1124017677">
											</option>
											<option name="Newfoundland" value="NF" id="67766483">
											</option>
											<option name="Northwest Territories" value="NW" id="750925451">
											</option>
											<option name="Nova Scotia" value="NS" id="1467190723">
											</option>
											<option name="Ontario" value="ON" id="1448743663">
											</option>
											<option name="Prince Edward Island" value="PE" id="548758062">
											</option>
											<option name="Quebec" value="PQ" id="221818026">
											</option>
											<option name="Saskatchewan" value="SK" id="32731945">
											</option>
											<option name="Yukon" value="YK" id="597994575">
											</option>
											<option name="Air Atlantic" value="AA" id="619852179">
											</option>
											<option name="Air Europe" value="AE" id="277563097">
											</option>
											<option name="Air Pacific" value="AP" id="1555943528">
											</option>
											<option name="American Samoa" value="AS" id="1627154827">
											</option>
											<option name="Federated States of Micronesia" value="FM" id="1649864894">
											</option>
											<option name="Guam" value="GU" id="537621948">
											</option>
											<option name="Marshall Islands" value="MH" id="630692697">
											</option>
											<option name="Northern Mariana Islands" value="MP" id="1742626035">
											</option>
											<option name="Palau" value="PW" id="1110522701">
											</option>
											<option name="Puerto Rico" value="PR" id="50153768">
											</option>
											<option name="Virgin Islands" value="VI" id="1548577195">
											</option>
										</select>
										<select name="PolicyAutoDataAutoBusinessType" value="N" id="1348928989">
											<option selected="yes" name="New Auto Customer to Safeco (Coverage has not been provided by a Safeco Company)" value="N" id="1649687432">
											</option>
											<option name="Rewrite of Policy Lapsed &gt; 60 Days" value="L" id="1974868265">
											</option>
											<option name="Fifth Vehicle - (4 vehicles on existing policy only)" value="F" id="1195239802">
											</option>
											<option name="Move To Separate Household - Named Insured/Spouse" value="D" id="1495527070">
											</option>
											<option name="Move To Separate Household - Any other household member" value="Y" id="1653245811">
											</option>
											<option name="Move to New State - Existing Safeco auto policy" value="S" id="1056935008">
											</option>
											<option name="Move Within the State - Existing Safeco auto policy" value="M" id="2106759494">
											</option>
											<option name="Other Rewrite or Additional Policy for Safeco Customer" value="I" id="1814340641">
											</option>
										</select>
									</form>
								</forms>
							</result>
						</httpstep>
						<functionstep name="SetanonymousStep1" id="1724420326" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(anonymousstep,SubmitSuperAgent)>]]></functionstep>
					</condition>
					<condition name="ContextGUID" expression="{&lt;=anonymous.isformfieldpresent(frmInput, __ContextGUID, input)&gt; EQUAL true}" appliesto="">
						<functionstep name="ExtractContextId" id="1054843974" prompt="no" errormessage="Error extracting context ID.Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(contextid, <=anonymous.extractforminputvalue(frmInput, __ContextGUID)>)>]]></functionstep>
					</condition>
					<condition name="Original Quote date" expression="{&lt;=anonymous.isformfieldpresent(frmInput, __FieldList, input)&gt; EQUAL true}" appliesto="">
						<functionstep name="SetOriginalQuoteDate" id="1208223655" prompt="no" errormessage="Error Setting quote date. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(focus,<=anonymous.extractforminputvalue(frmInput, __FieldList)>)>

<=this.setvariable(focus, <=java.callstringmethod(replaceAll, <=this.getvariable(focus)>, Policy.OriginalQuoteDate!20, Policy.OriginalQuoteDate!999)>)>
)>
]]></functionstep>
					</condition>
					<httpstep name="SubmitGoToSummary" id="449894648089178">
						<script protocol="http" method="post" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="frmInput">
							<url><![CDATA[<=this.getvariable(urlqp1)>/PolicyInfo.aspx?ModeID=2&context=<=this.getvariable(contextid)>]]></url>
							<parameter type="" name="__ContextGUID" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __ContextGUID)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="__ModeID" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __ModeID)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="__FormIndexing" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __FormIndexing)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="__FieldList" value="&lt;=this.getvariable(focus)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyVersion" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyVersion)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="__ActivityType" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __ActivityType)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="__ActivityTypeID" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __ActivityTypeID)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="__VIEWSTATE" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __VIEWSTATE)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyRatingState" value="&lt;=prevhttpstep.extractformselectvalue(frmInput, PolicyRatingState)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyProduct" value="&lt;=prevhttpstep.extractformselectvalue(frmInput, PolicyProduct)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyAgentNumber" value="&lt;=this.getvariable(agentid)&gt;" maxlength="">
							</parameter>
							<condition name="State ID" expression="{&lt;=this.getvariable(rating_statecode)&gt; EQUAL ID}
AND
{&lt;=this.getvariable(producername)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
								<parameter type="" name="PolicyProducerName" value="&lt;=this.getvariable(producername)&gt;" maxlength="" id="107643217">
								</parameter>
							</condition>
							<elsecondition>
								<parameter type="" name="PolicyProducerName" value="&lt;=this.getvariable(agentid)&gt;" maxlength="">
								</parameter>
							</elsecondition>
							<parameter type="" name="PolicyQuoteDate" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyQuoteDate)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyEffectiveDate" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyEffectiveDate)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientAgentCustomerID" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientAgentCustomerID)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyDescriptiveName" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDescriptiveName)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientPersonFirstName" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientPersonFirstName)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientPersonMiddleName" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientPersonMiddleName)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientPersonLastName" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientPersonLastName)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientPersonSocialSecurityNumber" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientPersonSocialSecurityNumber)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientPersonSocialSecurityNumberFirstThree" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientPersonSocialSecurityNumberFirstThree)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientPersonSocialSecurityNumberMiddleTwo" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientPersonSocialSecurityNumberMiddleTwo)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientPersonSocialSecurityNumberLastFour" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientPersonSocialSecurityNumberLastFour)&gt;" maxlength="">
							</parameter>
							<condition name="Coapplicant is present" expression="{&lt;=this.getvariable(applicant_coapplicant_firstname)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
								<parameter type="" name="PolicyDwellingCoApplicantYN" value="Y" maxlength="" id="1897459109">
								</parameter>
							</condition>
							<condition name="Coapplicant is not present" expression="{&lt;=this.getvariable(applicant_coapplicant_firstname)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
								<parameter type="" name="PolicyDwellingCoApplicantYN" value="N" maxlength="">
								</parameter>
							</condition>
							<parameter type="" name="PolicyClientHomePhoneNumber" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientHomePhoneNumber)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientHomePhoneNumberAreaCode" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientHomePhoneNumberAreaCode)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientHomePhoneNumberPrefix" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientHomePhoneNumberPrefix)&gt;" maxlength="">
							</parameter>
							<parameter type="" name="PolicyClientHomePhoneNumberSuffix" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientHomePhoneNumberSuffix)&gt;" maxlength="">
							</parameter>
							<condition name="newcondition" expression="{&lt;=prevhttpstep.isformfieldpresent(frmInput, PolicyClientMailingLocationAddressLine1, input)&gt; EQUAL true}" appliesto="">
								<parameter type="" name="PolicyClientMailingLocationAddressLine1" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientMailingLocationAddressLine1)&gt;" maxlength="">
								</parameter>
							</condition>
							<condition name="newcondition" expression="{&lt;=prevhttpstep.isformfieldpresent(frmInput, PolicyClientMailingLocationAddressLine2, input)&gt; EQUAL true}" appliesto="">
								<parameter type="" name="PolicyClientMailingLocationAddressLine2" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientMailingLocationAddressLine2)&gt;" maxlength="">
								</parameter>
							</condition>
							<condition name="newcondition" expression="{&lt;=prevhttpstep.isformfieldpresent(frmInput, PolicyClientMailingLocationCity, input)&gt; EQUAL true}" appliesto="">
								<parameter type="" name="PolicyClientMailingLocationCity" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientMailingLocationCity)&gt;" maxlength="">
								</parameter>
								<parameter type="" name="PolicyClientMailingLocationState" value="&lt;=prevhttpstep.extractformselectvalue(frmInput, PolicyClientMailingLocationState)&gt;" maxlength="">
								</parameter>
								<parameter type="" name="PolicyClientMailingLocationZipCode" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientMailingLocationZipCode)&gt;" maxlength="">
								</parameter>
								<parameter type="" name="PolicyHomeDataCurrentAddressYears" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyHomeDataCurrentAddressYears)&gt;" maxlength="">
								</parameter>
								<parameter type="" name="PolicyHomeDataCurrentAddressMonths" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyHomeDataCurrentAddressMonths)&gt;" maxlength="">
								</parameter>
								<condition name="MailingAddress" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="">
									<parameter type="" name="PolicyHomeDataLocationSameAsMailingYN" value="N" maxlength="" id="717635149">
									</parameter>
								</condition>
								<elsecondition>
									<parameter type="" name="PolicyHomeDataLocationSameAsMailingYN" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyHomeDataLocationSameAsMailingYN)&gt;" maxlength="">
									</parameter>
								</elsecondition>
							</condition>
							<parameter type="" name="PolicyBusinessType" value="&lt;=prevhttpstep.extractformselectvalue(frmInput, PolicyBusinessType)&gt;" maxlength="">
							</parameter>
							<condition name="newcondition" expression="{&lt;=this.getvariable(dwellinginfo_firstmortgagee)&gt; EQUAL Yes}" appliesto="">
								<parameter type="" name="PolicyAdditionalInterestsYN" value="Y" maxlength="">
								</parameter>
							</condition>
							<elsecondition>
								<parameter type="" name="PolicyAdditionalInterestsYN" value="N" maxlength="" id="1257393533">
								</parameter>
							</elsecondition>
							<parameter type="" name="__EVENTTARGET" value="ScreenTabs1" maxlength="">
							</parameter>
							<parameter type="" name="__EVENTARGUMENT" value="summary" maxlength="">
							</parameter>
							<parameter type="" name="__EVENTVALIDATION" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __EVENTVALIDATION)&gt;" maxlength="">
							</parameter>
						</script>
						<result errormessage="Error submitting applicant information.  Please contact EZLynx Support Team for further assistance." onerror="QuoteProposalError" ignoreerror="true">
							<verify>
								<form name="frmInput">
									<input name="__ContextGUID" value="">
									</input>
								</form>
							</verify>
							<forms>
								<form name="frmInput">
									<input name="__ContextGUID" type="hidden" value="bb2e9f44-8b14-4ded-b9e7-a504140c3fa1" maxlength="">
									</input>
									<input name="__ModeID" type="hidden" value="2" maxlength="">
									</input>
									<input name="__FormIndexing" type="hidden" value="1" maxlength="">
									</input>
									<input name="__FieldList" type="hidden" value="Policy.RerateMessage!999|Policy.PostNotificationMsg!999|Policy.PostNotificationYN!5|Policy.AutoData.NCRatingBureauIndicator!999|Policy.PremiumTotal!999|Policy.BillingOptionHyperlink!999|Policy.PremiumTotalWithPIF!999|Policy.Client.Person.scrFullName!999|Policy.Client.NameLine2!999|Policy.Client.MailingLocation.scrFullAddress!999|Policy.Client.HomePhoneNumber!999|Policy.EffectiveDate!999|Policy.QuoteDate!999|Policy.scrProductTier!999|Policy.MarketTier!999|Policy.scrSNAPVersion!999|Policy.scrAdvantageCreditLevel!999|Policy.scrCoverageTiers!999|Policy.scrAgent!999|Policy.RatingState!999|Policy.Vehicles(1).mp_Vehicle_ID!999|Policy.Vehicles(2).mp_Vehicle_ID!999|Policy.Vehicles(3).mp_Vehicle_ID!999|Policy.Vehicles(1).CoverageSL.LimitDed!999|Policy.Vehicles(2).CoverageSL.LimitDed!999|Policy.Vehicles(3).CoverageSL.LimitDed!999|Policy.Vehicles(1).CoverageSL.Premium!999|Policy.Vehicles(2).CoverageSL.Premium!999|Policy.Vehicles(3).CoverageSL.Premium!999|Policy.Vehicles(1).CoverageCSL.LimitDed!999|Policy.Vehicles(2).CoverageCSL.LimitDed!999|Policy.Vehicles(3).CoverageCSL.LimitDed!999|Policy.Vehicles(1).CoverageCSL.Premium!999|Policy.Vehicles(2).CoverageCSL.Premium!999|Policy.Vehicles(3).CoverageCSL.Premium!999|Policy.Vehicles(1).CoverageBI.LimitDed!999|Policy.Vehicles(2).CoverageBI.LimitDed!999|Policy.Vehicles(3).CoverageBI.LimitDed!999|Policy.Vehicles(1).CoverageBI.Premium!999|Policy.Vehicles(2).CoverageBI.Premium!999|Policy.Vehicles(3).CoverageBI.Premium!999|Policy.Vehicles(1).CoveragePD.LimitDed!999|Policy.Vehicles(2).CoveragePD.LimitDed!999|Policy.Vehicles(3).CoveragePD.LimitDed!999|Policy.Vehicles(1).CoveragePD.Premium!999|Policy.Vehicles(2).CoveragePD.Premium!999|Policy.Vehicles(3).CoveragePD.Premium!999|Policy.Vehicles(1).CoverageMED.LimitDed!999|Policy.Vehicles(2).CoverageMED.LimitDed!999|Policy.Vehicles(3).CoverageMED.LimitDed!999|Policy.Vehicles(1).CoverageMED.Premium!999|Policy.Vehicles(2).CoverageMED.Premium!999|Policy.Vehicles(3).CoverageMED.Premium!999|Policy.Vehicles(1).CoveragePIP.LimitDed!999|Policy.Vehicles(2).CoveragePIP.LimitDed!999|Policy.Vehicles(3).CoveragePIP.LimitDed!999|Policy.Vehicles(1).CoveragePIP.Premium!999|Policy.Vehicles(2).CoveragePIP.Premium!999|Policy.Vehicles(3).CoveragePIP.Premium!999|Policy.Vehicles(1).CoverageDisplayPIP.LimitDed!999|Policy.Vehicles(2).CoverageDisplayPIP.LimitDed!999|Policy.Vehicles(3).CoverageDisplayPIP.LimitDed!999|Policy.Vehicles(1).CoverageDisplayPIP.Premium!999|Policy.Vehicles(2).CoverageDisplayPIP.Premium!999|Policy.Vehicles(3).CoverageDisplayPIP.Premium!999|Policy.Vehicles(1).CoverageAPIP.LimitDed!999|Policy.Vehicles(2).CoverageAPIP.LimitDed!999|Policy.Vehicles(3).CoverageAPIP.LimitDed!999|Policy.Vehicles(1).CoverageAPIP.Premium!999|Policy.Vehicles(2).CoverageAPIP.Premium!999|Policy.Vehicles(3).CoverageAPIP.Premium!999|Policy.Vehicles(1).CoverageDisplayAPIP.LimitDed!999|Policy.Vehicles(2).CoverageDisplayAPIP.LimitDed!999|Policy.Vehicles(3).CoverageDisplayAPIP.LimitDed!999|Policy.Vehicles(1).CoverageDisplayAPIP.Premium!999|Policy.Vehicles(2).CoverageDisplayAPIP.Premium!999|Policy.Vehicles(3).CoverageDisplayAPIP.Premium!999|Policy.Vehicles(1).CoverageGUEST.LimitDed!999|Policy.Vehicles(2).CoverageGUEST.LimitDed!999|Policy.Vehicles(3).CoverageGUEST.LimitDed!999|Policy.Vehicles(1).CoverageGUEST.Premium!999|Policy.Vehicles(2).CoverageGUEST.Premium!999|Policy.Vehicles(3).CoverageGUEST.Premium!999|Policy.Vehicles(1).CoverageGUESTC.LimitDed!999|Policy.Vehicles(2).CoverageGUESTC.LimitDed!999|Policy.Vehicles(3).CoverageGUESTC.LimitDed!999|Policy.Vehicles(1).CoverageGUESTC.Premium!999|Policy.Vehicles(2).CoverageGUESTC.Premium!999|Policy.Vehicles(3).CoverageGUESTC.Premium!999|Policy.Vehicles(1).CoverageFPB.LimitDed!999|Policy.Vehicles(2).CoverageFPB.LimitDed!999|Policy.Vehicles(3).CoverageFPB.LimitDed!999|Policy.Vehicles(1).CoverageFPB.Premium!999|Policy.Vehicles(2).CoverageFPB.Premium!999|Policy.Vehicles(3).CoverageFPB.Premium!999|Policy.Vehicles(1).CoverageCFPB.LimitDed!999|Policy.Vehicles(2).CoverageCFPB.LimitDed!999|Policy.Vehicles(3).CoverageCFPB.LimitDed!999|Policy.Vehicles(1).CoverageCFPB.Premium!999|Policy.Vehicles(2).CoverageCFPB.Premium!999|Policy.Vehicles(3).CoverageCFPB.Premium!999|Policy.Vehicles(1).CoverageEXMED.LimitDed!999|Policy.Vehicles(2).CoverageEXMED.LimitDed!999|Policy.Vehicles(3).CoverageEXMED.LimitDed!999|Policy.Vehicles(1).CoverageEXMED.Premium!999|Policy.Vehicles(2).CoverageEXMED.Premium!999|Policy.Vehicles(3).CoverageEXMED.Premium!999|Policy.Vehicles(1).CoverageWLB.LimitDed!999|Policy.Vehicles(2).CoverageWLB.LimitDed!999|Policy.Vehicles(3).CoverageWLB.LimitDed!999|Policy.Vehicles(1).CoverageWLB.Premium!999|Policy.Vehicles(2).CoverageWLB.Premium!999|Policy.Vehicles(3).CoverageWLB.Premium!999|Policy.Vehicles(1).CoverageFEB.LimitDed!999|Policy.Vehicles(2).CoverageFEB.LimitDed!999|Policy.Vehicles(3).CoverageFEB.LimitDed!999|Policy.Vehicles(1).CoverageFEB.Premium!999|Policy.Vehicles(2).CoverageFEB.Premium!999|Policy.Vehicles(3).CoverageFEB.Premium!999|Policy.Vehicles(1).CoverageOBEL.LimitDed!999|Policy.Vehicles(2).CoverageOBEL.LimitDed!999|Policy.Vehicles(3).CoverageOBEL.LimitDed!999|Policy.Vehicles(1).CoverageOBEL.Premium!999|Policy.Vehicles(2).CoverageOBEL.Premium!999|Policy.Vehicles(3).CoverageOBEL.Premium!999|Policy.Vehicles(1).CoverageADB.LimitDed!999|Policy.Vehicles(2).CoverageADB.LimitDed!999|Policy.Vehicles(3).CoverageADB.LimitDed!999|Policy.Vehicles(1).CoverageADB.Premium!999|Policy.Vehicles(2).CoverageADB.Premium!999|Policy.Vehicles(3).CoverageADB.Premium!999|Policy.Vehicles(1).CoverageUM.LimitDed!999|Policy.Vehicles(2).CoverageUM.LimitDed!999|Policy.Vehicles(3).CoverageUM.LimitDed!999|Policy.Vehicles(1).CoverageUM.Premium!999|Policy.Vehicles(2).CoverageUM.Premium!999|Policy.Vehicles(3).CoverageUM.Premium!999|Policy.Vehicles(1).CoverageSUM.LimitDed!999|Policy.Vehicles(2).CoverageSUM.LimitDed!999|Policy.Vehicles(3).CoverageSUM.LimitDed!999|Policy.Vehicles(1).CoverageSUM.Premium!999|Policy.Vehicles(2).CoverageSUM.Premium!999|Policy.Vehicles(3).CoverageSUM.Premium!999|Policy.Vehicles(1).CoverageSUMC.LimitDed!999|Policy.Vehicles(2).CoverageSUMC.LimitDed!999|Policy.Vehicles(3).CoverageSUMC.LimitDed!999|Policy.Vehicles(1).CoverageSUMC.Premium!999|Policy.Vehicles(2).CoverageSUMC.Premium!999|Policy.Vehicles(3).CoverageSUMC.Premium!999|Policy.Vehicles(1).CoverageUMCSL.LimitDed!999|Policy.Vehicles(2).CoverageUMCSL.LimitDed!999|Policy.Vehicles(3).CoverageUMCSL.LimitDed!999|Policy.Vehicles(1).CoverageUMCSL.Premium!999|Policy.Vehicles(2).CoverageUMCSL.Premium!999|Policy.Vehicles(3).CoverageUMCSL.Premium!999|Policy.Vehicles(1).CoverageUIM.LimitDed!999|Policy.Vehicles(2).CoverageUIM.LimitDed!999|Policy.Vehicles(3).CoverageUIM.LimitDed!999|Policy.Vehicles(1).CoverageUIM.Premium!999|Policy.Vehicles(2).CoverageUIM.Premium!999|Policy.Vehicles(3).CoverageUIM.Premium!999|Policy.Vehicles(1).CoverageUIMCSL.LimitDed!999|Policy.Vehicles(2).CoverageUIMCSL.LimitDed!999|Policy.Vehicles(3).CoverageUIMCSL.LimitDed!999|Policy.Vehicles(1).CoverageUIMCSL.Premium!999|Policy.Vehicles(2).CoverageUIMCSL.Premium!999|Policy.Vehicles(3).CoverageUIMCSL.Premium!999|Policy.Vehicles(1).CoveragePFPB.LimitDed!999|Policy.Vehicles(2).CoveragePFPB.LimitDed!999|Policy.Vehicles(3).CoveragePFPB.LimitDed!999|Policy.Vehicles(1).CoveragePFPB.Premium!999|Policy.Vehicles(2).CoveragePFPB.Premium!999|Policy.Vehicles(3).CoveragePFPB.Premium!999|Policy.Vehicles(1).CoverageCOMP.LimitDed!999|Policy.Vehicles(2).CoverageCOMP.LimitDed!999|Policy.Vehicles(3).CoverageCOMP.LimitDed!999|Policy.Vehicles(1).CoverageCOMP.Premium!999|Policy.Vehicles(2).CoverageCOMP.Premium!999|Policy.Vehicles(3).CoverageCOMP.Premium!999|Policy.Vehicles(1).CoverageCOLL.LimitDed!999|Policy.Vehicles(2).CoverageCOLL.LimitDed!999|Policy.Vehicles(3).CoverageCOLL.LimitDed!999|Policy.Vehicles(1).CoverageCOLL.Premium!999|Policy.Vehicles(2).CoverageCOLL.Premium!999|Policy.Vehicles(3).CoverageCOLL.Premium!999|Policy.Vehicles(1).CoverageDisplayCOLLDimDed.LimitDed!999|Policy.Vehicles(2).CoverageDisplayCOLLDimDed.LimitDed!999|Policy.Vehicles(3).CoverageDisplayCOLLDimDed.LimitDed!999|Policy.Vehicles(1).CoverageDisplayCOLLDimDed.Premium!999|Policy.Vehicles(2).CoverageDisplayCOLLDimDed.Premium!999|Policy.Vehicles(3).CoverageDisplayCOLLDimDed.Premium!999|Policy.Vehicles(1).CoverageWCD.LimitDed!999|Policy.Vehicles(2).CoverageWCD.LimitDed!999|Policy.Vehicles(3).CoverageWCD.LimitDed!999|Policy.Vehicles(1).CoverageWCD.Premium!999|Policy.Vehicles(2).CoverageWCD.Premium!999|Policy.Vehicles(3).CoverageWCD.Premium!999|Policy.Vehicles(1).CoverageVSI.LimitDed!999|Policy.Vehicles(2).CoverageVSI.LimitDed!999|Policy.Vehicles(3).CoverageVSI.LimitDed!999|Policy.Vehicles(1).CoverageVSI.Premium!999|Policy.Vehicles(2).CoverageVSI.Premium!999|Policy.Vehicles(3).CoverageVSI.Premium!999|Policy.Vehicles(1).CoverageEQUIP.LimitDed!999|Policy.Vehicles(2).CoverageEQUIP.LimitDed!999|Policy.Vehicles(3).CoverageEQUIP.LimitDed!999|Policy.Vehicles(1).CoverageEQUIP.Premium!999|Policy.Vehicles(2).CoverageEQUIP.Premium!999|Policy.Vehicles(3).CoverageEQUIP.Premium!999|Policy.Vehicles(1).CoverageUMPD.LimitDed!999|Policy.Vehicles(2).CoverageUMPD.LimitDed!999|Policy.Vehicles(3).CoverageUMPD.LimitDed!999|Policy.Vehicles(1).CoverageUMPD.Premium!999|Policy.Vehicles(2).CoverageUMPD.Premium!999|Policy.Vehicles(3).CoverageUMPD.Premium!999|Policy.Vehicles(1).CoverageDisplayUMPDVeh.LimitDed!999|Policy.Vehicles(2).CoverageDisplayUMPDVeh.LimitDed!999|Policy.Vehicles(3).CoverageDisplayUMPDVeh.LimitDed!999|Policy.Vehicles(1).CoverageDisplayUMPDVeh.Premium!999|Policy.Vehicles(2).CoverageDisplayUMPDVeh.Premium!999|Policy.Vehicles(3).CoverageDisplayUMPDVeh.Premium!999|Policy.Vehicles(1).CoverageUIMPD.LimitDed!999|Policy.Vehicles(2).CoverageUIMPD.LimitDed!999|Policy.Vehicles(3).CoverageUIMPD.LimitDed!999|Policy.Vehicles(1).CoverageUIMPD.Premium!999|Policy.Vehicles(2).CoverageUIMPD.Premium!999|Policy.Vehicles(3).CoverageUIMPD.Premium!999|Policy.Vehicles(1).CoverageEUM.LimitDed!999|Policy.Vehicles(2).CoverageEUM.LimitDed!999|Policy.Vehicles(3).CoverageEUM.LimitDed!999|Policy.Vehicles(1).CoverageEUM.Premium!999|Policy.Vehicles(2).CoverageEUM.Premium!999|Policy.Vehicles(3).CoverageEUM.Premium!999|Policy.Vehicles(1).CoveragePKG.LimitDed!999|Policy.Vehicles(2).CoveragePKG.LimitDed!999|Policy.Vehicles(3).CoveragePKG.LimitDed!999|Policy.Vehicles(1).CoveragePKG.Premium!999|Policy.Vehicles(2).CoveragePKG.Premium!999|Policy.Vehicles(3).CoveragePKG.Premium!999|Policy.Vehicles(1).CoverageRPLVEH.LimitDed!999|Policy.Vehicles(2).CoverageRPLVEH.LimitDed!999|Policy.Vehicles(3).CoverageRPLVEH.LimitDed!999|Policy.Vehicles(1).CoverageRPLVEH.Premium!999|Policy.Vehicles(2).CoverageRPLVEH.Premium!999|Policy.Vehicles(3).CoverageRPLVEH.Premium!999|Policy.Vehicles(1).CoveragePPI.LimitDed!999|Policy.Vehicles(2).CoveragePPI.LimitDed!999|Policy.Vehicles(3).CoveragePPI.LimitDed!999|Policy.Vehicles(1).CoveragePPI.Premium!999|Policy.Vehicles(2).CoveragePPI.Premium!999|Policy.Vehicles(3).CoveragePPI.Premium!999|Policy.Vehicles(1).CoverageLPD.LimitDed!999|Policy.Vehicles(2).CoverageLPD.LimitDed!999|Policy.Vehicles(3).CoverageLPD.LimitDed!999|Policy.Vehicles(1).CoverageLPD.Premium!999|Policy.Vehicles(2).CoverageLPD.Premium!999|Policy.Vehicles(3).CoverageLPD.Premium!999|Policy.Vehicles(1).CoverageMCCA.LimitDed!999|Policy.Vehicles(2).CoverageMCCA.LimitDed!999|Policy.Vehicles(3).CoverageMCCA.LimitDed!999|Policy.Vehicles(1).CoverageMCCA.Premium!999|Policy.Vehicles(2).CoverageMCCA.Premium!999|Policy.Vehicles(3).CoverageMCCA.Premium!999|Policy.Vehicles(1).CoverageTL.LimitDed!999|Policy.Vehicles(2).CoverageTL.LimitDed!999|Policy.Vehicles(3).CoverageTL.LimitDed!999|Policy.Vehicles(1).CoverageTL.Premium!999|Policy.Vehicles(2).CoverageTL.Premium!999|Policy.Vehicles(3).CoverageTL.Premium!999|Policy.Vehicles(1).CoverageRREIM.LimitDed!999|Policy.Vehicles(2).CoverageRREIM.LimitDed!999|Policy.Vehicles(3).CoverageRREIM.LimitDed!999|Policy.Vehicles(1).CoverageRREIM.Premium!999|Policy.Vehicles(2).CoverageRREIM.Premium!999|Policy.Vehicles(3).CoverageRREIM.Premium!999|Policy.Vehicles(1).CoverageRENT.LimitDed!999|Policy.Vehicles(2).CoverageRENT.LimitDed!999|Policy.Vehicles(3).CoverageRENT.LimitDed!999|Policy.Vehicles(1).CoverageRENT.Premium!999|Policy.Vehicles(2).CoverageRENT.Premium!999|Policy.Vehicles(3).CoverageRENT.Premium!999|Policy.Vehicles(1).CoverageRRCV.LimitDed!999|Policy.Vehicles(2).CoverageRRCV.LimitDed!999|Policy.Vehicles(3).CoverageRRCV.LimitDed!999|Policy.Vehicles(1).CoverageRRCV.Premium!999|Policy.Vehicles(2).CoverageRRCV.Premium!999|Policy.Vehicles(3).CoverageRRCV.Premium!999|Policy.Vehicles(1).CoverageLOANCV.LimitDed!999|Policy.Vehicles(2).CoverageLOANCV.LimitDed!999|Policy.Vehicles(3).CoverageLOANCV.LimitDed!999|Policy.Vehicles(1).CoverageLOANCV.Premium!999|Policy.Vehicles(2).CoverageLOANCV.Premium!999|Policy.Vehicles(3).CoverageLOANCV.Premium!999|Policy.Vehicles(1).CoverageRDAST.LimitDed!999|Policy.Vehicles(2).CoverageRDAST.LimitDed!999|Policy.Vehicles(3).CoverageRDAST.LimitDed!999|Policy.Vehicles(1).CoverageRDAST.Premium!999|Policy.Vehicles(2).CoverageRDAST.Premium!999|Policy.Vehicles(3).CoverageRDAST.Premium!999|Policy.Vehicles(1).CoverageSTEREO.LimitDed!999|Policy.Vehicles(2).CoverageSTEREO.LimitDed!999|Policy.Vehicles(3).CoverageSTEREO.LimitDed!999|Policy.Vehicles(1).CoverageSTEREO.Premium!999|Policy.Vehicles(2).CoverageSTEREO.Premium!999|Policy.Vehicles(3).CoverageSTEREO.Premium!999|Policy.Vehicles(1).CoverageAV.LimitDed!999|Policy.Vehicles(2).CoverageAV.LimitDed!999|Policy.Vehicles(3).CoverageAV.LimitDed!999|Policy.Vehicles(1).CoverageAV.Premium!999|Policy.Vehicles(2).CoverageAV.Premium!999|Policy.Vehicles(3).CoverageAV.Premium!999|Policy.Vehicles(1).CoverageAVSNAP2.LimitDed!999|Policy.Vehicles(2).CoverageAVSNAP2.LimitDed!999|Policy.Vehicles(3).CoverageAVSNAP2.LimitDed!999|Policy.Vehicles(1).CoverageAVSNAP2.Premium!999|Policy.Vehicles(2).CoverageAVSNAP2.Premium!999|Policy.Vehicles(3).CoverageAVSNAP2.Premium!999|Policy.Vehicles(1).CoverageEXCSND.LimitDed!999|Policy.Vehicles(2).CoverageEXCSND.LimitDed!999|Policy.Vehicles(3).CoverageEXCSND.LimitDed!999|Policy.Vehicles(1).CoverageEXCSND.Premium!999|Policy.Vehicles(2).CoverageEXCSND.Premium!999|Policy.Vehicles(3).CoverageEXCSND.Premium!999|Policy.Vehicles(1).CoverageCBRAD.LimitDed!999|Policy.Vehicles(2).CoverageCBRAD.LimitDed!999|Policy.Vehicles(3).CoverageCBRAD.LimitDed!999|Policy.Vehicles(1).CoverageCBRAD.Premium!999|Policy.Vehicles(2).CoverageCBRAD.Premium!999|Policy.Vehicles(3).CoverageCBRAD.Premium!999|Policy.Vehicles(1).CoverageSTSR1.LimitDed!999|Policy.Vehicles(2).CoverageSTSR1.LimitDed!999|Policy.Vehicles(3).CoverageSTSR1.LimitDed!999|Policy.Vehicles(1).CoverageSTSR1.Premium!999|Policy.Vehicles(2).CoverageSTSR1.Premium!999|Policy.Vehicles(3).CoverageSTSR1.Premium!999|Policy.Vehicles(1).CoverageSTSR4.LimitDed!999|Policy.Vehicles(2).CoverageSTSR4.LimitDed!999|Policy.Vehicles(3).CoverageSTSR4.LimitDed!999|Policy.Vehicles(1).CoverageSTSR4.Premium!999|Policy.Vehicles(2).CoverageSTSR4.Premium!999|Policy.Vehicles(3).CoverageSTSR4.Premium!999|Policy.Vehicles(1).CoverageTPAC.LimitDed!999|Policy.Vehicles(2).CoverageTPAC.LimitDed!999|Policy.Vehicles(3).CoverageTPAC.LimitDed!999|Policy.Vehicles(1).CoverageTPAC.Premium!999|Policy.Vehicles(2).CoverageTPAC.Premium!999|Policy.Vehicles(3).CoverageTPAC.Premium!999|Policy.Vehicles(1).CoverageKYSUR.LimitDed!999|Policy.Vehicles(2).CoverageKYSUR.LimitDed!999|Policy.Vehicles(3).CoverageKYSUR.LimitDed!999|Policy.Vehicles(1).CoverageKYSUR.Premium!999|Policy.Vehicles(2).CoverageKYSUR.Premium!999|Policy.Vehicles(3).CoverageKYSUR.Premium!999|Policy.Vehicles(1).CoverageKYCNTY.LimitDed!999|Policy.Vehicles(2).CoverageKYCNTY.LimitDed!999|Policy.Vehicles(3).CoverageKYCNTY.LimitDed!999|Policy.Vehicles(1).CoverageKYCNTY.Premium!999|Policy.Vehicles(2).CoverageKYCNTY.Premium!999|Policy.Vehicles(3).CoverageKYCNTY.Premium!999|Policy.Vehicles(1).CoverageKYTX.LimitDed!999|Policy.Vehicles(2).CoverageKYTX.LimitDed!999|Policy.Vehicles(3).CoverageKYTX.LimitDed!999|Policy.Vehicles(1).CoverageKYTX.Premium!999|Policy.Vehicles(2).CoverageKYTX.Premium!999|Policy.Vehicles(3).CoverageKYTX.Premium!999|Policy.Vehicles(1).CoverageTAXFEE.LimitDed!999|Policy.Vehicles(2).CoverageTAXFEE.LimitDed!999|Policy.Vehicles(3).CoverageTAXFEE.LimitDed!999|Policy.Vehicles(1).CoverageTAXFEE.Premium!999|Policy.Vehicles(2).CoverageTAXFEE.Premium!999|Policy.Vehicles(3).CoverageTAXFEE.Premium!999|Policy.Vehicles(1).CoverageFRESP.LimitDed!999|Policy.Vehicles(2).CoverageFRESP.LimitDed!999|Policy.Vehicles(3).CoverageFRESP.LimitDed!999|Policy.Vehicles(1).CoverageFRESP.Premium!999|Policy.Vehicles(2).CoverageFRESP.Premium!999|Policy.Vehicles(3).CoverageFRESP.Premium!999|Policy.CoverageAPIP.LimitDed!999|Policy.CoverageAPIP.Premium!999|Policy.CoverageMED.LimitDed!999|Policy.CoverageMED.Premium!999|Policy.CoverageUM.LimitDed!999|Policy.CoverageUM.Premium!999|Policy.CoverageUMCSL.LimitDed!999|Policy.CoverageUMCSL.Premium!999|Policy.CoverageUIMCSL.LimitDed!999|Policy.CoverageUIMCSL.Premium!999|Policy.CoverageUIM.LimitDed!999|Policy.CoverageUIM.Premium!999|Policy.CoverageUMPD.LimitDed!999|Policy.CoverageUMPD.Premium!999|Policy.CoverageADDA.LimitDed!999|Policy.CoverageADDA.Premium!999|Policy.CoverageADDG.LimitDed!999|Policy.CoverageADDG.Premium!999|Policy.CoverageDOC.LimitDed!999|Policy.CoverageDOC.Premium!999|Policy.CoverageAPMP.LimitDed!999|Policy.CoverageAPMP.Premium!999|Policy.CoveragePLFEE.LimitDed!999|Policy.CoveragePLFEE.Premium!999|Policy.TortLimitation!999|Policy.Drivers(1).DriverType!999|Policy.Drivers(2).DriverType!999|Policy.Drivers(3).DriverType!999|Policy.Drivers(1).Person.Birthdate!999|Policy.Drivers(2).Person.Birthdate!999|Policy.Drivers(3).Person.Birthdate!999|Policy.Drivers(1).Person.Gender!999|Policy.Drivers(2).Person.Gender!999|Policy.Drivers(3).Person.Gender!999|Policy.Drivers(1).Person.MaritalStatus!999|Policy.Drivers(2).Person.MaritalStatus!999|Policy.Drivers(3).Person.MaritalStatus!999|Policy.Drivers(1).mp_Driver_ID!999|Policy.Drivers(2).mp_Driver_ID!999|Policy.Drivers(3).mp_Driver_ID!999|Policy.Vehicles(1).Model!999|Policy.Vehicles(2).Model!999|Policy.Vehicles(3).Model!999|Policy.Vehicles(1).VIN!999|Policy.Vehicles(2).VIN!999|Policy.Vehicles(3).VIN!999|Policy.Vehicles(1).Bodystyle!999|Policy.Vehicles(2).Bodystyle!999|Policy.Vehicles(3).Bodystyle!999|Policy.Vehicles(1).AntiqueClassicIndicator!999|Policy.Vehicles(2).AntiqueClassicIndicator!999|Policy.Vehicles(3).AntiqueClassicIndicator!999|Policy.Vehicles(1).scrISOSymbol!999|Policy.Vehicles(2).scrISOSymbol!999|Policy.Vehicles(3).scrISOSymbol!999|Policy.Vehicles(1).CostNew!999|Policy.Vehicles(2).CostNew!999|Policy.Vehicles(3).CostNew!999|Policy.Vehicles(1).StatedAmount!999|Policy.Vehicles(2).StatedAmount!999|Policy.Vehicles(3).StatedAmount!999|Policy.Vehicles(1).EngineSize!999|Policy.Vehicles(2).EngineSize!999|Policy.Vehicles(3).EngineSize!999|Policy.Vehicles(1).mp_PrincipalOperator_ID!999|Policy.Vehicles(2).mp_PrincipalOperator_ID!999|Policy.Vehicles(3).mp_PrincipalOperator_ID!999|Policy.Vehicles(1).InexpOperatorSurchLevel!999|Policy.Vehicles(2).InexpOperatorSurchLevel!999|Policy.Vehicles(3).InexpOperatorSurchLevel!999|Policy.Vehicles(1).mp_RegisteredOwnerOne_ID!999|Policy.Vehicles(2).mp_RegisteredOwnerOne_ID!999|Policy.Vehicles(3).mp_RegisteredOwnerOne_ID!999|Policy.Vehicles(1).mp_RegisteredOwnerTwo_ID!999|Policy.Vehicles(2).mp_RegisteredOwnerTwo_ID!999|Policy.Vehicles(3).mp_RegisteredOwnerTwo_ID!999|Policy.Vehicles(1).Location.scrVehicleAddress!999|Policy.Vehicles(2).Location.scrVehicleAddress!999|Policy.Vehicles(3).Location.scrVehicleAddress!999|Policy.Vehicles(1).Territory!999|Policy.Vehicles(2).Territory!999|Policy.Vehicles(3).Territory!999|Policy.AutoData.rPolicyAccidentFreeYN!999|Policy.AutoData.rPolicyAccidentPreventionDiscYN!999|Policy.AutoData.rPolicyAccountDiscYN!999|Policy.AutoData.rPolicyAdvantageLevelYN!999|Policy.AutoData.rPolicyAffinityDiscYN!999|Policy.AutoData.rPolicyAffinityMktDiscApplied!999|Policy.AutoData.rPolicyAlcoholDrugAwareCrYN!999|Policy.AutoData.rPolicyAntiLockBrakingDiscYN!999|Policy.AutoData.rPolicyAntiTheftDiscYN!999|Policy.AutoData.rPolicyAssociationDiscYN!999|Policy.AutoData.rPolicyCarpoolDiscYN!999|Policy.AutoData.rPolicyDaytimeRunningLightsCrYN!999|Policy.AutoData.rPolicyDistantStudentDiscYN!999|Policy.AutoData.rPolicyDriverTrainingDiscYN!999|Policy.AutoData.rPolicyEmployeeDiscYN!999|Policy.AutoData.rPolicyFourDoorDiscYN!999|Policy.AutoData.rPolicyGoodDriverDiscYN!999|Policy.AutoData.rPolicyGoodStudentDiscYN!999|Policy.AutoData.rPolicyInexpDriverSurchYN!999|Policy.AutoData.rPolicyLongevityDiscYN!999|Policy.AutoData.rPolicyMotorcycleSafetyFoundationDiscYN!999|Policy.AutoData.rPolicyMultiCarDiscYN!999|Policy.AutoData.rPolicyCoverageDiscYN!999|Policy.AutoData.rPolicyOccasionalOperatorCrYN!999|Policy.AutoData.rPolicyPassiveRestraintYN!999|Policy.AutoData.rPolicyPerformanceSurchYN!999|Policy.AutoData.rPolicySponsoredMarketYN!999|Policy.AutoData.rPolicySrPIPDiscYN!999|Policy.AutoData.rPolicySafeDriverDiscYN!999|Policy.AutoData.rPolicyHomeownersCreditYN!999|Policy.AutoData.rPolicyGaragingDiscountYN!999|Policy.AutoData.PriorInsuranceDiscountYN!999|Policy.AutoData.rPolicyResidenceInsuranceCreditYN!999|Policy.AutoData.rPolicyAdvanceQuotingDiscYN!999|Policy.AutoData.rPolicyHomeownersDiscYN!999|Policy.AutoData.rPolicyMilitaryDiscount!999|Policy.AutoData.rPolicyTeensuranceDiscountYN!999|Policy.AutoData.rPolicyExcludedDriverSurchYN!999|Policy.scrPremiumTotalWithPIF!999|Policy.ChecklessPaymentAmount!999|Policy.PayrollDeductionPaymentAmount!999|Policy.BudgetPaymentAmount!999|Policy.MonthlyPaymentAmount!999|Policy.CODPaymentAmount!999|Policy.AutoData.scrVehicleList!999|Policy.Client.MailingLocation.OverrideGISYN!999|Policy.Client.MailingLocation.SystemModifiedYN!999|Policy.BillByAccountYN!999|Policy.BillingPlanAutoDeduction!999|Policy.BillingPlanPaymentMethod!999|Policy.BillingPlanByMail!999|Policy.PremiumTotalWithPIFNoChg!999|Policy.BudgetPaymentAmountNoChg!999|Policy.Vehicles(1).Location.OverrideGISYN!999|Policy.Vehicles(2).Location.OverrideGISYN!999|Policy.Vehicles(3).Location.OverrideGISYN!999|Policy.Vehicles(1).Location.SystemModifiedYN!999|Policy.Vehicles(2).Location.SystemModifiedYN!999|Policy.Vehicles(3).Location.SystemModifiedYN!999|Policy.Vehicles(1).Make!999|Policy.Vehicles(2).Make!999|Policy.Vehicles(3).Make!999|Policy.Vehicles(1).ModelYear!999|Policy.Vehicles(2).ModelYear!999|Policy.Vehicles(3).ModelYear!999" maxlength="">
									</input>
									<input name="PolicyVersion" type="hidden" value="2" maxlength="">
									</input>
									<input name="__ActivityType" type="hidden" value="NewBusiness" maxlength="">
									</input>
									<input name="__ActivityTypeID" type="hidden" value="2" maxlength="">
									</input>
									<input name="__VIEWSTATE" type="hidden" value="/wEPDwUJNDg2NzI0OTU5ZBgBBR5fX0NvbnRyb2xzUmVxdWlyZVBvc3RCYWNrS2V5X18WBwUIYnRuRW1haWwFCGJ0blByaW50BQRCYWNrBQZDbGllbnQFBEluZm8FBFNhdmUFCENvbnRpbnVlaGr0Xrj0ftAoryaQkZScl37K0R0=" maxlength="">
									</input>
								</form>
							</forms>
						</result>
					</httpstep>
					<functionstep name="Setanonynoumsstep" id="1606106893" prompt="no" errormessage="Error setting anonynoums step. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(anonymousstep, SubmitGoToSummary)>]]></functionstep>
					<condition name="PolicyHasNotBeenRated" expression="{&lt;=java.callstringmethod(indexOf, &lt;=SubmitGoToSummary.getoutputtextbuffer()&gt;, Policy has not been rated)&gt; NOTEQUAL -1}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}}" appliesto="">
						<functionstep name="MapVariableTXWeb" id="780245980" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(map_maritalstatus, Single=S|Married=M|Domestic Partner=M|Widowed=W|Separated=P|Divorced=D)>

<=this.setvariable(map_occupation, Self-Employed=Other|Employed=Other|Unemployed=Unemployed|Homemaker=Homemaker/Houseprsn|Retired=Retired|Student=Student)>

<=this.setvariable(map_occupation1, Self-Employed=Other|Employed=Other|Unemployed=Unemployed|Homemaker=Homemaker/Houseprsn|Retired=Retired|Student=Other)>

<=this.setvariable(map_relation, Child=C|Domestic Partner=P|Employee=O|Insured=O|Other=O|Parent=F|Relative=F|Spouse=S)>

<=this.setvariable(map_statecode, AK=54|AL=1|AR=3|AZ=2|CA=4|CO=5|CT=6|FL=9|GA=10|IA=14|ID=11|IL=12|IN=13|KS=15|KY=16|LA=17|MD=19|MI=21|MN=22|MO=24|MS=23|MT=25|NC=32|ND=33|NE=26|NH=28|NM=30|NV=27|NY=31|OH=34|OK=35|OR=36|PA=37|SC=39|SD=40|TN=41|TX=42|UT=43|VA=45|VT=44|WA=46|WI=48|WV=47|WY=49)>

<=this.setvariable(map_policy, HO3=QSH|HO4=RENT|HO5=QSH|HO6=COND)>

<=this.setvariable(map_construction, Frame=F|Brick=M|Brick Veneer=V|Aluminum/Vinyl=I|Fire Resistant=M|Stucco=M)>

<=this.setvariable(map_heatingtype, Gas=G|Electric=E|Oil=O|Solid Fuel=W|Other=R)>

<=this.setvariable(map_usage, Primary=N|Secondary=Y|Seasonal=Y|Farm=N|Unoccupied=Y|Vacant=Y|COC=Y)>

<=this.setvariable(map_roof, ARCHITECTURAL SHINGLES=S|ASBESTOS=L|ASPHALT SHINGLES=S|COMPOSITION=S|COPPER(FLAT)=A|COPPER(PITCHED)=A|CORRUGATED STEEL(FLAT)=A|CORRUGATED STEEL(PITCHED)=A|FIBERGLASS=J|FOAM=K|GRAVEL=T|METAL(FLAT)=A|METAL(PITCHED)=A|MINERAL FIBER SHAKE=J|PLASTIC(FLAT)=K|PLASTIC(PITCHED)=K|ROCK=I|ROLLED PAPER(FLAT)=L|ROLLED PAPER(PITCHED)=L|RUBBER FLAT=L|RUBBER(PITCHED)=L|SLATE=I|TAR=T|TAR and GRAVEL=T|TILE(CLAY)=C|TILE(CONCRETE)=C|TILE(SPANISH)=C|TIN(FLAT)=A|TIN(PITCHED)=A|WOOD FIBERGLASS SHINGLES=W|WOOD SHAKE=W|WOOD SHINGLES=W|OTHER=L)>

<=this.setvariable(map_dwelling, One Family=1|Two Family=2|Three Family=2|Four Family=2)>

<=this.setvariable(map_personalliability, 25000=25000|50000=50000|100000=100000|200000=300000|300000=300000|400000=500000|500000=500000)>

<=this.setvariable(map_medicalpayments, 1000=1000|2000=2000|3000=3000|4000=4000|5000=5000)>


<=this.setvariable(map_deductible1, 0-500=500|501-750=750|751-1000=1000|1001-1500=1500|1501-2000=2000|2001-2500=2500|2501-3000=3000|3001-3500=3500|3501-4000=4000|4001-5000=5000|5001-7500=7500|7501-=10000)>

<=this.setvariable(map_deductible2, 0-500=500|501-750=500|751-1000=750|1001-1500=1000|1501-2000=1500|2001-2500=2000|2501-3000=2500|3001-3500=3000|3501-4000=3500|4001-5000=4000|5001-7500=5000|7501-=7500)>


<=this.setvariable(map_deductible, 1/2%=500|1%=1000|100=500|250=500|500=500|750=750|1000=1000|2000=2000|2500=2500|3000=3000|4000=4000|5000=5000)>

<=this.setvariable(map_deductibleHO4, 1/2%=.5|1%=1|100=250|250=250|500=.5|750=1|1000=1|2000=1|2500=1|3000=1|4000=1|5000=1)>

<=this.setvariable(map_deductibleHO6, 1/2%=.5|1%=1|100=100|250=250|500=.5|750=1|1000=1|2000=1|2500=1|3000=1|4000=1|5000=1)>

<=this.setvariable(map_windhail, None=|100=1|250=1|500=1|1000=1|1%=1|2%=2|3%=3|4%=4|5%=5|1=1|2=2)>

<=this.setvariable(map_increasedmold, 25000=50|50000=50|75000=75|100000=100)>

<=this.setvariable(map_lossassessmentamount, 5000=5000|10000=10000|25000=25000|50000=50000|75000=50000|100000=50000)>

<=this.setvariable(map_lossassessmentamountHO6, 5000=11000|10000=11000|25000=51000|50000=51000|75000=51000|100000=51000)>

<=this.setvariable(map_burglaralarm, Central=C|Direct=P|Local=L)>

<=this.setvariable(mappriorcarrier, Other Standard=65|Other Non-Standard=65|No Prior Insurance=NF|21st Century=65|AAA=65|Acuity=65|Adirondack Ins Exchange=65|AIG=65|Allianz of America=65|Allianz of America-Jefferson=AllianzAmer/Jefferso|Allied=65|Allmerica=65|Allstate=Allstate|America First=65|Amica=65|ASI Lloyds=65|Austin Mutual=65|Auto-Owners=65|Balboa=65|Beacon National=65|Central Mutual of OH=65|Chubb=Chubb|Citizens=65|Colorado Casualty=65|Dairyland=65|Donegal=65|Electric=65|Encompass=65|Erie=Erie|Esurance=65|Excelsior Insurance Company=65|Fair Plan=Fair Plan|Farm Bureau=65|Farmers=65|Fidelity=65|Firemans Fund=65|First American=65|GMAC=65|Grange=65|Guide One=65|Hanover=65|Harleysville=65|Hartford=Hartford|Hartford OMNI=Hartford|Hawkeye Security=65|Horace Mann=65|Houston General=65|Indiana=65|Kemper=65|Liberty Mutual=Liberty Mutual|Lloyds=Lloyds|Merchants Group=65|Mercury=65|MetLife=65|Midwestern Indemnity=65|Montgomery=65|MSA=65|Mutual Benefit=65|Nationwide=Nationwide Group|Nationwide-Scottsdale=Nationwide/Scottsdal|New York Central Mutual=65|Northstar=65|Ohio Casualty=65|One Beacon=65|Oregon Mutual=65|Peerless/Montgomery=65|Pekin=65|Preferred Mutual=65|Prudential=Prudential|Republic=65|Royal and Sun Alliance=Royal|Safeco=Safeco|St. Paul/Travelers=Travelers|State Auto=65|State Farm=State Farm|Tower=65|TWFG=65|Unigard=65|Unitrin=65|USAA=USAA|Western National=65|White Mountains=65|Zurich=Zurich)>

<=this.setvariable(map_roofid, ARCHITECTURAL SHINGLES=15502|ASBESTOS=15502|ASPHALT SHINGLES=15001|COMPOSITION=15001|COPPER(FLAT)=15012|COPPER(PITCHED)=15012|CORRUGATED STEEL(FLAT)=15011|CORRUGATED STEEL(PITCHED)=15011|FIBERGLASS=15502|FOAM=15502|GRAVEL=15004|METAL(FLAT)=15502|METAL(PITCHED)=15502|MINERAL FIBER SHAKE=15502|PLASTIC(FLAT)=15502|PLASTIC(PITCHED)=15502|ROCK=15502|ROLLED PAPER(FLAT)=15502|ROLLED PAPER(PITCHED)=15502|RUBBER FLAT=15009|RUBBER(PITCHED)=15009|SLATE=15003|TAR=15004|TAR and GRAVEL=15004|TILE(CLAY)=15007|TILE(CONCRETE)=15007|TILE(SPANISH)=15007|TIN(FLAT)=15010|TIN(PITCHED)=15010|WOOD FIBERGLASS SHINGLES=15002|WOOD SHAKE=15002|WOOD SHINGLES=15002|OTHER=15502)>

<=this.setvariable(map_heatingtypeid, Gas=60007|Electric=60004|Oil=60009|Solid Fuel=55204|Other=55204|Gas/Propane - Forced Air=60007|Gas/Propane - Hot Water=60013|Electric/Gas - Heat Pump=60021|Electric - Forced Air/Baseboard=60004|Radiant Floor=60020|Oil - Forced Air=60009|Oil - Hot Water=60010|Freestanding Wood/Pellet Stove=55204|In-Wall Furnace/Heater=60001|Space Heaters=60012)>]]></functionstep>
						<httpstep name="GoToSubmitDwelling" id="14644102883508525">
							<script protocol="http" method="post" timeout="0" clientauthentication="no" contenttype="text/html" form="frmInput">
								<url><![CDATA[<=this.getvariable(urlqp1)>/Summary.aspx?&modeid=2&context=<=this.getvariable(contextid)>]]></url>
								<parameter type="" name="__EVENTARGUMENT" value="dwelling" maxlength="">
								</parameter>
								<parameter type="" name="__EVENTTARGET" value="ScreenTabs1" maxlength="">
								</parameter>
								<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
									<condition name="newcondition" expression="{1 EQUAL 1}" appliesto="">
										<parameter type="hidden" name="__ContextGUID" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __ContextGUID)&gt;" maxlength="">
										</parameter>
										<parameter type="hidden" name="__FieldList" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __FieldList)&gt;" maxlength="">
										</parameter>
										<condition name="PolicyType-HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="">
											<parameter type="hidden" name="PolicyVersion" value="6" maxlength="">
											</parameter>
										</condition>
										<condition name="PolicyType-HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="">
											<parameter type="hidden" name="PolicyVersion" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyVersion)&gt;" maxlength="" id="704407702">
											</parameter>
										</condition>
										<parameter type="" name="PolicyClientNameLine2" value="" maxlength="">
										</parameter>
									</condition>
									<parameter type="hidden" name="__VIEWSTATE" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __VIEWSTATE)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyRerateMessage" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyPostNotificationMsg" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyPostNotificationMsg)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyHomeDataBelowFairMarketYN" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyPremiumTotal" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyBillingOptionHyperlink" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyBillingOptionHyperlink)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyClientHomePhoneNumber" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyClientHomePhoneNumber)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyEffectiveDate" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyEffectiveDate)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyQuoteDate" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyQuoteDate)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyRatingState" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyRatingState)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoveragePPLimitDed" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingCoveragePPLimitDed)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoveragePPPremium" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoveragePLLimitDed" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingCoveragePLLimitDed)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoveragePLPremium" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoverageMEDPMLimitDed" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingCoverageMEDPMLimitDed)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoverageMEDPMPremium" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoverageFVREPLimitDed" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingCoverageFVREPLimitDed)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoverageFVREPPremium" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyTotalPremium" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoverageACCTLimitDed" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingCoverageACCTLimitDed)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoverageACCTPremium" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingCoverageACCTPremium)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoverageDisplayALARMCreditLimitDed" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingCoverageDisplayALARMCreditLimitDed)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingCoverageDisplayALARMCreditPremium" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingCoverageDisplayALARMCreditPremium)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyTotalPremium" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyHomeDataDeductibleClause3" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyHomeDataDeductibleClause3)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingLocationCounty)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingTerritory" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingTerritory)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingProtectionClass)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingConstructionYear" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingConstructionYear)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingConstructionType" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingConstructionType)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="__EVENTVALIDATION" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __EVENTVALIDATION)&gt;" maxlength="">
									</parameter>
								</condition>
							</script>
							<result errormessage="Error resubmitting dwelling info.  Please contact EZLynx Support Team for further assistance." onerror="QuoteProposalError">
								<verify>
									<form name="frmInput">
										<input name="__ContextGUID" value="">
										</input>
									</form>
								</verify>
								<forms>
									<form name="frmInput">
										<input name="__ContextGUID" type="hidden" value="2ab0bad5-dc7f-41e8-b8ea-a16b1e532108" maxlength="">
										</input>
										<input name="__ModeID" type="hidden" value="2" maxlength="">
										</input>
										<input name="__FormIndexing" type="hidden" value="1" maxlength="">
										</input>
										<input name="__FieldList" type="hidden" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!14|Policy.Dwelling.ProtectionClass!999|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!1|Policy.Dwelling.TXRespFireCounty!1|Policy.Dwelling.FireProtectionDistrict!999|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!999|Policy.Dwelling.PPIdCrYN!5|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!5|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!2|Policy.Dwelling.BurglarAlarmAgent!1|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!1|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!5|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999" maxlength="">
										</input>
										<input name="PolicyVersion" type="hidden" value="5" maxlength="">
										</input>
										<input name="__ActivityType" type="hidden" value="NewBusiness" maxlength="">
										</input>
										<input name="__ActivityTypeID" type="hidden" value="2" maxlength="">
										</input>
										<input name="__VIEWSTATE" type="hidden" value="/wEPDwUKLTQzMDc5Nzk4M2QYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgUFBEJhY2sFBkNsaWVudAUESW5mbwUEU2F2ZQUIQ29udGludWXEtP15lbw+O0rILAaq0bSPlAl8IQ==" maxlength="">
										</input>
										<input name="PolicyDwellingLocationState" type="hidden" value="TX" maxlength="">
										</input>
										<input name="PolicyDwellingrCountyCode" type="hidden" value="439" maxlength="">
										</input>
										<input name="PolicyEffectiveDate" type="hidden" value="01/27/2009" maxlength="">
										</input>
										<input name="__EVENTTARGET" type="hidden" value="" maxlength="">
										</input>
										<input name="__EVENTARGUMENT" type="hidden" value="" maxlength="">
										</input>
										<input name="__EVENTVALIDATION" type="hidden" value="/wEWBgK7vKPQBAK5sO+sBAL6jLyUAwKT7AQC6dijiQkCxdK59wOZeEAHnkzQdUhsuC+tVowRlZ6wBg==" maxlength="">
										</input>
										<input name="" type="submit" value="" maxlength="">
										</input>
										<input name="PolicyDwellingSecondaryDwellingYN" type="radio" value="Y" maxlength="">
										</input>
										<input name="PolicyDwellingSecondaryDwellingYN" type="radio" value="N" maxlength="">
										</input>
										<input name="PolicyDwellingMilesToFireDept" type="text" value="3" maxlength="1">
										</input>
										<input name="PolicyDwellingLocationWithinCityYN" type="radio" value="Y" maxlength="">
										</input>
										<input name="PolicyDwellingLocationWithinCityYN" type="radio" value="N" maxlength="">
										</input>
										<input name="PolicyDwellingConstructionYear" type="text" value="1998" maxlength="4">
										</input>
										<input name="PolicyDwellingLastInspectionDate" type="text" value="" maxlength="10">
										</input>
										<input name="PolicyDwellingTXRespFireCity" type="text" value="" maxlength="28">
										</input>
										<input name="PolicyDwellingTXRespFireCounty" type="text" value="" maxlength="28">
										</input>
										<input name="PolicyDwellingPPIdCrYN" type="checkbox" value="Y" maxlength="">
										</input>
										<input name="PolicyDwellingTXSprinklerYN" type="checkbox" value="Y" maxlength="">
										</input>
										<input name="PolicyDwellingBurglarAlarmDate" type="text" value="01/16/2009" maxlength="10">
										</input>
										<input name="PolicyDwellingBurglarAlarmAgent" type="text" value="Agent" maxlength="30">
										</input>
										<input name="PolicyDwellingBurglarAlarmName" type="text" value="Manufacturer" maxlength="32">
										</input>
										<input name="PolicyDwellingHomeSecurityCrYN" type="checkbox" value="Y" maxlength="">
										</input>
										<input name="Back" type="image" value="" maxlength="">
										</input>
										<input name="Client" type="image" value="" maxlength="">
										</input>
										<input name="Info" type="image" value="" maxlength="">
										</input>
										<input name="Save" type="image" value="" maxlength="">
										</input>
										<input name="Continue" type="image" value="" maxlength="">
										</input>
										<select name="PolicyDwellingFeetToFireHydrant" value="T">
											<option selected="yes" name="1,000 feet or less" value="T">
											</option>
											<option name="Over 1,000 feet" value="OT">
											</option>
										</select>
										<select name="PolicyDwellingDwellingTypeDesc" value="T">
											<option selected="yes" name="Tenant Occupied Dwelling" value="T">
											</option>
											<option name="Tenant Occupied Apartment" value="A">
											</option>
											<option name="Tenant Occupied Townhouse" value="R">
											</option>
										</select>
										<select name="PolicyDwellingConstructionType" value="V">
											<option name="Frame" value="F">
											</option>
											<option name="Masonry or Brick" value="M">
											</option>
											<option selected="yes" name="Masonry Veneer" value="V">
											</option>
											<option name="Aluminum/Steel Siding" value="N">
											</option>
											<option name="Plastic/Vinyl Siding" value="I">
											</option>
											<option name="Log" value="L">
											</option>
											<option name="Asbestos/Stucco" value="A">
											</option>
											<option name="Concrete Block" value="C">
											</option>
										</select>
										<select name="PolicyDwellingBurglarAlarmCrType" value="CN">
											<option name="" value="">
											</option>
											<option name="Local" value="LC">
											</option>
											<option name="Remote" value="RN">
											</option>
											<option selected="yes" name="Central" value="CN">
											</option>
											<option name="Central Combo" value="CC">
											</option>
											<option name="Remote Combo" value="RC">
											</option>
											<option name="State Certified" value="Y">
											</option>
										</select>
									</form>
								</forms>
							</result>
						</httpstep>
						<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
							<httpstep name="SubmitDwellingInfo" id="158">
								<script protocol="http" method="POST" timeout="0" clientauthentication="no" contenttype="text/html" form="frmInput">
									<url><![CDATA[<=this.getvariable(urlqp1)>/home/dwelling.aspx?modeid=2&context=<=this.getvariable(contextid)>]]></url>
									<condition name="Form is HO3" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
										<condition name="State is" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
AND
{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="OK -">
											<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!5|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="">
											</parameter>
										</condition>
										<condition name="State is Kentucky" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="">
											<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="1844461043">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, &lt;=this.getvariable(map_roofupdate)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<condition name="Constructed after 1985" expression="{&lt;=this.minusinteger(&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;, 1985)&gt; GREATER 0}" appliesto="">
												<parameter type="radio" name="PolicyDwellingSyntheticStuccoYN" value="&lt;=this.getvariable(stucco)&gt;" maxlength="">
												</parameter>
											</condition>
											<condition name="Wiring Year" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="">
												<parameter type="" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="" id="1587973497">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingRoofMaterialCategory" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roof)&gt;)&gt;" maxlength="" id="122406514">
											</parameter>
											<parameter type="" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, NOT UPDATED=N|PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="1873691766">
											</parameter>
										</condition>
										<condition name="State is Nevada" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!8|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, &lt;=this.getvariable(map_roofupdate)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingRoofMaterialCategory" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roof)&gt;)&gt;" maxlength="" id="1736078411">
											</parameter>
											<condition name="Constructed after 1985" expression="{&lt;=this.minusinteger(&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;, 1985)&gt; GREATER 0}" appliesto="">
												<parameter type="radio" name="PolicyDwellingSyntheticStuccoYN" value="&lt;=this.getvariable(stucco)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingSyntheticStuccoVerificationType" value="A" maxlength="">
												</parameter>
											</condition>
										</condition>
										<condition name="State is TN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}" appliesto="" id="80151048">
											<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
												<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="" id="277097074">
												</parameter>
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="" id="787440306">
												</parameter>
												<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_protectionclass,&lt;=this.getvariable(mapprotectionclass)&gt;)&gt;" maxlength="" id="891354700">
												</parameter>
												<parameter type="" name="PolicyDwellingNumberOfStories" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_numberofstories)&gt;, &lt;=this.getvariable(numstories)&gt;)&gt;" maxlength="" id="1489430036">
												</parameter>
												<parameter type="hidden" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!8|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!8|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="" id="1251237809">
												</parameter>
												<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="" id="640256209">
												</parameter>
												<parameter type="radio" name="PolicyDwellingBypassCostGuideYN" value="Y" maxlength="" id="1074077206">
												</parameter>
												<parameter type="text" name="PolicyDwellingLivingAreaSqFeetTotal" value="&lt;=this.getvariable(dwellinginfo_squarefootage)&gt;" maxlength="6" id="2008167283">
												</parameter>
												<condition name="Year" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt; EQUAL &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;} AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}" appliesto="">
													<parameter type="" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.addinteger(&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;, 1)&gt;" maxlength="" id="1140902086">
													</parameter>
												</condition>
												<condition name="Year" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt; NOTEQUAL &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;} AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}" appliesto="" id="1197018139">
													<parameter type="" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;" maxlength="" id="581568591">
													</parameter>
												</condition>
												<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
													<condition name="If territory is present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="" id="961014526">
														<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="1556647277">
														</parameter>
														<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="1506925661">
														</parameter>
													</condition>
													<condition name="If territory is not present and the heating type is not other" expression="{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; NOTEQUAL Other}
AND
{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; NOTEQUAL true}" appliesto="" id="1828049022">
														<parameter type="hidden" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!8|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!8|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!8|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="" id="268423134">
														</parameter>
													</condition>
													<elseifcondition name="If territory is present MD" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}
AND
{1 EQUAL 0}" appliesto="" id="1012179995">
														<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="331366092">
														</parameter>
														<parameter type="" name="PolicyDwellingTerritory" value="037" maxlength="" id="96877606">
														</parameter>
													</elseifcondition>
													<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=1000|501-600=1000|601-1000=1000|1001 and Greater=1001|None=1000)&gt;" maxlength="" id="359548958">
													</parameter>
													<parameter type="" name="PolicyDwellingMilesToFireDept" value="&lt;=this.getvariable(dwellinginfo_distancetofirestation)&gt;" maxlength="" id="1820258009">
													</parameter>
													<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="">
													</parameter>
												</condition>
												<condition name="If Heating Type is Other" expression="{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; EQUAL Other}" appliesto="" id="910163635">
													<parameter type="hidden" name="PolicyDwellingHeatingSystemDesc" value="Other" maxlength="" id="2100939781">
													</parameter>
													<parameter type="" name="PolicyDwellingTerritory" value="037" maxlength="" id="1747691977">
													</parameter>
													<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!8|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="356992917">
													</parameter>
												</condition>
												<condition name="Constructed after 1985" expression="{&lt;=this.minusinteger(&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;, 1985)&gt; GREATER 0}" appliesto="" id="510897688">
													<parameter type="radio" name="PolicyDwellingSyntheticStuccoYN" value="&lt;=this.getvariable(stucco)&gt;" maxlength="" id="68587438">
													</parameter>
													<parameter type="" name="PolicyDwellingSyntheticStuccoVerificationType" value="A" maxlength="" id="1379250049">
													</parameter>
												</condition>
												<condition name="If county field present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingLocationCounty, select)&gt; EQUAL true}" appliesto="" id="1765903790">
													<condition name="AltDwelling Address Exists" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="" id="682579046">
														<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="1486486115">
														</parameter>
													</condition>
													<condition name="AltDwelling Address Does Not Exist" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 0}" appliesto="" id="1074824258">
														<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="472136982">
														</parameter>
													</condition>
												</condition>
												<parameter type="" name="PolicyDwellingHeatingSystemType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_heatingtype)&gt;, &lt;=this.getvariable(map_heatingtype)&gt;)&gt;" maxlength="" id="1883910925">
												</parameter>
												<parameter type="" name="__ContextGUID" value="ddd9e303-cd03-4dce-a947-daa08f84c67c" maxlength="">
												</parameter>
												<parameter type="" name="__ModeID" value="2" maxlength="">
												</parameter>
												<parameter type="" name="PolicyVersion" value="8" maxlength="">
												</parameter>
												<parameter type="" name="__FormIndexing" value="1" maxlength="">
												</parameter>
												<parameter type="" name="__VIEWSTATE" value="/wEPDwUKLTQzMDc5Nzk4M2QYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgYFCWltZ0dldEZQRAUEQmFjawUGQ2xpZW50BQRJbmZvBQRTYXZlBQhDb250aW51Zf1SVGoG35ai8JC0/hsr9oJIZaH2" maxlength="">
												</parameter>
												<parameter type="" name="__ActivityType" value="NewBusiness" maxlength="">
												</parameter>
												<parameter type="" name="__ActivityTypeID" value="2" maxlength="">
												</parameter>
												<parameter type="" name="__EVENTVALIDATION" value="/wEWBwKTgdXSAgL6t4yiAQK5sO+sBAL6jLyUAwKT7AQC6dijiQkCxdK59wOU1yussixKqIoqbuZ1emzOOa0QNA==" maxlength="">
												</parameter>
												<parameter type="" name="__EVENTARGUMENT" value="" maxlength="">
												</parameter>
											</condition>
											<condition name="If Heating Type is Other" expression="{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; EQUAL Other}" appliesto="" id="1796742026">
												<parameter type="hidden" name="PolicyDwellingHeatingSystemDesc" value="Other" maxlength="" id="1539650233">
												</parameter>
												<parameter type="" name="PolicyDwellingTerritory" value="037" maxlength="" id="1575159400">
												</parameter>
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="511401500">
												</parameter>
											</condition>
											<elsecondition>
												<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<condition name="Synthetic Stucco" expression="{&lt;=this.getvariable(stucco)&gt; EQUAL Y}" appliesto="">
												<parameter type="" name="PolicyDwellingSyntheticStuccoYN" value="Y" maxlength="">
												</parameter>
											</condition>
											<condition name="Synthetic Stucco" expression="{&lt;=this.getvariable(stucco)&gt; EQUAL N}" appliesto="" id="1657715523">
												<parameter type="" name="PolicyDwellingSyntheticStuccoYN" value="N" maxlength="" id="372264509">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingRoofMaterialCategory" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;,&lt;=this.getvariable(map_roof)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="">
											</parameter>
											<condition name="If roofing type is notequal not updated" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="" id="1656390385">
												<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="2076658982">
												</parameter>
												<parameter type="text" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;" maxlength="4" id="1545470283">
												</parameter>
											</condition>
											<elsecondition id="574996612">
												<parameter type="" name="PolicyDwellingRoofingRenovationType" value="N" maxlength="" id="1289301077">
												</parameter>
											</elsecondition>
											<condition name="Wiring Renovation" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="" id="1487222415">
												<parameter type="" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="1709427155">
												</parameter>
												<parameter type="text" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="4" id="681865391">
												</parameter>
											</condition>
											<elsecondition id="294934159">
												<parameter type="" name="PolicyDwellingWiringRenovationType" value="N" maxlength="" id="638657908">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingLocationState" value="TN" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingrCountyCode" value="125" maxlength="">
											</parameter>
											<condition name="Sprinkler present" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; EQUALGREATER 1}" appliesto="" id="655094506">
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="" id="626121060">
												</parameter>
											</condition>
											<condition name="Sprinklet not present" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; EQUAL 0}" appliesto="" id="1482440778">
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="" maxlength="" id="631674193">
												</parameter>
											</condition>
											<parameter type="" name="PolicyEffectiveDate" value="&lt;=this.getvariable(coverage_effective)&gt;" maxlength="">
											</parameter>
										</condition>
										<condition name="State is AZ-CO-NM-WY-IL-MN-ID-CT-UT-OK-NY-LA-WI-PA-AL-MT-KS-MO-VA-MD-IA-MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="">
											<condition name="State is Not" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AZ}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OK}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MN}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NM}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL VA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL AL}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WI}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL UT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL LA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL PA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MT}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL KS}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL ID}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}" appliesto="AL -AZ -CO -CT -ID -IL -KS -LA -MD -MN -MO -MT -NM -NY -OK -PA -UT -VA -WI -WY -">
												<parameter type="hidden" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!8|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!8|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="">
												</parameter>
											</condition>
											<condition name="State is" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}" appliesto="AZ -">
												<condition name="If territory is present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="">
													<parameter type="hidden" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!8|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!8|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!8
|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|" maxlength="" id="1847142504">
													</parameter>
												</condition>
												<elsecondition>
													<parameter type="hidden" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!8|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!8
|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|" maxlength="" id="2116199349">
													</parameter>
												</elsecondition>
											</condition>
											<condition name="State is MD - Field List, Territory Code, Distance from Fire Hydrant and Fire Department" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}" appliesto="">
												<condition name="If Heating Type is Other" expression="{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; EQUAL Other}" appliesto="">
													<parameter type="hidden" name="PolicyDwellingHeatingSystemDesc" value="Other" maxlength="" id="1652061814">
													</parameter>
													<parameter type="" name="PolicyDwellingTerritory" value="037" maxlength="" id="1648053482">
													</parameter>
													<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="1897536302">
													</parameter>
												</condition>
												<condition name="If territory is present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="">
													<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="17396685659">
													</parameter>
													<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="15119927129">
													</parameter>
												</condition>
												<condition name="If territory is not present and the heating type is not other" expression="{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; NOTEQUAL Other}
AND
{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; NOTEQUAL true}" appliesto="">
													<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="579595031">
													</parameter>
												</condition>
												<elseifcondition name="If territory is present MD" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}
AND
{1 EQUAL 0}" appliesto="">
													<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="130218696">
													</parameter>
													<parameter type="" name="PolicyDwellingTerritory" value="037" maxlength="" id="788528521">
													</parameter>
												</elseifcondition>
												<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=1000|501-600=1000|601-1000=1000|1001 and Greater=1001|None=1000)&gt;" maxlength="" id="492100668">
												</parameter>
												<parameter type="" name="PolicyDwellingMilesToFireDept" value="&lt;=this.getvariable(dwellinginfo_distancetofirestation)&gt;" maxlength="" id="1992999976">
												</parameter>
												<condition name="If county field present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingLocationCounty, select)&gt; EQUAL true}" appliesto="" id="349763656">
													<condition name="AltDwelling Address Exists" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="" id="1073805200">
														<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="1009982352">
														</parameter>
													</condition>
													<condition name="AltDwelling Address Does Not Exist" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 0}" appliesto="" id="2103948547">
														<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="1810985878">
														</parameter>
													</condition>
												</condition>
											</condition>
											<condition name="State is IA-MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="">
												<condition name="State MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="">
													<condition name="If territory is present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="">
														<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="1739668565">
														</parameter>
														<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="1511992712">
														</parameter>
													</condition>
													<elsecondition>
													</elsecondition>
												</condition>
												<elsecondition>
													<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="">
													</parameter>
												</elsecondition>
												<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
													<parameter type="" name="PolicyDwellingLocationCounty" value="Adams" maxlength="" id="813991439">
													</parameter>
													<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="649761321">
													</parameter>
													<parameter type="text" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;" maxlength="4" id="1503261407">
													</parameter>
												</condition>
												<parameter type="" name="PolicyDwellingConstructionStyle" value="&lt;=this.getvariable(ConstructionStyle)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingRoofs1ID" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roof)&gt;)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingHeatingSystems1ID" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_heatingtype)&gt;, &lt;=this.getvariable(map_heatingtype)&gt;)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingFoundations1ID" value="&lt;=this.getvariable(FoundationType)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingNumberOfBathsFull" value="&lt;=this.getvariable(NumberofBathsFull)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingNumberOfBathsThreeQuarter" value="&lt;=this.getvariable(NumberofBathsThreeQuarter)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingNumberOfBathsHalf" value="&lt;=this.getvariable(NumberofBathsHalfBaths)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, &lt;=this.getvariable(map_roofupdate)&gt;)&gt;" maxlength="" id="878826571">
												</parameter>
												<condition name="State is MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="">
													<parameter type="" name="PolicyDwellingLocationState" value="MI" maxlength="">
													</parameter>
												</condition>
												<elsecondition>
													<parameter type="" name="PolicyDwellingLocationState" value="IA" maxlength="" id="1290366720">
													</parameter>
												</elsecondition>
												<parameter type="" name="PolicyDwellingrCountyCode" value="" maxlength="">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<condition name="State is NOT MD" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NH}" appliesto="NH -">
												<condition name="If county field present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingLocationCounty, select)&gt; EQUAL true}" appliesto="" id="1593891868">
													<condition name="AltDwelling Address Exists" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="" id="1597993647">
														<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=this.getvariable(dwellingcounty)&gt;" maxlength="" id="23524762">
														</parameter>
													</condition>
													<condition name="AltDwelling Address Does Not Exist" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 0}" appliesto="" id="824176743">
														<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=this.getvariable(applicant_county)&gt;" maxlength="" id="419769102">
														</parameter>
													</condition>
												</condition>
											</condition>
											<condition name="State is AZ" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}}
AND
{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="OK -">
												<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="387380123">
												</parameter>
											</condition>
											<condition name="State is Not MD" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NH}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}}" appliesto="NH -">
												<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, &lt;=this.getvariable(map_roofupdate)&gt;)&gt;" maxlength="">
												</parameter>
											</condition>
											<condition name="State is MD - Fire Protection District &amp; Roof Material Category" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}" appliesto="NH -">
												<parameter type="text" name="PolicyDwellingFireProtectionDistrict" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="30" id="1086387455">
												</parameter>
												<parameter type="" name="PolicyDwellingRoofMaterialCategory" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roof)&gt;)&gt;" maxlength="" id="1182004593">
												</parameter>
												<condition name="If roofing type is notequal not updated" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="" id="757881755">
													<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="878353553">
													</parameter>
													<parameter type="text" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;" maxlength="4" id="1902889486">
													</parameter>
												</condition>
												<elsecondition>
													<parameter type="" name="PolicyDwellingRoofingRenovationType" value="N" maxlength="" id="1326234859">
													</parameter>
												</elsecondition>
												<condition name="State is MD-Wiring Renovation" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="" id="1159049389">
													<parameter type="" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="1960046455">
													</parameter>
													<parameter type="text" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="4" id="359834114">
													</parameter>
												</condition>
												<elsecondition>
													<parameter type="" name="PolicyDwellingWiringRenovationType" value="N" maxlength="" id="929768209">
													</parameter>
												</elsecondition>
											</condition>
											<condition name="State is MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}" appliesto="">
												<parameter type="hidden" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!8|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!8|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!999|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!1|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="" id="2020217029">
												</parameter>
												<parameter type="text" name="PolicyDwellingFireProtectionDistrictCode" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="30">
												</parameter>
											</condition>
											<condition name="State is Not MO AND MD" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}" id="121434528" appliesto="">
												<parameter type="text" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="30" id="2021615908">
												</parameter>
											</condition>
											<condition name="State is WI-PA-AL-MT-KS-MO-AZ-NY-IL-VA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}" id="1582227876" appliesto="ID -">
												<parameter type="" name="PolicyDwellingRoofMaterialCategory" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roof)&gt;)&gt;" maxlength="" id="63608395">
												</parameter>
											</condition>
											<condition name="State is LA-VA and not within city limits" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL No}" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="S" maxlength="">
												</parameter>
											</condition>
											<condition name="State is LA-VA and within city limits" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL Yes}" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="C" maxlength="">
												</parameter>
											</condition>
											<condition name="State is AL and not within city limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL No}" id="695841103" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="S" maxlength="" id="1388702080">
												</parameter>
											</condition>
											<condition name="State is AL and within city limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL Yes}" id="2124684879" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="C" maxlength="" id="820725630">
												</parameter>
											</condition>
											<condition name="Constructed after 1985" expression="{{&lt;=this.minusinteger(&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;, 1985)&gt; GREATER 0}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IA}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}" appliesto="">
												<parameter type="radio" name="PolicyDwellingSyntheticStuccoYN" value="&lt;=this.getvariable(stucco)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingSyntheticStuccoVerificationType" value="A" maxlength="">
												</parameter>
											</condition>
										</condition>
										<condition name="State is Texas" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!14|Policy.Dwelling.ProtectionClass!999|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!8|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!8|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!1|Policy.Dwelling.TXRespFireCounty!1|Policy.Dwelling.FireProtectionDistrict!999|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!999|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!2|Policy.Dwelling.BurglarAlarmAgent!1|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!8|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!5|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!1|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=1000|501-600=1000|601-1000=1000|1001 and Greater=1001|None=1000)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMilesToFireDept" value="&lt;=this.getvariable(dwellinginfo_distancetofirestation)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationWithinCityYN" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt;, Yes=Y|No=N)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="D" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingNumberOfFamilies" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingTXRespFireCity" value="&lt;=this.getvariable(applicant_city)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingTXRespFireCounty" value="&lt;=this.getvariable(applicant_county)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingBurglarAlarmDate" value="&lt;=this.formatdate(today, MMddyyyy)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingBurglarAlarmAgent" value="Test" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingBurglarAlarmName" value="Unknown" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingHailCreditClass" value="&lt;=this.getvariable(hailcredit)&gt;" maxlength="">
											</parameter>
											<condition name="Monitored Alarm" expression="{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Central}
OR
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Direct}" appliesto="">
												<parameter type="" name="PolicyDwellingHomeSecurityCrYN" value="Y" maxlength="">
												</parameter>
											</condition>
											<condition name="Constructed after 1985" expression="{&lt;=this.minusinteger(&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;, 1985)&gt; GREATER 0}" appliesto="">
												<parameter type="radio" name="PolicyDwellingSyntheticStuccoYN" value="&lt;=this.getvariable(stucco)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingSyntheticStuccoVerificationType" value="A" maxlength="">
												</parameter>
											</condition>
										</condition>
										<condition name="State is California" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
											<condition name="Territory Code" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="CA -">
												<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="387380755">
												</parameter>
											</condition>
											<condition name="Territory is Present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="">
												<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!14|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!999|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="196312568">
												</parameter>
											</condition>
											<elsecondition>
												<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!14|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!8|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!999|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="">
												</parameter>
											</elsecondition>
											<condition name="If county field present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingLocationCounty, select)&gt; EQUAL true}" appliesto="" id="522416331">
												<condition name="AltDwelling Address Exists" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="" id="504956031">
													<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=this.getvariable(dwellingcounty)&gt;" maxlength="" id="1068206801">
													</parameter>
												</condition>
												<condition name="AltDwelling Address Does Not Exist" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 0}" appliesto="" id="376146680">
													<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=this.getvariable(applicant_county)&gt;" maxlength="" id="209516585">
													</parameter>
												</condition>
											</condition>
											<condition name="Constructed before 1973" expression="{&lt;=this.minusinteger(&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;, 1972)&gt; EQUALLESSER 0}" appliesto="">
												<parameter type="" name="PolicyDwellingEarthquakeFittedYN" value="&lt;=this.getvariable(eqfitted)&gt;" maxlength="">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingRoofMaterialCategory" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roof)&gt;)&gt;" maxlength="" id="125997101">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, &lt;=this.getvariable(map_roofupdate)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<condition name="Sprinkler present" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; EQUALGREATER 1}" appliesto="">
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
												</parameter>
											</condition>
											<condition name="Sprinklet not present" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; EQUAL 0}" appliesto="">
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="0" maxlength="">
												</parameter>
											</condition>
											<condition name="Constructed after 1985" expression="{&lt;=this.minusinteger(&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;, 1985)&gt; GREATER 0}" appliesto="">
												<parameter type="radio" name="PolicyDwellingSyntheticStuccoYN" value="&lt;=this.getvariable(stucco)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingSyntheticStuccoVerificationType" value="A" maxlength="">
												</parameter>
											</condition>
										</condition>
										<condition name="State is WA-OR" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!8|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, &lt;=this.getvariable(map_roofupdate)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<condition name="Constructed after 1985" expression="{&lt;=this.minusinteger(&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;, 1985)&gt; GREATER 0}" appliesto="">
												<parameter type="radio" name="PolicyDwellingSyntheticStuccoYN" value="&lt;=this.getvariable(stucco)&gt;" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingSyntheticStuccoVerificationType" value="A" maxlength="">
												</parameter>
											</condition>
										</condition>
										<condition name="Carrier Changes is HO3" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}}" appliesto="AL -AR -AZ -CA -CO -CT -ID -IL -IN -KS -KY -LA -MD -MN -MT -NC -NH -NM -NV -NY -OH -OK -PA -TN -TX -VA -WA -WI -WY -" id="998943116">
											<parameter type="" name="PolicyDwellingNumberOfBathsFull" value="&lt;=this.getvariable(coverage_NumberOfBathsFull)&gt;" maxlength="" id="800462459">
											</parameter>
											<parameter type="" name="PolicyDwellingFoundations1ID" value="&lt;=this.getvariable(coverage_Foundations)&gt;" maxlength="" id="1785251013">
											</parameter>
											<condition name="State is Electric" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}" appliesto="IL -MN -">
												<condition name="newcondition" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="">
													<parameter type="" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="" id="669335999">
													</parameter>
												</condition>
												<parameter type="" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, NOT UPDATED=N|PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="1011097861">
												</parameter>
												<condition name="State is MN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}" appliesto="">
													<parameter type="" name="PolicyDwellingPlumbingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_plumbingupdate)&gt;, NOT UPDATED=N|PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="140161662">
													</parameter>
													<condition name="Wiring Update" expression="{&lt;=this.getvariable(dwellinginfo_plumbingupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_plumbingupdate)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="">
														<parameter type="" name="PolicyDwellingPlumbingRenovationYear" value="&lt;=this.getvariable(dwellinginfo_plumbingupdateyear)&gt;" maxlength="" id="602063019">
														</parameter>
													</condition>
												</condition>
											</condition>
											<condition name="State is IL" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}}" appliesto="CO -CT -ID -MN -MT -NM -NY -PA -WY -">
												<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="641406902">
												</parameter>
											</condition>
											<condition name="Filed List with wiring and Electric Update - State is" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}" appliesto="MN -">
												<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!8|Policy.Dwelling.PlumbingRenovationYear!7|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="379267731">
												</parameter>
											</condition>
											<condition name="State is VA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}" appliesto="LA -">
												<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="951877090">
												</parameter>
											</condition>
											<condition name="State is" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}" appliesto="AL -WI -">
												<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="2073963476">
												</parameter>
											</condition>
											<condition name="State is" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}" appliesto="KS -">
												<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!5|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="133165943">
												</parameter>
											</condition>
											<condition name="State is" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}" appliesto="AL -AR -AZ -CA -CO -CT -ID -IL -IN -KS -KY -LA -MD -MN -MO -MT -NC -NH -NM -NV -NY -OH -OK -OR -PA -TN -TX -UT -VA -WA -WI -WY -">
												<parameter type="" name="PolicyDwellingConstructionStyle" value="&lt;=this.getvariable(constructionid)&gt;" maxlength="" id="1098042299">
												</parameter>
												<parameter type="" name="PolicyDwellingHeatingSystems1ID" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_heatingtype)&gt;, &lt;=this.getvariable(map_heatingtypeid)&gt;)&gt;" maxlength="" id="876839804">
												</parameter>
												<parameter type="" name="PolicyDwellingRoofs1ID" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roofid)&gt;)&gt;" maxlength="" id="25798375">
												</parameter>
											</condition>
										</condition>
										<condition name="State is GA-AR-OH-IN-NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
											<condition name="State is GA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}" appliesto="">
												<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!999
|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|" maxlength="">
												</parameter>
												<condition name="Policy Type is HO3" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
													<parameter type="" name="PolicyDwellingNumberOfBathsFull" value="&lt;=this.getvariable(coverage_NumberOfBathsFull)&gt;" maxlength="" id="1192507135">
													</parameter>
													<parameter type="" name="PolicyDwellingHeatingSystems1ID" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_heatingtype)&gt;, &lt;=this.getvariable(map_heatingtypeid)&gt;)&gt;" maxlength="" id="557943771">
													</parameter>
													<parameter type="" name="PolicyDwellingConstructionStyle" value="&lt;=this.getvariable(constructionid)&gt;" maxlength="" id="1392870642">
													</parameter>
													<parameter type="" name="PolicyDwellingFoundations1ID" value="&lt;=this.getvariable(coverage_Foundations)&gt;" maxlength="" id="703636452">
													</parameter>
													<parameter type="" name="PolicyDwellingRoofs1ID" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roofid)&gt;)&gt;" maxlength="" id="1760603835">
													</parameter>
												</condition>
											</condition>
											<condition name="State is AR" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}" appliesto="">
												<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!1|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<condition name="State Is OH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}" appliesto="">
												<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!8|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="">
												</parameter>
												<condition name="If county field present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingLocationCounty, select)&gt; EQUAL true}" appliesto="">
													<condition name="AltDwelling Address Exists" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="">
														<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=this.getvariable(dwellingcounty)&gt;" maxlength="" id="565239844">
														</parameter>
													</condition>
													<condition name="AltDwelling Address Does Not Exist" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 0}" appliesto="">
														<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=this.getvariable(applicant_county)&gt;" maxlength="" id="446156064">
														</parameter>
													</condition>
												</condition>
											</condition>
											<condition name="State Is IN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}" appliesto="">
												<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!8|Policy.Dwelling.SyntheticStuccoYN!8|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!8|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!5|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="">
												</parameter>
											</condition>
											<condition name="State Is NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
												<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!1|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="">
												</parameter>
												<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="">
												</parameter>
											</condition>
											<condition name="State Not OH-IN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OH}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IN}
" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="&lt;=this.getvariable(suburb)&gt;" maxlength="">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, &lt;=this.getvariable(map_roofupdate)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="">
											</parameter>
											<condition name="State Not NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NC}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IA}" appliesto="">
												<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
												</parameter>
											</condition>
											<condition name="Constructed after 1985" expression="{&lt;=this.minusinteger(&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;, 1985)&gt; GREATER 0}" appliesto="">
												<parameter type="radio" name="PolicyDwellingSyntheticStuccoYN" value="&lt;=this.getvariable(stucco)&gt;" maxlength="">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingRoofMaterialCategory" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roof)&gt;)&gt;" maxlength="">
											</parameter>
										</condition>
										<condition name="State Is NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
AND
{&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt; NOTEQUAL NOT UPDATED}
" appliesto="">
											<parameter type="text" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;" maxlength="4">
											</parameter>
											<parameter type="text" name="PolicyDwellingWiringRenovationType" value="N" maxlength="4" id="282598574">
											</parameter>
										</condition>
										<condition name="State is TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
											<parameter type="" name="PolicyDwellingRoofMaterialCategory" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roof)&gt;)&gt;" maxlength="" id="1970594249">
											</parameter>
											<condition name="If roofing type is notequal not updated" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="">
												<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="1523414705">
												</parameter>
												<parameter type="text" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;" maxlength="4">
												</parameter>
											</condition>
											<condition name="State is TX" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="">
												<parameter type="" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="1305301206">
												</parameter>
												<parameter type="text" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="4" id="1292250365">
												</parameter>
											</condition>
											<elsecondition>
												<parameter type="" name="PolicyDwellingWiringRenovationType" value="N" maxlength="" id="993791694">
												</parameter>
											</elsecondition>
										</condition>
										<condition name="Year built equal Roof year and State is AZ-CA-CO-NV-WA-OR-NM-GA-KY-IL-MN-ID-CT-UT-OK-NY-LA-AR-WI-OH-PA-AL-KS-IN-MO" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt; EQUAL &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;} AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}}" appliesto="KS -">
											<condition name="State is OK and Year Built is Current Year" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
AND
{&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt; EQUAL &lt;=java.formatdate(&lt;=this.getvariable(today)&gt;,yyyy)&gt;}" appliesto="">
												<parameter type="text" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;" maxlength="4">
												</parameter>
											</condition>
											<condition name="State is NOT OK" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL OK}" appliesto="">
												<parameter type="text" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.addinteger(&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;, 1)&gt;" maxlength="4">
												</parameter>
											</condition>
										</condition>
										<condition name="Year built not equal roof year and State is AZ-CA-CO-NV-WA-OR-NM-GA-KY-IL-MN-ID-CT-UT-OK-NY-LA-AR-WI-OH-PA-AL-IN-MO-VA" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt; NOTEQUAL &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;} AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}}" appliesto="KS -">
											<parameter type="text" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;" maxlength="4">
											</parameter>
										</condition>
										<condition name="State is" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}" appliesto="NY -">
											<parameter type="" name="PolicyDwellingHeatingSystemType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_heatingtype)&gt;, &lt;=this.getvariable(map_heatingtypeid)&gt;)&gt;" maxlength="" id="1705604996">
											</parameter>
										</condition>
										<condition name="State is Not" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NY}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL WY}" appliesto="NY -TX -WY -">
											<parameter type="" name="PolicyDwellingHeatingSystemType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_heatingtype)&gt;, &lt;=this.getvariable(map_heatingtype)&gt;)&gt;" maxlength="">
											</parameter>
										</condition>
										<condition name="PA-AL-MOHeating Type-Other" expression="{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; EQUAL Other}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}}" appliesto="">
											<parameter type="" name="PolicyDwellingHeatingSystemDesc" value="Other" maxlength="">
											</parameter>
										</condition>
										<condition name="State is AR-OH-NC-IN-WI" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}}
AND
{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; EQUAL Other}" appliesto="">
											<parameter type="" name="PolicyDwellingHeatingSystemDesc" value="Other" maxlength="">
											</parameter>
										</condition>
										<condition name="State is GA-AZ" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="AL -AR -AZ -CA -CO -CT -GA -ID -IL -IN -KS -KY -LA -MD -MN -MO -MT -NC -NH -NM -NV -NY -OH -OK -OR -PA -TN -TX -UT -VA -WA -WI -WY -">
											<condition name="Exterior Walls present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingExteriorWalls1ID, select)&gt; EQUAL true}" appliesto="">
												<condition name="State is GA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA}" appliesto="">
													<parameter type="" name="PolicyDwellingExteriorWalls1ID" value="&lt;=this.getvariable(PolicyDwellingExteriorWalls1ID)&gt;" maxlength="" id="1207246874">
													</parameter>
												</condition>
												<condition name="State is Not GA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL GA}" appliesto="">
													<parameter type="" name="PolicyDwellingExteriorWalls1ID" value="&lt;=this.getvariable(exteriorwalls)&gt;" maxlength="" id="2029033522">
													</parameter>
												</condition>
											</condition>
										</condition>
										<condition name="State is" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}" appliesto="NH -" id="301461228">
											<condition name="Quality Crest Home" expression="{&lt;=this.getvariable(policytype_ca)&gt; EQUAL Quality Crest Home}" appliesto="">
												<condition name="Heating Type Not equal Other" expression="{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; NOTEQUAL Other}" appliesto="" id="619735745">
													<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="1051858517">
													</parameter>
												</condition>
												<condition name="Heating Type is Other" expression="{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; EQUAL Other}" appliesto="" id="437555159">
													<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!1|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="" id="419263609">
													</parameter>
													<parameter type="hidden" name="PolicyDwellingHeatingSystemDesc" value="Other" maxlength="" id="267857727">
													</parameter>
												</condition>
												<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwellingcrest)&gt;)&gt;" maxlength="" id="1815133863">
												</parameter>
											</condition>
											<elsecondition>
												<condition name="If Heating Type is Other" expression="{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; EQUAL Other}" appliesto="" id="734251184">
													<parameter type="hidden" name="PolicyDwellingHeatingSystemDesc" value="Other" maxlength="" id="861274873">
													</parameter>
													<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="145744853">
													</parameter>
												</condition>
												<condition name="If territory is present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="" id="2015986602">
													<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="2082965666">
													</parameter>
													<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.ExteriorWalls(1).ID!8|" maxlength="" id="1972029220">
													</parameter>
												</condition>
												<condition name="If territory is not present and the heating type is not other" expression="{&lt;=this.getvariable(dwellinginfo_heatingtype)&gt; NOTEQUAL Other}
AND
{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; NOTEQUAL true}" appliesto="" id="1588044258">
													<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!8|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!999|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!8|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!8|Policy.Dwelling.Foundations(1).ID!8|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!8|Policy.Dwelling.NumberOfBathsThreeQuarter!8|Policy.Dwelling.NumberOfBathsHalf!8|" maxlength="" id="1406215254">
													</parameter>
												</condition>
												<condition name="If county field present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingLocationCounty, select)&gt; EQUAL true}" appliesto="" id="992359760">
													<condition name="AltDwelling Address Exists" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="" id="1922466181">
														<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="1590041397">
														</parameter>
													</condition>
													<condition name="AltDwelling Address Does Not Exist" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 0}" appliesto="" id="1658403079">
														<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="1197341592">
														</parameter>
													</condition>
												</condition>
												<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwelling)&gt;, &lt;=this.getvariable(map_dwelling)&gt;)&gt;" maxlength="" id="1070942059">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingRoofMaterialCategory" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roof)&gt;, &lt;=this.getvariable(map_roof)&gt;)&gt;" maxlength="" id="1884424434">
											</parameter>
											<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, NOT UPDATED=N|PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="2123174850">
											</parameter>
											<condition name="Year built not equal roof year and Roofing is NotUpdated" expression="{&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt; NOTEQUAL &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}
AND
{&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt; NOTEQUAL NOT UPDATED}" appliesto="" id="121835736">
												<parameter type="text" name="PolicyDwellingRoofingRenovationYear" value="&lt;=this.getvariable(dwellinginfo_roofingupdateyear)&gt;" maxlength="4" id="1926537220">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, NOT UPDATED=N|PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="677979241">
											</parameter>
											<condition name="If Wiring update is not equal NOT UPDATED and year is greater than construction year" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="">
												<parameter type="text" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="4" id="2124300276">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="" id="1946146385">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_protectionclass)&gt;, &lt;=this.getvariable(mapprotectionclass)&gt;)&gt;" maxlength="" id="1114887974">
											</parameter>
											<condition name="Constructed after 1985" expression="{&lt;=this.minusinteger(&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;, 1985)&gt; GREATER 0}" appliesto="" id="289573853">
												<parameter type="radio" name="PolicyDwellingSyntheticStuccoYN" value="&lt;=this.getvariable(stucco)&gt;" maxlength="" id="1584742817">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="" id="1744942130">
											</parameter>
										</condition>
										<parameter type="" name="PolicyDwellingNumberOfStories" value="&lt;=this.getvariable(numstories)&gt;" maxlength="" id="287624360">
										</parameter>
										<parameter type="text" name="PolicyDwellingLivingAreaSqFeetTotal" value="&lt;=this.getvariable(dwellinginfo_squarefootage)&gt;" maxlength="6">
										</parameter>
										<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
										</parameter>
										<parameter type="radio" name="PolicyDwellingBypassCostGuideYN" value="Y" maxlength="">
										</parameter>
									</condition>
									<condition name="Form is HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="">
										<condition name="State Is OH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}" appliesto="">
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, &lt;=this.getvariable(map_roofupdate)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationState" value="&lt;=this.getvariable(dwellingstatecode)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingrCountyCode" value="031" maxlength="">
											</parameter>
											<parameter type="" name="PolicyEffectiveDate" value="&lt;=this.getvariable(coverage_effective)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="">
											</parameter>
										</condition>
										<condition name="State is MD - Field List, Territory Code, Distance from Fire Hydrant and Fire Department" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}" id="906490726" appliesto="">
											<condition name="If territory is present MD" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="" id="459716140">
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="97808904">
												</parameter>
												<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="1351389683">
												</parameter>
											</condition>
											<elsecondition>
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!8|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="1744756011">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=1000|501-600=1000|601-1000=1000|1001 and Greater=1001|None=1000)&gt;" maxlength="" id="1950373658">
											</parameter>
											<parameter type="" name="PolicyDwellingMilesToFireDept" value="&lt;=this.getvariable(dwellinginfo_distancetofirestation)&gt;" maxlength="" id="1450673130">
											</parameter>
											<condition name="If county field present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingLocationCounty, select)&gt; EQUAL true}" appliesto="" id="1792626588">
												<condition name="AltDwelling Address Exists" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="" id="1731313400">
													<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="1400597015">
													</parameter>
												</condition>
												<condition name="AltDwelling Address Does Not Exist" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 0}" appliesto="" id="622113982">
													<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="661117544">
													</parameter>
												</condition>
											</condition>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="" id="1257055043">
											</parameter>
											<parameter type="text" name="PolicyDwellingFireProtectionDistrict" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="30" id="1310499312">
											</parameter>
											<condition name="Wiring Renovation - Policy HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="">
												<parameter type="text" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, NOT UPDATED=N|PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="30" id="1225750444">
												</parameter>
											</condition>
											<condition name="If Wiring update is not equal NOT UPDATED and year is greater than construction year" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="" id="450616252">
												<parameter type="text" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="4" id="433725894">
												</parameter>
											</condition>
										</condition>
										<condition name="State is AZ-CO-CA-WA-OR-NM-WY-IL-MN-ID-CT-UT-OK-NY-LA-WI-PA-AL-MT-KS-MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}" appliesto="">
											<condition name="State is Not MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}" appliesto="">
												<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<condition name="State is MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}" appliesto="">
												<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!999|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!1|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="" id="1987095607">
												</parameter>
												<parameter type="text" name="PolicyDwellingFireProtectionDistrictCode" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="30">
												</parameter>
											</condition>
											<condition name="State is Not MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}" id="1025780879" appliesto="">
												<parameter type="text" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="30" id="750676514">
												</parameter>
											</condition>
											<condition name="State is TN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}" appliesto="">
												<parameter type="text" name="PolicyDwellingFireProtectionDistrict" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="30" id="1531834854">
												</parameter>
											</condition>
											<condition name="State is LA and not within city limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL No}" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="S" maxlength="">
												</parameter>
											</condition>
											<condition name="State is LA and within city limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL Yes}" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="C" maxlength="">
												</parameter>
											</condition>
											<condition name="State is AL and not within city limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL No}" id="520799018" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="S" maxlength="" id="1686274065">
												</parameter>
											</condition>
											<condition name="State is AL and within city limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL Yes}" id="36228922" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="C" maxlength="" id="1481131989">
												</parameter>
											</condition>
										</condition>
										<condition name="State is TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!14|Policy.Dwelling.ProtectionClass!999|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!1|Policy.Dwelling.TXRespFireCounty!1|Policy.Dwelling.FireProtectionDistrict!999|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!999|Policy.Dwelling.PPIdCrYN!5|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!5|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!2|Policy.Dwelling.BurglarAlarmAgent!1|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!5|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!1|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=T|501-600=T|601-1000=T|1001 and Greater=OT|None=OT)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMilesToFireDept" value="&lt;=this.getvariable(dwellinginfo_distancetofirestation)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationWithinCityYN" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt;, Yes=Y|No=N)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingTXRespFireCity" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingTXRespFireCounty" value="" maxlength="">
											</parameter>
											<condition name="Sprinkler Credit" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; GREATER 0}" appliesto="">
												<parameter type="" name="PolicyDwellingTXSprinklerYN" value="Y" maxlength="">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingBurglarAlarmDate" value="&lt;=this.formatdate(today, MMddyyyy)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingBurglarAlarmAgent" value="Test" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingBurglarAlarmName" value="Unknown" maxlength="">
											</parameter>
											<condition name="Monitored Alarm" expression="{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Central}
OR
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Direct}" appliesto="">
												<parameter type="" name="PolicyDwellingHomeSecurityCrYN" value="Y" maxlength="">
												</parameter>
											</condition>
										</condition>
										<condition name="State is NV" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
										</condition>
										<condition name="State is GA-AR-VA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="&lt;=this.getvariable(suburb)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
										</condition>
										<condition name="State is KY" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
										</condition>
										<condition name="State is Not" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}" appliesto="CA -">
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_structure)&gt;, Dwelling=T|Apartment=T|Condo=T|Townhouse=T|Rowhouse=R|Coop=T)&gt;" maxlength="">
											</parameter>
										</condition>
										<condition name="State is CA-MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="">
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_structure)&gt;, &lt;=this.getvariable(map_structureho4)&gt;)&gt;" maxlength="" id="1403579649">
											</parameter>
										</condition>
										<condition name="State Is NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationState" value="&lt;=this.getvariable(dwellingstatecode)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingrCountyCode" value="125" maxlength="">
											</parameter>
											<parameter type="" name="PolicyEffectiveDate" value="&lt;=this.getvariable(coverage_effective)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="&lt;=this.getvariable(suburb)&gt;" maxlength="">
											</parameter>
										</condition>
										<condition name="State Is IN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}" appliesto="">
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingRoofingRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_roofingupdate)&gt;, &lt;=this.getvariable(map_roofupdate)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationState" value="&lt;=this.getvariable(dwellingstatecode)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingrCountyCode" value="097" maxlength="">
											</parameter>
											<parameter type="" name="PolicyEffectiveDate" value="&lt;=this.getvariable(coverage_effective)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="">
											</parameter>
										</condition>
										<condition name="State is MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="" id="1147514621">
											<condition name="If territory is present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="" id="1251663735">
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="1494607316">
												</parameter>
												<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="1001510746">
												</parameter>
											</condition>
											<elsecondition id="2016651898">
												<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!999|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!8|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="1104976780">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_protectionclass)&gt;, &lt;=this.getvariable(mapprotectionclass)&gt;)&gt;" maxlength="" id="688435348">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationCounty" value="Adams" maxlength="" id="606954632">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="" id="178200029">
											</parameter>
											<parameter type="" name="PolicyDwellingrCountyCode" value="" maxlength="" id="524157829">
											</parameter>
											<parameter type="" name="PolicyDwellingConstructionType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_construction)&gt;, &lt;=this.getvariable(map_construction)&gt;)&gt;" maxlength="" id="281828922">
											</parameter>
										</condition>
										<condition name="State is NH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}" id="1018067964" appliesto="">
											<condition name="If territory is present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="" id="1134289408">
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="1739740173">
												</parameter>
												<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="1897893393">
												</parameter>
											</condition>
											<elsecondition id="610365878">
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="2133691139">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=1000|501-600=1000|601-1000=1000|1001 and Greater=1001|None=1000)&gt;" maxlength="" id="1011801876">
											</parameter>
											<parameter type="" name="PolicyDwellingMilesToFireDept" value="&lt;=this.getvariable(dwellinginfo_distancetofirestation)&gt;" maxlength="" id="280789791">
											</parameter>
											<condition name="If county field present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingLocationCounty, select)&gt; EQUAL true}" appliesto="" id="1845568816">
												<condition name="AltDwelling Address Exists" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="" id="137007707">
													<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="1770605704">
													</parameter>
												</condition>
												<condition name="AltDwelling Address Does Not Exist" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 0}" appliesto="" id="1297199926">
													<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="1102495426">
													</parameter>
												</condition>
											</condition>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="" id="411076333">
											</parameter>
											<parameter type="text" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="30" id="1505747720">
											</parameter>
											<condition name="Wiring Renovation - Policy HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="" id="307271449">
												<parameter type="text" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, NOT UPDATED=N|PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="30" id="1520573900">
												</parameter>
											</condition>
											<condition name="If Wiring update is not equal NOT UPDATED and year is greater than construction year" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="" id="2129043564">
												<parameter type="text" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="4" id="862646818">
												</parameter>
											</condition>
										</condition>
										<condition name="State is IA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}" appliesto="">
											<condition name="If territory is present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="" id="1191598186">
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!999|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="1709370865">
												</parameter>
												<parameter type="" name="PolicyDwellingTerritory" value="32" maxlength="" id="1434629599">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_protectionclass)&gt;, &lt;=this.getvariable(mapprotectionclass)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationCounty" value="Adams" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingrCountyCode" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingConstructionType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_construction)&gt;, &lt;=this.getvariable(map_construction)&gt;)&gt;" maxlength="">
											</parameter>
										</condition>
									</condition>
									<condition name="Form is HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="">
										<condition name="State Is OH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OH}" appliesto="">
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationState" value="OH" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingrCountyCode" value="031" maxlength="">
											</parameter>
											<parameter type="" name="PolicyEffectiveDate" value="&lt;=this.getvariable(coverage_effective)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="">
											</parameter>
										</condition>
										<condition name="State is Texas" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!14|Policy.Dwelling.ProtectionClass!999|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!1|Policy.Dwelling.TXRespFireCounty!1|Policy.Dwelling.FireProtectionDistrict!999|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!999|Policy.Dwelling.PPIdCrYN!5|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!5|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!2|Policy.Dwelling.BurglarAlarmAgent!1|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!5|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!1|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=T|501-600=T|601-1000=T|1001 and Greater=OT|None=OT)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMilesToFireDept" value="&lt;=this.getvariable(dwellinginfo_distancetofirestation)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationWithinCityYN" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt;, Yes=Y|No=N)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingTXRespFireCity" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingTXRespFireCounty" value="" maxlength="">
											</parameter>
											<condition name="Sprinkler Credit" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; GREATER 0}" appliesto="">
												<parameter type="" name="PolicyDwellingTXSprinklerYN" value="Y" maxlength="">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingBurglarAlarmDate" value="&lt;=this.formatdate(today, MMddyyyy)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingBurglarAlarmAgent" value="Test" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingBurglarAlarmName" value="Unknown" maxlength="">
											</parameter>
											<condition name="Monitored Alarm" expression="{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Central}
OR
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Direct}" appliesto="">
												<parameter type="" name="PolicyDwellingHomeSecurityCrYN" value="Y" maxlength="">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
										</condition>
										<condition name="State is AZ-CO-CA-NM-WY-IL-MN-ID-CT-UT-OK-NY-LA-WI-AL-MT-KS-MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AZ} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CO} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NM} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MN} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL ID} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL UT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OK} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NY} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WI} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MT} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KS} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}" appliesto="">
											<condition name="State is Not MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}" appliesto="">
												<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!8|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="">
												</parameter>
											</condition>
											<condition name="Sprinkler present or Not CA" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; EQUALGREATER 1}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}" appliesto="">
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
												</parameter>
											</condition>
											<condition name="Sprinkler not present- CA" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; EQUAL 0}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="0" maxlength="" id="1107570498">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<condition name="State is MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MO}" appliesto="">
												<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!999|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!1|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!8|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="" id="208117800">
												</parameter>
												<parameter type="text" name="PolicyDwellingFireProtectionDistrictCode" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="30">
												</parameter>
											</condition>
											<condition name="State is Not MO" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MO}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TN}" id="1066761712" appliesto="">
												<parameter type="text" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="30" id="1512109921">
												</parameter>
											</condition>
											<condition name="State is TN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}" appliesto="">
												<parameter type="text" name="PolicyDwellingFireProtectionDistrict" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="30" id="870254326">
												</parameter>
											</condition>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
											<condition name="State is LA and not within city limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL No}" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="S" maxlength="">
												</parameter>
											</condition>
											<condition name="State is LA and within city limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL LA}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL Yes}" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="C" maxlength="">
												</parameter>
											</condition>
											<condition name="State is AL and not within city limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL No}" id="1173307740" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="S" maxlength="" id="1973433017">
												</parameter>
											</condition>
											<condition name="State is AL and within city limits" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AL}
AND
{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL Yes}" id="637999185" appliesto="">
												<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="C" maxlength="" id="678970361">
												</parameter>
											</condition>
										</condition>
										<condition name="State is NV" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NV}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!8|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
										</condition>
										<condition name="State is WA-OR" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL WA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL OR}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!8|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.Dwelling.SeasonalYN!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
										</condition>
										<condition name="State is GA-AR-VA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL GA} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL AR} OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL VA}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!8|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="&lt;=this.getvariable(suburb)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
										</condition>
										<condition name="State is KY-PA-TN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TN}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!8|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<condition name="FireProtectionDistrict" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL KY}" appliesto="KY -">
												<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="" id="1731659200">
												</parameter>
											</condition>
											<condition name="State is Not" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL KY}" appliesto="KY -">
												<condition name="State is PA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL PA}" appliesto="">
													<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
													</parameter>
												</condition>
												<elsecondition>
													<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="" id="1262855628">
													</parameter>
												</elsecondition>
											</condition>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
										</condition>
										<condition name="State Is IN" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IN}" appliesto="">
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!7|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationState" value="&lt;=this.getvariable(dwellingstatecode)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingrCountyCode" value="097" maxlength="">
											</parameter>
											<parameter type="" name="PolicyEffectiveDate" value="&lt;=this.getvariable(coverage_effective)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="">
											</parameter>
										</condition>
										<condition name="State is Not" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}" appliesto="CA -">
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.getvariable(dwellingdesc)&gt;" maxlength="" id="615752629">
											</parameter>
										</condition>
										<condition name="State is" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="CA -MI -">
											<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_structure)&gt;, &lt;=this.getvariable(map_structureho6)&gt;)&gt;" maxlength="">
											</parameter>
										</condition>
										<condition name="State is MD - Field List, Territory Code, Distance from Fire Hydrant and Fire Department" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MD}" id="590200410" appliesto="">
											<condition name="If territory is present MD" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="" id="1296341451">
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="219378249">
												</parameter>
												<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="351760725">
												</parameter>
											</condition>
											<elsecondition id="451728184">
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="1307741357">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=1000|501-600=1000|601-1000=1000|1001 and Greater=1001|None=1000)&gt;" maxlength="" id="1865540906">
											</parameter>
											<parameter type="" name="PolicyDwellingMilesToFireDept" value="&lt;=this.getvariable(dwellinginfo_distancetofirestation)&gt;" maxlength="" id="1136454488">
											</parameter>
											<condition name="If county field present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingLocationCounty, select)&gt; EQUAL true}" appliesto="" id="509450855">
												<condition name="AltDwelling Address Exists" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="" id="646848488">
													<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="2082799182">
													</parameter>
												</condition>
												<condition name="AltDwelling Address Does Not Exist" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 0}" appliesto="" id="1212013450">
													<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="475246260">
													</parameter>
												</condition>
											</condition>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="" id="879418466">
											</parameter>
											<parameter type="text" name="PolicyDwellingFireProtectionDistrict" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="30" id="288568529">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="" id="801128779">
											</parameter>
											<condition name="Sprinkler Present" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; EQUALGREATER 1}" appliesto="" id="612340325">
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="" id="280328756">
												</parameter>
											</condition>
											<condition name="Sprinkler Not Present" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; EQUAL 0}" appliesto="" id="723681081">
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="" maxlength="" id="193970912">
												</parameter>
											</condition>
											<condition name="State is MD-Wiring Renovation" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="" id="1553155210">
												<parameter type="" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="771310792">
												</parameter>
												<parameter type="" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="" id="1090309581">
												</parameter>
											</condition>
											<elsecondition id="547772263">
												<parameter type="" name="PolicyDwellingWiringRenovationType" value="N" maxlength="" id="1359008560">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="" id="1979285475">
											</parameter>
										</condition>
										<condition name="State Is NC" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NC}" appliesto="">
											<parameter type="" name="__FieldList" value="Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!8|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!999|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="&lt;=this.getvariable(fireprotectiondist)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingInCitySuburbDistrict" value="&lt;=this.getvariable(suburb)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationState" value="&lt;=this.getvariable(dwellingstatecode)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingrCountyCode" value="097" maxlength="">
											</parameter>
											<parameter type="" name="PolicyEffectiveDate" value="&lt;=this.getvariable(coverage_effective)&gt;" maxlength="">
											</parameter>
										</condition>
										<condition name="State Is IA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL IA}" appliesto="" id="1625497193">
											<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!8|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="163482617">
											</parameter>
											<parameter type="" name="PolicyDwellingConstructionType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_construction)&gt;, &lt;=this.getvariable(map_construction)&gt;)&gt;" maxlength="" id="1302359991">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="" id="82887369">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="" id="1404062007">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationCounty" value="Adams" maxlength="" id="573458365">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="" id="1095280941">
											</parameter>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="" id="1321318001">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="" id="405389729">
											</parameter>
											<parameter type="" name="PolicyDwellingTerritory" value="32" maxlength="" id="235143953">
											</parameter>
										</condition>
										<condition name="State is NH" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL NH}" id="1121343543" appliesto="">
											<condition name="If territory is present MD" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="" id="889072973">
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="899670714">
												</parameter>
												<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="" id="917163558">
												</parameter>
											</condition>
											<elsecondition id="541977798">
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="1098002543">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=1000|501-600=1000|601-1000=1000|1001 and Greater=1001|None=1000)&gt;" maxlength="" id="1245864527">
											</parameter>
											<parameter type="" name="PolicyDwellingMilesToFireDept" value="&lt;=this.getvariable(dwellinginfo_distancetofirestation)&gt;" maxlength="" id="1839925398">
											</parameter>
											<condition name="If county field present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingLocationCounty, select)&gt; EQUAL true}" appliesto="" id="810124381">
												<condition name="AltDwelling Address Exists" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 1}" appliesto="" id="1899300901">
													<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="1849025618">
													</parameter>
												</condition>
												<condition name="AltDwelling Address Does Not Exist" expression="{&lt;=this.getvariable(dwellinginfo_addresscount)&gt; EQUAL 0}" appliesto="" id="1949304953">
													<parameter type="" name="PolicyDwellingLocationCounty" value="&lt;=java.callstringmethod(trim, &lt;=java.callstringmethod(replaceAll, &lt;=this.getvariable(applicant_county)&gt;, County, &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;)&gt;" maxlength="" id="1413419549">
													</parameter>
												</condition>
											</condition>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.getvariable(protectionclass)&gt;" maxlength="" id="444266072">
											</parameter>
											<parameter type="text" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="30" id="2127732346">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="" id="558575453">
											</parameter>
											<condition name="Sprinkler Present" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; EQUALGREATER 1}" appliesto="">
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="" id="2044949830">
												</parameter>
											</condition>
											<condition name="Sprinkler Not Present" expression="{&lt;=this.getvariable(endorsements_sprinklercount)&gt; EQUAL 0}" appliesto="">
												<parameter type="" name="PolicyDwellingSprinklerCrType" value="" maxlength="">
												</parameter>
											</condition>
											<condition name="Wiring Renovation" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="">
												<parameter type="" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="2122469421">
												</parameter>
												<parameter type="" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="" id="977206294">
												</parameter>
											</condition>
											<elsecondition>
												<parameter type="" name="PolicyDwellingWiringRenovationType" value="N" maxlength="" id="1112052699">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="" id="37589489">
											</parameter>
										</condition>
										<condition name="State Is MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="" id="1754799356">
											<condition name="If territory is present" expression="{&lt;=SubmitApplicant.isformfieldpresent(frmInput, PolicyDwellingTerritory, input)&gt; EQUAL true}" appliesto="">
												<parameter type="hidden" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!8|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!8|Policy.Dwelling.MilesToFireDept!7|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!7|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!14|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!8|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!8|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!8|Policy.Dwelling.WiringRenovationYear!7|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!8|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!8|Policy.Dwelling.LivingAreaSqFeetTotal!7|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!14|Policy.Dwelling.RenewalCrDate!2|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!999|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="1782739690">
												</parameter>
												<parameter type="" name="PolicyDwellingTerritory" value="&lt;=this.getvariable(territory)&gt;" maxlength="">
												</parameter>
											</condition>
											<elsecondition>
												<parameter type="" name="__FieldList" value="Policy.RerateMessage!999|Policy.Dwelling.SecondaryDwellingYN!14|Policy.Dwelling.SeasonalYN!999|Policy.Dwelling.Location.County!999|Policy.Dwelling.Location.TaxCode!999|Policy.Dwelling.Location.CountyTaxCode!999|Policy.Dwelling.FeetToFireHydrant!999|Policy.Dwelling.MilesToFireDept!999|Policy.Dwelling.Location.WithinCityYN!999|Policy.Dwelling.ProtectionClass!8|Policy.Dwelling.Territory!999|Policy.Dwelling.InCitySuburbDistrict!999|Policy.Dwelling.ConstructionYear!7|Policy.Dwelling.ConstructionStyle!999|Policy.Dwelling.DwellingTypeDesc!8|Policy.Dwelling.ConstructionType!8|Policy.Dwelling.EarthquakeFittedYN!999|Policy.Dwelling.SyntheticStuccoYN!999|Policy.Dwelling.SyntheticStuccoVerificationType!999|Policy.Dwelling.RoofMaterialCategory!999|Policy.Dwelling.Roofs(1).ID!999|Policy.Dwelling.RoofingRenovationType!999|Policy.Dwelling.RoofingRenovationYear!999|Policy.Dwelling.WiringRenovationType!999|Policy.Dwelling.WiringRenovationYear!999|Policy.Dwelling.PlumbingRenovationType!999|Policy.Dwelling.PlumbingRenovationYear!999|Policy.Dwelling.HeatingSystemType!999|Policy.Dwelling.HeatingSystems(1).ID!999|Policy.Dwelling.HeatingSystemDesc!999|Policy.Dwelling.ExteriorWalls(1).ID!999|Policy.Dwelling.Foundations(1).ID!999|Policy.Dwelling.NumberOfStories!999|Policy.Dwelling.LivingAreaSqFeetTotal!999|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.NumberOfUnitsInBuilding!999|Policy.Dwelling.MaintenanceCondition!8|Policy.Dwelling.LastInspectionDate!2|Policy.Dwelling.TXRespFireCity!999|Policy.Dwelling.TXRespFireCounty!999|Policy.Dwelling.FireProtectionDistrict!1|Policy.Dwelling.LeadFreeCertDate!999|Policy.Dwelling.FireProtectionDistrictCode!999|Policy.Dwelling.BldgCodeEffGrade!999|Policy.Dwelling.BypassCostGuideYN!999|Policy.Dwelling.RenewalCrDate!999|Policy.Dwelling.PPIdCrYN!999|Policy.Dwelling.SprinklerCrType!8|Policy.Dwelling.TXSprinklerYN!999|Policy.Dwelling.BurglarAlarmCrType!8|Policy.Dwelling.BurglarAlarmDate!999|Policy.Dwelling.BurglarAlarmAgent!999|Policy.Dwelling.CondoSecurityCrType!8|Policy.Dwelling.BurglarAlarmName!999|Policy.Dwelling.HailCrYN!999|Policy.Dwelling.HailCreditClass!999|Policy.Dwelling.WindstormCrType!999|Policy.Dwelling.SecurityBarsCrYN!999|Policy.Dwelling.WindExclYN!999|Policy.Dwelling.HomeSecurityCrYN!999|Policy.Dwelling.Location.State!15|Policy.Dwelling.rCountyCode!15|Policy.EffectiveDate!15|Policy.Dwelling.FHCFZipCodeGroup!999|Policy.Dwelling.CoverageHURSSA.LimitDed!999|Policy.Dwelling.CoverageHURSSB.LimitDed!999|Policy.LineOfBusiness!999|Policy.Dwelling.NumberOfBathsFull!999|Policy.Dwelling.NumberOfBathsThreeQuarter!999|Policy.Dwelling.NumberOfBathsHalf!999|" maxlength="" id="1505713698">
												</parameter>
											</elsecondition>
											<parameter type="" name="PolicyDwellingConstructionType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_construction)&gt;, &lt;=this.getvariable(map_construction)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingFireProtectionDistrict" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingLocationCountyCode" value="049" maxlength="" id="513441824">
											</parameter>
											<parameter type="" name="PolicyDwellingSprinklerCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_sprinkler)&gt;, &lt;=this.getvariable(map_sprinkler)&gt;)&gt;" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingCondoSecurityCrType" value="" maxlength="">
											</parameter>
											<parameter type="" name="PolicyDwellingProtectionClass" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_protectionclass)&gt;, &lt;=this.getvariable(mapprotectionclass)&gt;)&gt;" maxlength="" id="1481306968">
											</parameter>
										</condition>
									</condition>
									<parameter type="radio" name="PolicyDwellingSecondaryDwellingYN" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_dwellinguse)&gt;, &lt;=this.getvariable(map_usage)&gt;)&gt;" maxlength="">
									</parameter>
									<parameter type="text" name="PolicyDwellingConstructionYear" value="&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;" maxlength="4">
									</parameter>
									<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
										<parameter type="" name="PolicyDwellingConstructionType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_construction)&gt;, &lt;=this.getvariable(map_construction)&gt;)&gt;" maxlength="">
										</parameter>
									</condition>
									<condition name="State is not IA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL IA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}" appliesto="">
										<parameter type="" name="PolicyDwellingConstructionType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_construction)&gt;, &lt;=this.getvariable(map_construction)&gt;)&gt;" maxlength="" id="1935357459">
										</parameter>
									</condition>
									<condition name="Wiring Renovation - Policy HO4" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
AND
{{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MD}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL NH}}" appliesto="">
										<condition name="State is MN" expression="{&lt;=prevhttpstep.isformfieldpresent(frmInput, PolicyDwellingWiringRenovationType, select)&gt; EQUAL true}" appliesto="">
											<parameter type="" name="PolicyDwellingWiringRenovationType" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt;, NOT UPDATED=N|PARTIAL UPDATE=P|COMPLETE UPDATE=F)&gt;" maxlength="" id="520654335">
											</parameter>
											<condition name="If Wiring update is not equal NOT UPDATED and year is greater than construction year" expression="{&lt;=this.getvariable(dwellinginfo_electricalupdate)&gt; NOTEQUAL NOT UPDATED}
AND
{&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt; GREATER &lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;}" appliesto="" id="1094149423">
												<parameter type="text" name="PolicyDwellingWiringRenovationYear" value="&lt;=this.getvariable(dwellinginfo_electricalupdateyear)&gt;" maxlength="4" id="1150134423">
												</parameter>
											</condition>
										</condition>
									</condition>
									<parameter type="text" name="PolicyDwellingLastInspectionDate" value="" maxlength="">
									</parameter>
									<parameter type="text" name="PolicyDwellingRenewalCrDate" value="" maxlength="">
									</parameter>
									<condition name="Burglar Alaram - MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="CA -">
										<condition name="Burglar Alarm present" expression="{&lt;=this.getvariable(endorsements_burglaralarmcount)&gt; EQUALGREATER 1}
AND
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
											<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt;, &lt;=this.getvariable(map_burglaralarm)&gt;)&gt;" maxlength="" id="1787460456">
											</parameter>
										</condition>
										<elsecondition>
											<condition name="State is CA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}" appliesto="">
												<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="N" maxlength="" id="840845100">
												</parameter>
											</condition>
											<condition name="State is MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="">
												<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="" maxlength="" id="1419937267">
												</parameter>
											</condition>
										</elsecondition>
									</condition>
									<condition name="Burglar Alarm present" expression="{&lt;=this.getvariable(endorsements_burglaralarmcount)&gt; EQUALGREATER 1}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}" appliesto="">
										<condition name="BurglarAlarm-Local" expression="{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL Local}
" appliesto="">
											<condition name="State is TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX} 
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO3}" appliesto="">
												<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="LC" maxlength="" id="930525998">
												</parameter>
											</condition>
											<condition name="State is Not TX" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX} 
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}" appliesto="">
												<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt;, &lt;=this.getvariable(map_burglaralarm)&gt;)&gt;" maxlength="" id="734022086">
												</parameter>
											</condition>
										</condition>
										<condition name="BurglarAlarm-NotLocal" expression="{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; NOTEQUAL Local} 
AND
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{
{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; NOTEQUAL HO3}}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL TX}
}" appliesto="">
											<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt;" maxlength="">
											</parameter>
										</condition>
										<condition name="BurglarAlarm-NotLocal-TX-HO3" expression="{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; NOTEQUAL Local} 
AND
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}
}" appliesto="" id="494714131">
											<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt;, &lt;=this.getvariable(map_burglaralarm)&gt;)&gt;" maxlength="" id="1758581629">
											</parameter>
										</condition>
									</condition>
									<condition name="Burglar Alarm not present-Not CA" expression="{&lt;=this.getvariable(endorsements_burglaralarmcount)&gt; EQUAL 0} AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}" appliesto="">
										<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="" maxlength="">
										</parameter>
									</condition>
									<condition name="Burglar Alarm not present-CA" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}
AND

{{&lt;=this.getvariable(endorsements_burglaralarmcount)&gt; EQUAL 0}

OR


{{&lt;=this.getvariable(endorsements_burglaralarmcount)&gt; EQUALGREATER 1}
AND
{&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}}}
AND
{1 EQUAL 0}" appliesto="">
										<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="N" maxlength="" id="35785595">
										</parameter>
									</condition>
									<condition name="User is Agent" expression="{&lt;=this.getprofilekeyvalue(username)&gt; NOTEQUAL 003002}" appliesto="">
										<parameter type="" name="__EVENTTARGET" value="Continue" maxlength="">
										</parameter>
										<parameter type="" name="Continue.x" value="23" maxlength="">
										</parameter>
										<parameter type="" name="Continue.y" value="17" maxlength="">
										</parameter>
									</condition>
									<parameter type="" name="__EVENTARGUMENT" value="summary" maxlength="" id="799769704">
									</parameter>
									<parameter type="" name="__EVENTTARGET" value="Continue" maxlength="">
									</parameter>
									<condition name="User is not Agent" expression="{&lt;=this.getprofilekeyvalue(username)&gt; EQUAL 003002}" appliesto="">
										<parameter type="" name="Continue.x" value="28" maxlength="">
										</parameter>
										<parameter type="" name="Continue.y" value="8" maxlength="">
										</parameter>
										<condition name="newcondition" expression="{1 EQUAL 0}" appliesto="">
											<parameter type="" name="__EVENTTARGET" value="ScreenTabs1" maxlength="" id="1051081817">
											</parameter>
										</condition>
									</condition>
								</script>
								<result errormessage="Error submitting dwelling information.  Please contact EZLynx Support Team for further assistance." onerror="OnError">
									<verify>
										<condition name="State is MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="" id="1631393536">
											<form name="frmInput" id="649660145">
												<input name="PolicyDwellingSecondaryDwellingYN" value="" id="1349398275">
												</input>
											</form>
										</condition>
										<condition name="State not MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}" appliesto="">
											<form name="frmInput" id="621943215">
												<input name="PolicyHomeDataFullValuePersonalPropertyYN" value="Y" id="2072831319">
												</input>
											</form>
										</condition>
										<condition name="TX Resp Fire Dept City and County Needed" expression="{{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
OR
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}}
AND
{&lt;=java.callstringmethod(indexOf, &lt;=this.getoutputtextbuffer()&gt;, ecfields.setError\('PolicyDwellingTXRespFireCity')&gt; NOTEQUAL -1}" appliesto="">
											<condition name="State is MI" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL MI}" appliesto="">
												<form name="frmInput">
													<input name="PolicyDwellingSecondaryDwellingYN" value="Y">
													</input>
												</form>
												<form name="frmInput" id="645566724">
													<input name="PolicyHomeDataFullValuePersonalPropertyYN" value="Y" id="1075583028">
													</input>
												</form>
											</condition>
											<condition name="State is TX" expression="{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}" appliesto="">
												<form name="frmInput">
													<input name="__ContextGUID" value="">
													</input>
												</form>
											</condition>
										</condition>
									</verify>
									<forms>
										<form name="frmInput">
											<input name="__ContextGUID" type="hidden" value="980f1b1b-1704-4951-a676-392348995b06" maxlength="">
											</input>
											<input name="__FormIndexing" type="hidden" value="1" maxlength="">
											</input>
											<input name="__FieldList" type="hidden" value="Policy.HomeData.AOPDeductible!8|Policy.HomeData.DeductibleClause1!999|Policy.HomeData.DeductibleClause3!999|Policy.HomeData.WindHailDeductible!999|Policy.HomeData.HurricaneDeductible!999|Policy.HomeData.DeductibleClause2!999|Policy.Dwelling.CostGuideSF.DwellingReplacementCost!999|Policy.Dwelling.CoverageDWELL.LimitDed!7|Policy.Dwelling.CoverageOS.LimitDed!7|Policy.Dwelling.CoveragePP.LimitDed!7|Policy.Dwelling.CoverageLOU.LimitDed!1|Policy.HomeData.FullValuePersonalPropertyYN!5|Policy.HomeData.ExtendedDwellingCovIndicator!5|Policy.Dwelling.CoverageHRG.LimitDed!999|Policy.Dwelling.CoveragePL.LimitDed!8|Policy.Dwelling.CoverageMEDPM.LimitDed!8|Policy.Dwelling.CoverageBOLAW3.LimitDed!8|Policy.Dwelling.CoveragePPC.LimitDed!999|Policy.Dwelling.CoverageMOLD.LimitDed!999|Policy.HomeData.NumberOfAddlDwlOccupied!7|Policy.HomeData.NumberOfAddlDwlRented!999|Policy.Dwelling.CoverageSINK.LimitDed!999|Policy.Dwelling.CoverageGLABR.LimitDed!999|Policy.Dwelling.CoverageUNJWF.LimitDed!8|Policy.HomeData.TXUNJWFCoverage!999|Policy.Dwelling.CoverageCCSV.LimitDed!7|Policy.Dwelling.CoverageBUSPR.LimitDed!7|Policy.Dwelling.CoverageCDTCD.LimitDed!999|Policy.Dwelling.CoverageCCSC.LimitDed!999|Policy.Dwelling.CoverageWHANT.LimitDed!999|Policy.Dwelling.CoveragePC.LimitDed!999|Policy.Dwelling.CoverageOTBLDG.LimitDed!999|Policy.HomeData.CoveragePIHOMLimit!999|Policy.HomeData.CoverageOCCUPNumFam!999|Policy.Dwelling.CoverageMERCH.LimitDed!5|Policy.Dwelling.CoverageRNTOT.LimitDed!999|Policy.Dwelling.CoverageINCBLD.LimitDed!999|Policy.Dwelling.CoverageFAIR.LimitDed!999|Policy.Dwelling.CoverageVOLUN.LimitDed!5|Policy.Dwelling.CoverageFELIA.LimitDed!999|Policy.Dwelling.CoverageLNDFR.LimitDed!5|Policy.Dwelling.CoverageFREEZ.LimitDed!5|Policy.Dwelling.CoverageBUSOS.LimitDed!5|Policy.Dwelling.CoverageIHBUS.LimitDed!8|Policy.Dwelling.CoverageERQKN.LimitDed!999|Policy.Dwelling.CoveragePPEQK.LimitDed!999|Policy.Dwelling.CoverageDEBRL.LimitDed!999|Policy.Dwelling.CoverageREFDEB.LimitDed!999|Policy.Dwelling.CoverageIFPL.LimitDed!5|Policy.Dwelling.CoverageMINES.LimitDed!999|Policy.Dwelling.CoverageSPPP.LimitDed!5|Policy.Dwelling.CoveragePUNI.LimitDed!999|Policy.Dwelling.CoverageTHFTB.LimitDed!5|Policy.Dwelling.CoverageACVRS.LimitDed!999|Policy.Dwelling.CoverageSUMP4.LimitDed!999|Policy.Dwelling.CoverageSUMP5.LimitDed!999|Policy.Dwelling.CoverageSUMP6.LimitDed!999|Policy.Dwelling.CoverageSUMP2.LimitDed!999|Policy.HomeData.CoverageSUMPYN!999|Policy.Dwelling.CoverageWATER.LimitDed!8|Policy.HomeData.TotalHorsepower!999|Policy.Dwelling.CoverageBUSA.LimitDed!999|Policy.Dwelling.CoverageBUSB.LimitDed!999|Policy.Dwelling.CoverageBUSC.LimitDed!999|Policy.Dwelling.CoverageBUSD.LimitDed!999|Policy.Dwelling.CoverageBUSF.LimitDed!999|Policy.Dwelling.CoverageBUSG.LimitDed!999|Policy.Dwelling.CoverageBUSNS.LimitDed!8|Policy.Dwelling.CoverageWCOCC.LimitDed!999|Policy.Dwelling.CoverageWCIN.LimitDed!999|Policy.Dwelling.CoverageWCOUT.LimitDed!999|Policy.Dwelling.CoverageWCINC.LimitDed!999|Policy.Dwelling.CoverageADDRR1.LimitDed!999|Policy.Dwelling.CoverageADDRR2.LimitDed!999|Policy.Dwelling.CoverageADDRP.LimitDed!999|Policy.Dwelling.CoverageADDRP2.LimitDed!999|Policy.Dwelling.CoverageLAC.LimitDed!8|Policy.Dwelling.CoverageLAC2.LimitDed!999|Policy.Dwelling.CoverageHDACA.LimitDed!5|Policy.Dwelling.SPPYN!14|Policy.HomeData.NumberOfOutboardMotors!8|Policy.HomeData.BoatHorsepowerTotal!7|Policy.HomeData.BoatLength!7|Policy.HomeData.BoatOperatorAges!1|Policy.Dwelling.NumberOfFamilies!999|Policy.Dwelling.FullValueYCovCPercent!15|Policy.Dwelling.FullValueNCovCPercent!15|Policy.RatingState!15|Policy.Product!15|Policy.HomeData.ReplacementOnDwellingYN!999|Policy.Dwelling.SecondaryDwellingYN!15|Policy.Dwelling.AdditionalInsuredSwitch!15|Policy.Dwelling.CoverageFVREP.LimitDed!999|Policy.Dwelling.CoverageTXADJ.LimitDed!999|Policy.HomeData.BelowFairMarketYN!15|Policy.Dwelling.CoverageSTSR2.LimitDed!999|Policy.Dwelling.CoverageSTSR1K.LimitDed!999|Policy.Dwelling.CoverageSTSR1.LimitDed!999|Policy.Dwelling.CoverageCOSX.LimitDed!999|Policy.Dwelling.CoverageMAXCRD.LimitDed!999|Policy.Dwelling.CoverageSPPMN.LimitDed!999|Policy.Dwelling.CoverageLEAD.LimitDed!999|Policy.Dwelling.CoverageLEADX.LimitDed!999|Policy.HomeData.ReplOnDwellingIncludedYN!999" maxlength="">
											</input>
											<input name="PolicyVersion" type="hidden" value="8" maxlength="">
											</input>
											<input name="__VIEWSTATE" type="hidden" value="dDwyOTA2OTk0MTk7O2w8X2N0bDE7X2N0bDc7X2N0bDk7X2N0bDEzO19jdGwxOTs+Pg==" maxlength="">
											</input>
											<input name="PolicyDwellingFullValueYCovCPercent" type="hidden" value="0.75" maxlength="">
											</input>
											<input name="PolicyDwellingFullValueNCovCPercent" type="hidden" value="0.5" maxlength="">
											</input>
											<input name="PolicyRatingState" type="hidden" value="2" maxlength="">
											</input>
											<input name="PolicyProduct" type="hidden" value="QPH" maxlength="">
											</input>
											<input name="PolicyDwellingSecondaryDwellingYN" type="hidden" value="N" maxlength="">
											</input>
											<input name="PolicyDwellingAdditionalInsuredSwitch" type="hidden" value="" maxlength="">
											</input>
											<input name="PolicyHomeDataBelowFairMarketYN" type="hidden" value="" maxlength="">
											</input>
											<input name="__EVENTTARGET" type="hidden" value="" maxlength="">
											</input>
											<input name="__EVENTARGUMENT" type="hidden" value="" maxlength="">
											</input>
											<input name="" type="submit" value="" maxlength="">
											</input>
											<input name="PolicyDwellingCoverageDWELLLimitDed" type="text" value="" maxlength="9">
											</input>
											<input name="PolicyDwellingCoverageOSLimitDed" type="text" value="" maxlength="8">
											</input>
											<input name="PolicyDwellingCoveragePPLimitDed" type="text" value="" maxlength="8">
											</input>
											<input name="PolicyDwellingCoverageLOULimitDed" type="text" value="12MONTHS" maxlength="9">
											</input>
											<input name="PolicyHomeDataFullValuePersonalPropertyYN" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyHomeDataExtendedDwellingCovIndicator" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyHomeDataNumberOfAddlDwlOccupied" type="text" value="" maxlength="1">
											</input>
											<input name="PolicyDwellingCoverageCCSVLimitDed" type="text" value="" maxlength="6">
											</input>
											<input name="PolicyDwellingCoverageBUSPRLimitDed" type="text" value="" maxlength="6">
											</input>
											<input name="PolicyDwellingCoverageMERCHLimitDed" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyDwellingCoverageVOLUNLimitDed" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyDwellingCoverageLNDFRLimitDed" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyDwellingCoverageFREEZLimitDed" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyDwellingCoverageBUSOSLimitDed" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyDwellingCoverageIFPLLimitDed" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyDwellingCoverageSPPPLimitDed" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyDwellingCoverageTHFTBLimitDed" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyDwellingCoverageHDACALimitDed" type="checkbox" value="Y" maxlength="">
											</input>
											<input name="PolicyDwellingSPPYN" type="radio" value="Y" maxlength="">
											</input>
											<input name="PolicyDwellingSPPYN" type="radio" value="N" maxlength="">
											</input>
											<input name="PolicyHomeDataBoatHorsepowerTotal" type="text" value="" maxlength="3">
											</input>
											<input name="PolicyHomeDataBoatLength" type="text" value="" maxlength="2">
											</input>
											<input name="PolicyHomeDataBoatOperatorAges" type="text" value="" maxlength="15">
											</input>
											<input name="_ctl1" type="image" value="" maxlength="">
											</input>
											<input name="_ctl7" type="image" value="" maxlength="">
											</input>
											<input name="_ctl9" type="image" value="" maxlength="">
											</input>
											<input name="_ctl13" type="image" value="" maxlength="">
											</input>
											<input name="_ctl19" type="image" value="" maxlength="">
											</input>
											<select name="PolicyHomeDataAOPDeductible" value="">
												<option name="&lt;Select&gt;" value="&lt;Select&gt;">
												</option>
												<option name="500" value="00500/00500">
												</option>
												<option name="750" value="00750/00750">
												</option>
												<option name="1000" value="01000/01000">
												</option>
												<option name="1500" value="01500/01500">
												</option>
												<option name="2000" value="02000/02000">
												</option>
												<option name="2500" value="02500/02500">
												</option>
												<option name="5000" value="05000/05000">
												</option>
												<option name="7500" value="07500/07500">
												</option>
											</select>
											<select name="PolicyDwellingCoveragePLLimitDed" value="">
												<option name="&lt;Select&gt;" value="&lt;Select&gt;">
												</option>
												<option name="100000" value="100000">
												</option>
												<option name="300000" value="300000">
												</option>
												<option name="500000" value="500000">
												</option>
												<option name="1000000" value="1000000">
												</option>
											</select>
											<select name="PolicyDwellingCoverageMEDPMLimitDed" value="">
												<option name="&lt;Select&gt;" value="&lt;Select&gt;">
												</option>
												<option name="1000" value="1000">
												</option>
												<option name="2000" value="2000">
												</option>
												<option name="3000" value="3000">
												</option>
												<option name="4000" value="4000">
												</option>
												<option name="5000" value="5000">
												</option>
												<option name="10000" value="10000">
												</option>
											</select>
											<select name="PolicyDwellingCoverageBOLAW3LimitDed" value="">
												<option name="10%" value="10">
												</option>
												<option name="20%" value="20">
												</option>
												<option name="50%" value="50">
												</option>
											</select>
											<select name="PolicyDwellingCoverageUNJWFLimitDed" value="">
												<option name="" value="">
												</option>
												<option name="3000" value="3000">
												</option>
												<option name="5000" value="5000">
												</option>
												<option name="10000" value="10000">
												</option>
											</select>
											<select name="PolicyDwellingCoverageIHBUSLimitDed" value="">
												<option name="" value="">
												</option>
												<option name="100000" value="100000">
												</option>
												<option name="300000" value="300000">
												</option>
												<option name="500000" value="500000">
												</option>
												<option name="1000000" value="1000000">
												</option>
											</select>
											<select name="PolicyDwellingCoverageWATERLimitDed" value="">
												<option name="" value="">
												</option>
												<option name="100000" value="100000">
												</option>
												<option name="300000" value="300000">
												</option>
												<option name="500000" value="500000">
												</option>
												<option name="1000000" value="1000000">
												</option>
											</select>
											<select name="PolicyDwellingCoverageBUSNSLimitDed" value="">
												<option name="" value="">
												</option>
												<option name="100000" value="100000">
												</option>
												<option name="300000" value="300000">
												</option>
												<option name="500000" value="500000">
												</option>
												<option name="1000000" value="1000000">
												</option>
											</select>
											<select name="PolicyDwellingCoverageLACLimitDed" value="">
												<option name="" value="">
												</option>
												<option name="1000" value="1000">
												</option>
												<option name="10000" value="10000">
												</option>
												<option name="15000" value="15000">
												</option>
												<option name="50000" value="50000">
												</option>
											</select>
											<select name="PolicyHomeDataNumberOfOutboardMotors" value="">
												<option name="" value="">
												</option>
												<option name="1" value="1">
												</option>
												<option name="2" value="2">
												</option>
												<option name="3" value="3">
												</option>
												<option name="4" value="4">
												</option>
												<option name="5" value="5">
												</option>
												<option name="6" value="6">
												</option>
												<option name="7" value="7">
												</option>
												<option name="8" value="8">
												</option>
												<option name="9" value="9">
												</option>
											</select>
										</form>
										<form name="frmInput" id="1592384210">
											<input name="PolicyHomeDataFullValuePersonalPropertyYN" value="Y" id="1551192498">
											</input>
										</form>
									</forms>
									<frames>
									</frames>
								</result>
							</httpstep>
						</condition>
						<condition name="newcondition" expression="{1 EQUAL 1}" appliesto="">
							<httpstep name="ReSubmitDwellinInfo" id="48559682307966057">
								<script protocol="http" method="post" timeout="0" clientauthentication="no" contenttype="text/html" form="">
									<url><![CDATA[<=this.getvariable(urlqp1)>/dwelling.aspx?&modeid=2&context=<=this.getvariable(contextid)>]]></url>
									<condition name="PolicyType-HO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}
AND
{1 EQUAL 0}" appliesto="">
										<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_structure)&gt;, &lt;=this.getvariable(map_structureHO6)&gt;)&gt;" maxlength="" id="1243299463">
										</parameter>
									</condition>
									<condition name="PolicytypeisHO4OrHO6" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}
OR
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO6}" appliesto="">
										<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_structure)&gt;, Dwelling=T|Apartment=T|Condo=T|Townhouse=T|Rowhouse=R|Coop=T)&gt;" maxlength="" id="637054075">
										</parameter>
										<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=T|501-600=T|601-1000=T|1001 and Greater=OT|None=OT)&gt;" maxlength="">
										</parameter>
									</condition>
									<condition name="PolicytypeisHO3" expression="{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
										<parameter type="" name="PolicyDwellingDwellingTypeDesc" value="D" maxlength="">
										</parameter>
										<parameter type="" name="PolicyDwellingFeetToFireHydrant" value="&lt;=this.convertvalue(&lt;=this.getvariable(dwellinginfo_distancetofirehydrant)&gt;, 1-500=1000|501-600=1000|601-1000=1000|1001 and Greater=1001|None=1000)&gt;" maxlength="" id="423283724">
										</parameter>
									</condition>
									<condition name="Burglar Alarm not present-Not CA" expression="{&lt;=this.getvariable(endorsements_burglaralarmcount)&gt; EQUAL 0} AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}" appliesto="">
										<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="" maxlength="" id="693668863">
										</parameter>
									</condition>
									<condition name="Burglar Alarm present" expression="{&lt;=this.getvariable(endorsements_burglaralarmcount)&gt; EQUALGREATER 1}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL MI}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO3}" appliesto="">
										<parameter type="" name="PolicyDwellingBurglarAlarmCrType" value="&lt;=this.convertvalue(&lt;=this.getvariable(endorsements_burglarbaseprotectiondevice)&gt;, &lt;=this.getvariable(map_burglaralarm)&gt;)&gt;" maxlength="">
										</parameter>
									</condition>
									<parameter type="" name="__EVENTTARGET" value="ScreenTabs1" maxlength="">
									</parameter>
									<parameter type="" name="__EVENTARGUMENT" value="summary" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingSecondaryDwellingYN" value="N" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingMilesToFireDept" value="&lt;=this.getvariable(dwellinginfo_distancetofirestation)&gt;" maxlength="">
									</parameter>
									<condition name="WithinCityLimits" expression="{&lt;=this.getvariable(dwellinginfo_withincitylimits)&gt; EQUAL Yes}" appliesto="">
										<parameter type="" name="PolicyDwellingLocationWithinCityYN" value="Y" maxlength="">
										</parameter>
									</condition>
									<elsecondition>
										<parameter type="" name="PolicyDwellingLocationWithinCityYN" value="N" maxlength="" id="1371510554">
										</parameter>
									</elsecondition>
									<parameter type="" name="PolicyDwellingConstructionYear" value="&lt;=this.getvariable(dwellinginfo_yearbuilt)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingLastInspectionDate" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingTXRespFireCity" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingTXRespFireCounty" value="" maxlength="">
									</parameter>
									<parameter type="" name="PolicyEffectiveDate" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyEffectiveDate)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingBurglarAlarmDate" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingBurglarAlarmDate)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingBurglarAlarmAgent" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingBurglarAlarmAgent)&gt;" maxlength="">
									</parameter>
									<parameter type="" name="PolicyDwellingBurglarAlarmName" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingBurglarAlarmName)&gt;" maxlength="">
									</parameter>
									<condition name="newcondition" expression="{1 EQUAL 1}" appliesto="">
										<parameter type="" name="__ContextGUID" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __ContextGUID)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="__ModeID" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __ModeID)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="__FormIndexing" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __FormIndexing)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="__FieldList" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __FieldList)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="__ActivityType" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __ActivityType)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="__ActivityTypeID" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __ActivityTypeID)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="__VIEWSTATE" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __VIEWSTATE)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="PolicyDwellingConstructionType" value="&lt;=prevhttpstep.extractformselectvalue(frmInput, PolicyDwellingConstructionType)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="PolicyDwellingLocationState" value="&lt;=this.getvariable(dwellingstatecode)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="PolicyDwellingrCountyCode" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyDwellingrCountyCode)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="PolicyDwellingMaintenanceCondition" value="E" maxlength="" id="808311320">
										</parameter>
										<parameter type="" name="__EVENTVALIDATION" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, __EVENTVALIDATION)&gt;" maxlength="">
										</parameter>
										<parameter type="" name="PolicyVersion" value="&lt;=prevhttpstep.extractforminputvalue(frmInput, PolicyVersion)&gt;" maxlength="">
										</parameter>
									</condition>
								</script>
								<result errormessage="Error resubmitting dwelling info.  Please contact EZLynx Support Team for further assistance." onerror="QuoteProposalError">
									<verify />
									<forms />
									<frames />
								</result>
							</httpstep>
						</condition>
						<functionstep name="Setanonynoumsstep2" id="1216023029" prompt="no" errormessage="Error setting anonynoums step. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(anonymousstep, ReSubmitDwellinInfo)>]]></functionstep>
					</condition>
					<condition name="Error extracting premium" expression="{&lt;=java.callstringmethod(indexOf, &lt;=anonymous.getoutputtextbuffer()&gt;, Policy has not been rated)&gt; EQUAL -1}" appliesto="">
						<functionstep name="SetFinalPageBuffer" id="84795144" prompt="no" errormessage="An error occured while setting the final page of the quote. The EZLynx team has been notified. Please contact EZLynx support for futher assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(finalpage,<=anonymous.getoutputtextbuffer()>)>

<=this.setvariable(premium1, <=this.substringregex(<=this.getvariable(finalpage)>, bold\;\"\>\$, \<)>)>

<=this.setvariable(premium1, <=java.callstringmethod(trim, <=java.callstringmethod(replaceAll, <=this.getvariable(premium1)>, [\,], <=java.callstringmethod(anonymous, VK_BLANK)>)>)>)>

]]></functionstep>
						<condition name="ComparePremiums" expression="{&lt;=this.getvariable(premium1)&gt; NOTEQUAL &lt;=this.getvariable(premium)&gt;}" appliesto="">
							<condition name="Do Not Delete" expression="{1 EQUAL 0}" appliesto="">
								<functionstep name="SetPremiumDifference" id="182639827" prompt="no" errormessage="Error setting premium flag. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.scriptlog(SafecoHomeXML:Premium Difference:<=this.getvariable(applicant_lastname)> <=this.getvariable(applicant_firstname)>:<=this.getprofilekeyvalue(__APPLICANTID)>:DATE:<=this.formatdate(today, MM/dd/yyyy)>:State:<=this.getvariable(dwellingstatecode)>:RQUID:<=this.getvariable(rquid)>:Company Quote Number:<=this.getvariable(companynum)>:XML Response Premium:<=this.getvariable(premium)>:Premium present on Safeco site:<=this.getvariable(premium1)>)>]]></functionstep>
							</condition>
						</condition>
						<condition name="CheckPremium" expression="{&lt;=func.premiumRegexCheckHome(&lt;=this.getvariable(premium1)&gt;)&gt; EQUAL true}" appliesto="">
							<functionstep name="SetHomePremium" id="1971660650" prompt="no" errormessage="Error setting premium. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homepremium_rt, <=this.getvariable(premium1)>)>]]></functionstep>
							<condition name="Quote Scenario Yes" expression="{&lt;=this.getvariable(quotescenario)&gt; EQUAL Yes}" appliesto="">
								<functionstep name="SetHomePremiumQS" id="776460591" prompt="no" errormessage="Error setting premium. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(homepremium<=this.getvariable(basketcount)>_rt, <=this.getvariable(premium1)>)>]]></functionstep>
							</condition>
						</condition>
					</condition>
					<elsecondition>
						<condition name="Do Not Delete" expression="{1 EQUAL 0}" appliesto="">
							<functionstep name="ScriptLogPremiumNotFound" id="1566854592" prompt="no" errormessage="Error setting premium flag. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.scriptlog(SafecohomeXML:Premium not found Onsite:<=this.getvariable(applicant_lastname)> <=this.getvariable(applicant_firstname)>:<=this.getprofilekeyvalue(__APPLICANTID)>:DATE:<=this.formatdate(today, MM/dd/yyyy)>:State:<=this.getvariable(dwellingstatecode)>:RQUID:<=this.getvariable(rquid)>:Company Quote Number:<=this.getvariable(companynum)>:<=this.getvariable(premium)>)>]]></functionstep>
						</condition>
					</elsecondition>
					<httpstep name="SelectPrint" id="5703260066385788">
						<script protocol="http" method="get" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="">
							<url><![CDATA[https://<=this.getvariable(urlpersonal)>/home/ReportMenu.aspx?context=<=this.getvariable(contextid)>&activitytype=2]]></url>
						</script>
						<result errormessage="Error selecting print.  Please contact EZLynx Support Team for further assistance." onerror="QuoteProposalError" ignoreerror="true">
							<verify>
								<form name="Form1">
									<input name="PolicyReportsQuoteSummary" value="">
									</input>
								</form>
							</verify>
							<forms>
								<form name="Form1">
									<input name="__EVENTTARGET" type="hidden" value="" maxlength="">
									</input>
									<input name="__EVENTARGUMENT" type="hidden" value="" maxlength="">
									</input>
									<input name="__ContextGUID" type="hidden" value="bb2e9f44-8b14-4ded-b9e7-a504140c3fa1" maxlength="">
									</input>
									<input name="__ModeID" type="hidden" value="2" maxlength="">
									</input>
									<input name="__FormIndexing" type="hidden" value="1" maxlength="">
									</input>
									<input name="__FieldList" type="hidden" value="Policy.Reports.QuoteSummary!5|Policy.Reports.CreateUMUIMRejectFormYN!15|Policy.Reports.CreateStandardRejectFormYN!15|Policy.Reports.Application!5|Policy.Reports.PaperApplication!999|Policy.Reports.AutoIDCards!999|Policy.Reports.VerificationFax!999|Policy.Reports.DeclinationNotice!999|Policy.Reports.OtherInterestForm!999|Policy.Reports.PostNotificationForm!5|Policy.Reports.ExcludedDriver!999|Policy.Reports.FairCreditReportingActNotice!999|Policy.Reports.EndorsementCoverageConfirmation!999|Policy.Reports.AddlIntEvidenceOfCov!999|Policy.Reports.AspxReports!999|Policy.Reports.RejectForm!999|Policy.Reports.DisclNot!999|Policy.Reports.CreateUMPDRejectFormYN!999|Policy.Reports.CreateMedRejectFormYN!999|Policy.Reports.AutoDedAuth!999|Policy.Reports.CreatePIPRejectFormYN!15|Policy.Reports.CreateNonStackedRejectFormYN!999|Policy.Reports.CARejectMandatoryCoverage!15|Policy.Reports.CreateDiscountFormYN!999|Policy.Reports.CreateMedicalBenefitsFormYN!999|Policy.Reports.CreateDriverCourseFormYN!999|Policy.Reports.CreateFPBRejectFormYN!999|Policy.Reports.CreateTortFormYN!999|Policy.Reports.CreateExMedRejectFormYN!999|Policy.Reports.Reconsideration!999|Policy.Reports.CreateStmtOfResidencyYN!15|Policy.Reports.CreateConsentForCreditReportYN!15|Policy.Reports.CreateConsentToRateYN!15|Policy.Reports.CreateMilitaryDiscountFormYN!999|Policy.Reports.CreateCovOptionsYN!999|Policy.Reports.CreateRateDeterminationYN!999|Policy.Reports.CreateUMNoticeYN!15" maxlength="">
									</input>
									<input name="PolicyVersion" type="hidden" value="2" maxlength="">
									</input>
									<input name="__ActivityType" type="hidden" value="NewBusiness" maxlength="">
									</input>
									<input name="__ActivityTypeID" type="hidden" value="2" maxlength="">
									</input>
									<input name="__VIEWSTATE" type="hidden" value="/wEPDwULLTIwNjUyODkyMDVkGAEFHl9fQ29udHJvbHNSZXF1aXJlUG9zdEJhY2tLZXlfXxYBBQhidG5QcmludHhD1Nqa42ttAXoay39HhmG7oUNW" maxlength="">
									</input>
									<input name="PolicyReportsCreateUMUIMRejectFormYN" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicyReportsCreateStandardRejectFormYN" type="hidden" value="N" maxlength="">
									</input>
									<input name="PolicyReportsCreatePIPRejectFormYN" type="hidden" value="" maxlength="">
									</input>
									<input name="PolicyReportsCARejectMandatoryCoverage" type="hidden" value="" maxlength="">
									</input>
									<input name="__EVENTVALIDATION" type="hidden" value="/wEWAgLZ3YCRCgL+6YyoCq/Oku95E+mZA9hloWdKKFSvQ4iV" maxlength="">
									</input>
									<input name="PolicyReportsQuoteSummary" type="checkbox" value="Y" maxlength="">
									</input>
									<input name="PolicyReportsApplication" type="checkbox" value="Y" maxlength="">
									</input>
									<input name="PolicyReportsPostNotificationForm" type="checkbox" value="Y" maxlength="">
									</input>
									<input name="btnPrint" type="image" value="" maxlength="">
									</input>
									<input name="btnClose" type="image" value="" maxlength="">
									</input>
								</form>
							</forms>
						</result>
					</httpstep>
					<httpstep name="SelectQuoteApplication" id="1762947984">
						<script protocol="http" method="GET" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="Form1">
							<url><![CDATA[https://<=this.getvariable(urlpersonal)>/home/ReportMenu.aspx?context=<=this.getvariable(contextid)>&activitytype=2]]></url>
						</script>
						<result errormessage="Error getting Quote application. Please contact EZLynx Support Team for further assistance." onerror="QuoteProposalError" ignoreerror="true">
							<verify />
							<forms />
							<frames />
						</result>
					</httpstep>
					<httpstep name="ReportMenu" id="668787196">
						<script protocol="http" method="post" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="Form1" id="669643526">
							<url id="1663946997"><![CDATA[https://<=this.getvariable(urlpersonal)>/home/ReportMenu.aspx?context=<=this.getvariable(contextid)>&activitytype=2]]></url>
							<parameter type="hidden" name="__EVENTTARGET" value="GenericPostBacker" maxlength="" id="345371479">
							</parameter>
							<parameter type="hidden" name="__EVENTARGUMENT" value="p" maxlength="" id="1075428660">
							</parameter>
							<parameter type="checkbox" name="__FormIndexing" value="1" maxlength="" id="1283157895">
							</parameter>
							<parameter type="hidden" name="__FieldList" value="Policy.Reports.QuoteSummary!5|Policy.Reports.Application!5|Policy.Reports.VerificationFax!999|Policy.Reports.DeclinationNotice!999|Policy.Reports.OtherInterestForm!5|Policy.Reports.ScheduledPersonalProperty!999|Policy.Reports.PostNotificationForm!5|Policy.Reports.MortgageeDeclarations!999|Policy.Reports.FairCreditReportingActNotice!999|Policy.Reports.CoverageConfirmation!999|Policy.Reports.EndorsementCoverageConfirmation!999|Policy.Reports.MineSubsidenceForm!999|Policy.Reports.AspxReports!999|Policy.Reports.SqFootCostGuide!999|Policy.Reports.ApplicationQuoteSummary!999|Policy.Reports.TXBillofRights!15|Policy.Reports.DisclNot!999|Policy.Reports.AutoDedAuth!999|Policy.Reports.AddlIntEvidenceOfCov!999|Policy.Reports.MineSubsidenceApp!999|Policy.Reports.FloodNotice!999|Policy.Reports.OptionalCoverage!999|Policy.Reports.TXFungiApplication!999|Policy.Reports.CreateWindHailExclusionYN!15|" maxlength="" id="1589578307">
							</parameter>
							<parameter type="checkbox" name="PolicyVersion" value="10" maxlength="" id="1254063258">
							</parameter>
							<parameter type="checkbox" name="__ActivityType" value="NewBusiness" maxlength="" id="1616796983">
							</parameter>
							<parameter type="checkbox" name="__ActivityTypeID" value="2" maxlength="" id="1614032446">
							</parameter>
							<condition name="newcondition" expression="{1 EQUAL 1}" appliesto="" id="434631237">
								<parameter type="checkbox" name="PolicyReportsApplication" value="Y" maxlength="" id="1162355471">
								</parameter>
								<parameter type="checkbox" name="PolicyReportsTXBillofRights" value="N" maxlength="" id="727349450">
								</parameter>
							</condition>
						</script>
						<result errormessage="Error generating Quote application. Please contact EZLynx Support Team for further assistance." onerror="QuoteProposalError" ignoreerror="true" id="1317893296">
							<verify id="898049220">
								<form name="NONAME1" id="807781779">
								</form>
							</verify>
							<forms id="329386618">
								<form name="NONAME1" id="1936870363">
								</form>
							</forms>
						</result>
					</httpstep>
					<httpstep name="GetApplicationPDF" id="1620288759">
						<script protocol="http" method="GET" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="application/pdf" form="">
							<url><![CDATA[https://<=this.getvariable(urlpersonal)>/Print/<=this.substringregex(<=prevhttpstep.getoutputtextbuffer()>,  Print[/], [/]PrintView)>/PrintView.pdf?]]></url>
						</script>
						<result errormessage="Error getting PDF document. Please contact EZLynx Support Team for further assistance." onerror="QuoteProposalError" ignoreerror="true">
							<verify />
							<forms />
							<frames />
						</result>
					</httpstep>
					<condition name="Quote Summary" expression="{1 EQUAL 1}" appliesto="">
						<httpstep name="ReportMenuQuoteSummary" id="1448908982966287">
							<script protocol="http" method="post" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="Form1">
								<url><![CDATA[https://<=this.getvariable(urlpersonal)>/home/ReportMenu.aspx?context=<=this.getvariable(contextid)>&activitytype=2]]></url>
								<parameter type="hidden" name="__EVENTTARGET" value="GenericPostBacker" maxlength="">
								</parameter>
								<parameter type="hidden" name="__EVENTARGUMENT" value="p" maxlength="">
								</parameter>
								<parameter type="checkbox" name="__FormIndexing" value="1" maxlength="" id="1658047754">
								</parameter>
								<parameter type="hidden" name="__FieldList" value="Policy.Reports.QuoteSummary!5|Policy.Reports.Application!5|Policy.Reports.VerificationFax!999|Policy.Reports.DeclinationNotice!999|Policy.Reports.OtherInterestForm!5|Policy.Reports.ScheduledPersonalProperty!999|Policy.Reports.PostNotificationForm!5|Policy.Reports.MortgageeDeclarations!999|Policy.Reports.FairCreditReportingActNotice!999|Policy.Reports.CoverageConfirmation!999|Policy.Reports.EndorsementCoverageConfirmation!999|Policy.Reports.MineSubsidenceForm!999|Policy.Reports.AspxReports!999|Policy.Reports.SqFootCostGuide!999|Policy.Reports.ApplicationQuoteSummary!999|Policy.Reports.TXBillofRights!15|Policy.Reports.DisclNot!999|Policy.Reports.AutoDedAuth!999|Policy.Reports.AddlIntEvidenceOfCov!999|Policy.Reports.MineSubsidenceApp!999|Policy.Reports.FloodNotice!999|Policy.Reports.OptionalCoverage!999|Policy.Reports.TXFungiApplication!999|Policy.Reports.CreateWindHailExclusionYN!15|" maxlength="">
								</parameter>
								<parameter type="checkbox" name="PolicyVersion" value="10" maxlength="">
								</parameter>
								<parameter type="checkbox" name="__ActivityType" value="NewBusiness" maxlength="" id="2081238906">
								</parameter>
								<parameter type="checkbox" name="__ActivityTypeID" value="2" maxlength="" id="477656861">
								</parameter>
								<condition name="newcondition" expression="{1 EQUAL 1}" appliesto="">
									<parameter type="checkbox" name="PolicyReportsQuoteSummary" value="Y" maxlength="">
									</parameter>
									<parameter type="checkbox" name="PolicyReportsTXBillofRights" value="N" maxlength="" id="1001286547">
									</parameter>
								</condition>
							</script>
							<result errormessage="Error generating Quote application. Please contact EZLynx Support Team for further assistance." onerror="QuoteProposalError" ignoreerror="true">
								<verify>
									<form name="NONAME1">
									</form>
								</verify>
								<forms>
									<form name="NONAME1">
									</form>
								</forms>
							</result>
						</httpstep>
						<httpstep name="GetApplicationPDFQuoteSummary" id="1144746758">
							<script protocol="http" method="GET" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="application/pdf" form="" id="1026781020">
								<url id="443428128"><![CDATA[https://<=this.getvariable(urlpersonal)>/Print/<=this.substringregex(<=prevhttpstep.getoutputtextbuffer()>,  Print[/], [/]PrintView)>/PrintView.pdf?]]></url>
							</script>
							<result errormessage="Error getting PDF document. Please contact EZLynx Support Team for further assistance." onerror="QuoteProposalError" ignoreerror="true" id="630604147">
								<verify id="259462791" />
								<forms id="113440481" />
								<frames id="1428008353" />
							</result>
						</httpstep>
					</condition>
					<condition name="GenPDF" expression="{{{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL 0}
AND
{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL -1}
AND
{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL null}
AND
{&lt;=java.callstringmethod(indexOf, &lt;=SubmitGoToSummary.getoutputtextbuffer()&gt;, Policy has not been rated)&gt; EQUAL -1}}
AND
{{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL 0}
AND
{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL -1}
AND
{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL null}
AND
{&lt;=java.callstringmethod(indexOf, &lt;=SubmitGoToSummary.getoutputtextbuffer()&gt;, Policy has not been rated)&gt; EQUAL -1}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}}" appliesto="">
						<functionstep name="SetQuoteAppDocument" id="391352493" prompt="no" errormessage="Error setting quote application document. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.settxdocument(Quote Application, 1, <=GetApplicationPDF.getoutputbytesbase64()>)>

<=this.settxdocument(Quote Proposal, 1, <=GetApplicationPDFQuoteSummary.getoutputbytesbase64()>)>]]></functionstep>
					</condition>
					<elseifcondition name="SetQPHO4" expression="{&lt;=java.callstringmethod(indexOf, &lt;=SubmitGoToSummary.getoutputtextbuffer()&gt;, Policy has not been rated)&gt; NOTEQUAL -1}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL TX}
AND
{&lt;=this.getvariable(coverage_policytype)&gt; EQUAL HO4}" appliesto="">
						<condition name="newcondition" expression="{{{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL 0}
AND
{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL -1}
AND
{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL null}
AND
{&lt;=java.callstringmethod(indexOf, &lt;=ReSubmitDwellinInfo.getoutputtextbuffer()&gt;, Policy has not been rated)&gt; EQUAL -1}}
AND
{{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL 0}
AND
{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL -1}
AND
{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL null}
AND
{&lt;=java.callstringmethod(indexOf, &lt;=ReSubmitDwellinInfo.getoutputtextbuffer()&gt;, Policy has not been rated)&gt; EQUAL -1}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; NOTEQUAL CA}}" appliesto="">
							<functionstep name="SetQuoteAppDocumentHO4TX" id="881974099" prompt="no" errormessage="Error setting quote application document. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.settxdocument(Quote Application, 1, <=GetApplicationPDF.getoutputbytesbase64()>)>

<=this.settxdocument(Quote Proposal, 1, <=GetApplicationPDFQuoteSummary.getoutputbytesbase64()>)>]]></functionstep>
						</condition>
					</elseifcondition>
					<condition name="Check For California State" expression="{{{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL 0}
AND
{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL -1}
AND
{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=GetApplicationPDFQuoteSummary.getoutputbytesbase64()&gt; NOTEQUAL null}}
AND
{{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL 0}
AND
{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL -1}
AND
{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=GetApplicationPDF.getoutputbytesbase64()&gt; NOTEQUAL null}}
AND
{&lt;=this.getvariable(dwellingstatecode)&gt; EQUAL CA}}" appliesto="">
						<functionstep name="SetQuoteAppDocument_CA" id="824564145" prompt="no" errormessage="Error setting quote application document. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.settxdocument(Quote Application, 1, <=GetApplicationPDF.getoutputbytesbase64()>)>

<=this.settxdocument(Quote Proposal, 1, <=GetApplicationPDFQuoteSummary.getoutputbytesbase64()>)>]]></functionstep>
					</condition>
				</condition>
			</condition>
			<condition name="SCC-2673- Quote Proposal" expression="{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 1}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 0}
OR
{&lt;=this.getprofilekeyvalue(Channel)&gt; EQUAL 16}" appliesto="">
				<condition name="Test URL" expression="{&lt;=this.getprofilekeyvalue(environment)&gt; EQUAL UAT}" appliesto="" id="2058712374">
					<functionstep name="SetTestURLQPNew" id="1699326766" prompt="no" errormessage="Error setting test account URL. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(urlqp, https://safesite.qa.safeco.com/dpec/signin.asp?)>

<=this.setvariable(urlqp1, https://quote.qa.safeco.com/personal/tacml)>

<=this.setvariable(qpurl, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/QuoteInfo/com.safeco_QuoteSummaryURL, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
				</condition>
				<elsecondition>
					<functionstep name="SetProdURLQPNew" id="481170284" prompt="no" errormessage="Error setting production account URL. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(urlqp1, https://quote.safeco.com/personal)>

<=this.setvariable(qpurl, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/QuoteInfo/com.safeco_QuoteSummaryURL, <=PostXML.getoutputtextbuffer()>)>)>]]></functionstep>
				</elsecondition>
				<httpstep name="GetLoginNew" id="1020204605">
					<script protocol="http" method="GET" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="" id="1490141381">
						<url id="1008812345"><![CDATA[<=this.getvariable(qpurl)>]]></url>
					</script>
					<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/loadmainpageerror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="QuoteProposalError" id="1456900010">
						<verify id="1482635863">
						</verify>
						<forms id="1920783967">
							<form name="frmsignin" id="488745409">
								<input name="hdnFormAction" type="hidden" value="" maxlength="" id="1583106033">
								</input>
								<input name="hdnXMLString" type="hidden" value="" maxlength="" id="576770170">
								</input>
								<input name="hdnFC" type="hidden" value="0" maxlength="" id="688540363">
								</input>
								<input name="hdnOriginalURL" type="hidden" value="OriginalURL=/tac/Consumer/Home/ReportDisplay.aspx&amp;PolicyGuid=e1971096-f2cf-47b6-b5af-100faaf35b6a&amp;ReportName=QuoteSummary" maxlength="" id="1229220372">
								</input>
								<input name="hdnNewSignOn" type="hidden" value="" maxlength="" id="407864195">
								</input>
								<input name="hdnFlexSignOn" type="hidden" value="" maxlength="" id="1614748979">
								</input>
								<input name="hdnIsInvalidUserID" type="hidden" value="" maxlength="" id="1021539633">
								</input>
								<input name="txtUserID" type="text" value="" maxlength="20" id="1013530161">
								</input>
								<input name="txtPassword" type="password" value="" maxlength="32" id="1536239054">
								</input>
								<input name="btnLogin" type="submit" value="Login" maxlength="" id="1077532850">
								</input>
							</form>
						</forms>
					</result>
				</httpstep>
				<condition name="Test URL" expression="{&lt;=this.getprofilekeyvalue(environment)&gt; EQUAL UAT}" appliesto="">
					<functionstep name="ExtractQPURLParams" id="1169247284" prompt="no" errormessage="Error setting test account URL. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(buffer, <=GetLoginNew.getoutputtextbuffer()>)>

<=this.setvariable(urlqpparam, <=this.substringregex(<=this.getvariable(buffer)>, OriginalURL[=], ["]\>)>)>]]></functionstep>
					<httpstep name="SubmitLoginNew" id="14163735564948488">
						<script protocol="http" method="post" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="text/html" form="frmsignin">
							<url><![CDATA[<=this.getvariable(urlqp)>OriginalURL=<=this.getvariable(urlqpparam)>]]></url>
							<parameter type="hidden" name="hdnFormAction" value="submit" maxlength="">
							</parameter>
							<parameter type="text" name="txtUserID" value="&lt;=this.getprofilekeyvalue(username)&gt;" maxlength="20">
							</parameter>
							<parameter type="password" name="txtPassword" value="&lt;=this.getprofilekeyvalue(password)&gt;" maxlength="32">
							</parameter>
							<parameter type="submit" name="btnLogin" value="Login" maxlength="">
							</parameter>
						</script>
						<result errormessage="&lt;=this.extractxpathvaluefromxml(/EZERRORS/login/usernamepassworderror, &lt;=this.getvariable(errorfile)&gt;)&gt;" onerror="QuoteProposalError">
							<verify>
							</verify>
						</result>
					</httpstep>
				</condition>
				<functionstep name="ExtractQPId" id="1328687590" prompt="no" errormessage="Error extracting QP ID. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(buffer, <=prevhttpstep.getoutputtextbuffer()>)>

<=this.setvariable(qpid, <=this.substringregex(<=this.getvariable(buffer)>, print[\/], [\/]PrintView[.]pdf)>)>]]></functionstep>
				<httpstep name="GetQPNew" id="936946448">
					<script protocol="http" method="GET" timeout="0" clientauthentication="no" httpauthentication="no" contenttype="application/pdf" form="" id="1833102574">
						<url id="1326739441"><![CDATA[<=this.getvariable(urlqp1)>/print/<=this.getvariable(qpid)>/PrintView.pdf]]></url>
					</script>
					<result errormessage="Error getting PDF document. Please contact EZLynx Support Team for further assistance." onerror="QuoteProposalError" ignoreerror="true" id="970663182">
						<verify id="542773124" />
						<forms id="1444436717" />
						<frames id="293605400" />
					</result>
				</httpstep>
				<condition name="GenPDF" expression="{&lt;=GetQPNew.getoutputbytesbase64()&gt; NOTEQUAL 0}
AND
{&lt;=GetQPNew.getoutputbytesbase64()&gt; NOTEQUAL -1}
AND
{&lt;=GetQPNew.getoutputbytesbase64()&gt; NOTEQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}
AND
{&lt;=GetQPNew.getoutputbytesbase64()&gt; NOTEQUAL null}" appliesto="" id="964250306">
					<functionstep name="SetQuoteAppNew" id="2025748846" prompt="no" errormessage="Error setting quote application document. Please contact Ezlynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.settxdocument(Quote Proposal, 1, <=GetQPNew.getoutputbytesbase64()>)>]]></functionstep>
				</condition>
			</condition>
		</condition>
	</condition>
	<elsecondition>
		<abortstep message="&lt;=this.extractxpathvaluefromxml(/EZERRORS/EZHOMEERRORS/premium/unknownpremiumerror, &lt;=this.getvariable(errorfile)&gt;)&gt;" name="BlankPremium" id="448416183" savetest="false" savetestvalues="false" />
	</elsecondition>
</condition>
<functionstep name="QuoteProposalError" id="2130400559" prompt="no" errormessage="" savetest="false" savetestvalues="false"><![CDATA[]]></functionstep>
<condition name="PresumedScoring" expression="{&lt;=this.getprofilekeyvalue(agency)&gt; EQUAL nrtagency}" appliesto="">
	<functionstep name="ResetCreditScore" id="1482989762" prompt="no" errormessage="Error setting credit. Please contact Ezlynx for futher support." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(creditscore_rt, No)>
]]></functionstep>
</condition>
<condition name="Carrier Mesages" expression="{&lt;=this.getvariable(CARRIERMESSAGE_CMA)&gt; EQUAL Yes}" appliesto="">
	<functionstep name="ExtractCarrierMessage_Home" id="319721524" prompt="no" errormessage="Error setting quote details. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(carriermsgref_rt, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/QuoteInfo/carrierMessages/@id,<=PostXML.getoutputtextbuffer()>)>)>


<=this.setvariable(carriermsghover_rt, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/QuoteInfo/carrierMessages/messageHover,<=PostXML.getoutputtextbuffer()>)>)>

<=this.setvariable(carriermsgtext_rt, <=this.extractxpathvaluefrombuffer(/ACORD/InsuranceSvcRs/HomePolicyQuoteInqRs/PersPolicy/QuoteInfo/carrierMessages/messageText,<=PostXML.getoutputtextbuffer()>)>)>
]]></functionstep>
</condition>
<condition name="RESULT XML" expression="{1 EQUAL 1}" appliesto="">
	<include url="quotescenario/resultxml.scx" />
</condition>
<condition name="Validate Result XML" expression="{&lt;=this.validatexmlwithxsd(&lt;=this.getexternalresource(xsd/EZLynxQuoteResult.xsd)&gt;, &lt;=this.getvariable(resultxml)&gt;)&gt; EQUAL &lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;}" appliesto="">
	<condition name="If Consumer Portal Live is false" expression="{&lt;=this.getvariable(consumerportallive)&gt; EQUAL false}" appliesto="" id="1702997045">
		<exitstep message="Annual Premium = $&lt;=this.getvariable(homepremium_rt)&gt;


&lt;=this.setresultxml(&lt;=this.getvariable(resultxml)&gt;)&gt;
&lt;=this.setlastpage(&lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;" name="ExitPremium1" id="1678319132" savetest="false" savetestvalues="false" />
	</condition>
	<condition name="If Consumer Portal Live is true" expression="{&lt;=this.getvariable(consumerportallive)&gt; EQUAL true}" appliesto="">
		<exitstep message="Annual Premium = $&lt;=this.getvariable(homepremium_rt)&gt;

&lt;=this.setresultxml(&lt;=this.getvariable(resultxml)&gt;)&gt;
&lt;=this.setlastpage(&lt;=java.callstringmethod(anonymous, VK_BLANK)&gt;)&gt;" name="ExitPremium1CP" id="785606208" savetest="false" savetestvalues="false" />
	</condition>
</condition>
<elsecondition>
	<functionstep name="ResultXMLErrorMessage" id="761428584" prompt="no" errormessage="Error setting Result xml error message. Please contact EZLynx support for further assistance." savetest="false" savetestvalues="false"><![CDATA[<=this.setvariable(resultxmlerror, We are currently unable to display the Quote Proposal\, Payment plans\, Discounts and other details due to some internal issues\, your quote has been saved on carrier site. EZLynx support team has been notified of this issue.)>]]></functionstep>
	<condition name="If Consumer Portal Live is false" expression="{&lt;=this.getvariable(consumerportallive)&gt; EQUAL false}" appliesto="" id="351412788">
		<abortstep message="Annual Premium = $&lt;=this.getvariable(homepremium_rt)&gt;
&lt;br&gt;&lt;/br&gt;

&lt;=this.getvariable(resultxmlerror)&gt;" name="AbortPremium" id="1868253726" savetest="false" savetestvalues="false" />
	</condition>
	<condition name="If Consumer Portal Live is true" expression="{&lt;=this.getvariable(consumerportallive)&gt; EQUAL true}" appliesto="" id="1678415497">
		<abortstep message="Annual Premium = $&lt;=this.getvariable(homepremium_rt)&gt;
&lt;br&gt;&lt;br&gt;
&lt;=this.getvariable(resultxmlerror)&gt;" name="AbortPremiumCP" id="2027190015" savetest="false" savetestvalues="false" />
	</condition>
</elsecondition>
</playback>
